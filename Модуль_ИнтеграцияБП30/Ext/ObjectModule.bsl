
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

Перем Манифест 				Экспорт;
Перем ОбработкаОбъект 		Экспорт;
Перем ПараметрыКлиентСервер Экспорт;

Перем НомерИтерацииВызоваМодуля;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

Функция МетодСервера(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL)
	
	Возврат ОбработкаОбъект.МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4, 
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

Процедура Инициализировать(ИмяМодуля) Экспорт
	
	Если НомерИтерацииВызоваМодуля = Неопределено Тогда
		НомерИтерацииВызоваМодуля= 0;
	КонецЕсли;
	
	НомерИтерацииВызоваМодуля= НомерИтерацииВызоваМодуля + 1;
	
	Если Манифест = Неопределено Тогда
		ОбработкаОбъект.ЗаполнитьМанифест(ЭтотОбъект, ИмяМодуля);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьПеременные() Экспорт
	
	// Разрывается циклическая ссылка, для того чтобы исключить утечку памяти.
	// Модуль может быть вызван повторно во вложенных методах,
	// поэтому очищаем переменные, ТОЛЬКО если это начальная итерация вызова модуля.
	
	НомерИтерацииВызоваМодуля= НомерИтерацииВызоваМодуля - 1;
	
	Если НомерИтерацииВызоваМодуля = 0 Тогда
		ОбработкаОбъект= 	   Неопределено;
		ПараметрыКлиентСервер= Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриглашениеОтладки() Экспорт
	
	//// Удалите комментарий напротив оператора "ВызватьИсключение", чтобы получить приглашение для начала отладки модуля.
	//ВызватьИсключение "Нажмите кнопку ""Подробно"", а затем ""Конфигуратор"", чтобы начать отладку модуля!"; 
	
КонецПроцедуры

#КонецОбласти

#Область МАНИФЕСТ

// Все функции и процедуры тела модуля должны быть экспортными и добавлены в соответствующую структуру!

Функция ФункцииМодуля() Экспорт
	
	СтруктураМетодов= Новый Структура;
	
	// Шаблон: ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, <Имя функции>, <Параметры строкой>, <Вариант кэширования>, <Переопределение>);
	//ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НеИспользовать", Истина);
	//ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НаВремяВызова", Истина);
	//ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НаВремяСеанса", Истина);
	//...
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстыЗапросов",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаСчетаФактуры",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаНакладные",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_РеализацияТоваровУслуг",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_КорректировкаРеализации",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_ВозвратТоваровПоставщику",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_РеализацияОтгруженныхТоваров",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_АктОбОказанииПроизводственныхУслуг",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_РеализацияУслугПоПереработке",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_Накладные_ОтчетКомитентуОПродажах",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаСчетаНаОплату",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_СчетаНаОплату_СчетНаОплатуПокупателю",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_СчетаНаОплату_РеализацияТоваровУслуг",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТекстЗапроса_СчетаНаОплату_КорректировкаРеализации",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаАктыСверки",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстыЗапросовРасширение",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаСчетаФактурыРасширение",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаНакладныеРасширение",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаСчетаНаОплатуРасширение",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьТекстЗапросаДокументыОснованияСчетаФактурыВыданного",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗаменитьНедопустимыеСимволы", "НомерДокумента",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ОтрезатьПравуюЗапятую", "стр",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ДобавитьРазделитель", "Стр, Префикс = """"",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПреобразоватьСтрокуВСписокПолей", "структураАдреса",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьСвойствоXDTO", "Знач ДанныеXDTO, НаименованиеСвойства",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьЭлементСЗ", "СЗ, Представление",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоКСФ", "СсылкаНаОбъект",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоИсправление", "СсылкаНаОбъект",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоНакладная", "СсылкаНаОбъект",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СчетФактуранаАванс", "СФ",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ТаблицаЗначений_2_МассивСтруктур", "ТаблЗнач",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ВыделитьСлово", "ИсходнаяСтрока",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СократитьПредставлениеТелефона", "телефонСтрока",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ОснованиеОтчетКомитентаОПродажах_ОтчетОЗакупках", "ДокОснования,СчетФактура=Неопределено",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ИнициализацияТаблицыСтрокТовары", "ЭтоКСФ",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПредставлениеСтавкиНДС", "СтавкаНДС, ДляСФ = Ложь",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьМажорныйРазрядРелизаКонфигурации", "ВерсияКонфигурации",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьВидКИ", "ЮрФизЛицо, Юрадрес",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьКорпусКвартиру", "ЗданияИПомещения",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ддПолучитьНомерНаПечать", "СсылкаНаОбъект",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДанныеТЧ", "Документы, ЭтоКСФ = ложь,  ВалютаРегламентированногоУчета, КолонкаКодаТовара = ""Код"", ФормированиеСФ, СчетФактура = неопределено",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДанныеШапки", "Знач Документы, Знач СчетФактура = неопределено",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьБанковскийСчет", "Док",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьПодразделениеИзДокумента", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДанныеОбОснованииДляДиадок", "ИСФ",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьПредставлениеКонтрагентаДляАкта", "Организация, ДатаОперации",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьПечатнуюФормуСчетаНаОплату", "ДокССылка, ПараметрыОтправкиНаСогласование =  Неопределено, ФИОПодписанта = """"",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьПечатнуюФормуАктаСверки", "ДокССылка, ПараметрыОтправкиНаСогласование =  Неопределено, ФИОПодписанта = """"",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДанныеДляФормированияАктаСверки", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьПредставителяОрганизацииДляАктаСверки", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьПредставителяКонтрагентаДляАктаСверки", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДанныеТЧАктаСверки", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьСтруктуруДанныхТекущегоДоговораАктаСверки", "МассивДанныхПоДоговорам, ДоговорСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ИнициализироватьТЧДляСверки",,,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПредставлениеПредставителяДляШапки", "ПредставительОрганизации, ПредставлениеОрганизации",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПредставлениеРезультатовСверки", "ДатаОкончанияСверки, ПредставлениеОрганизации, ПредставлениеКонтрагента, ОрганизацияИтогСальдо, валютаДокумента",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "РазвернутоеПредставлениеСуммы", "Сумма, Валюта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьМетуСчетаНаОплату", "ДокументСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьМетуАктаСверки", "ДокументСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СформироватьМетуАктаВыполненныхРабот", "ДокументСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "СтруктурированноеПредставлениеОснования", "ДокСсылка",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьГоловноеЮрлицо", "ЮрФизЛицо",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "сформироватьДанныеДляПечати", "СсылкаНаОбъект, ЭтоКСФ",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьXmlAcceptanceCertificateContent", "ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗаполнитьКонтентXmlAcceptanceCertificate", "Content, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьInvoiceCorrectionContent", "ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗаполнитьКонтентInvoiceCorrection", "Content, ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьInvoiceContent", "ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗаполнитьКонтентInvoice", "Content, ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьXmlTorg12Content", "ДокСсылка, ПараметрыОтправкиНаСогласование, НомерЗаказа, ДопСведения, ФИОПодписанта",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьXmlUTDContent", "ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта, ТипДокумента", "НеИспользовать", Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоКонтактнаяИнформацияВXML", "Текст");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоВалютныйДокумент", "ДокументНаПроверку",,Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПодготовитьВТДляСпискаОтправкиДокументов", "ТипыДокументов, Запрос", "НеИспользовать", Истина);
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоСчетНаОплату", "СсылкаНаОбъект");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоЗаказПокупателя", "СсылкаНаОбъект");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЭтоКорректировкаРеализации", "СсылкаНаОбъект");
	
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьМассивСсылокРТУПоСчетуНаОплату", "СчетСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьМассивРасходныхНакладныхПоСчетуФактуреВыданному", "СчетФактураСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ОпределитьТипСчетФактуры", "ДокументСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьСсылкуСчетаФактурыВыданногоПоДокументуОснованию", "ДокументСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьДокОснованиеКорректировкиРеализации", "СсылкаНаОбъект");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьСчетНаОплатуНаОснованииРТУ", "ДокументСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьЗаказПокупателяНаОснованииРТУ", "ДокументСсылка");
	ОбработкаОбъект.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПолучитьСФОснованиеПоИСФ_КСФ", "ДокументСсылка");
	
	Возврат СтруктураМетодов;
	
КонецФункции

Функция ПроцедурыМодуля() Экспорт
	
	СтруктураМетодов= Новый Структура;
	
	// Шаблон: ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, <Имя процедуры>, <Параметры строкой>, <Переопределение>);
	//ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ПримерПроцедуры", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", Истина);
	//...
	ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ЗаполнитьСтруктурированноеОписаниеАдреса", "AddressContent, СведенияОбОрганизации, ЮрФизЛицо, ЮрАдрес, ДатаДокумента", Истина);
	ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ЗаполнитьСтруктурированноеОписаниеГрузоотправителяГрузополучателя", "OrganizationInfo, ЮрФизЛицо, ДатаДокумента, КастомныйАдрес = """"", Истина);
	ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ЗаполнитьСтруктурированоеОписаниеЮрФизЛица", "OrganizationInfo, ЮрФизЛицо, ДатаДокумента, БанковскийСчетОрганизации = Неопределено,  ЮрАдрес, АдресДляСФ = ложь, КППГрузоотправителя = """"", Истина);
	ОбработкаОбъект.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ЗаполнитьКонтентXmlTorg12", "Content, ДокССылка, ПараметрыОтправкиНаСогласование, НомерЗаказа, ДопСведения, ФИОПодписанта", Истина);
	
	Возврат СтруктураМетодов;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
//{ ТЕКСТЫ ЗАПРОСОВ

	//{ ПАКЕТНЫЙ ЗАПРОС ОТПРАВКА ДОКУМЕНТОВ
	
		Функция ПодготовитьВТДляСпискаОтправкиДокументов(ТипыДокументов, Запрос) Экспорт
			
			МассивВременныхТаблиц= Новый Массив;
			
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "1" ИЛИ ТипыДокументов = "2" ИЛИ ТипыДокументов = "5" Тогда
				ПодготовитьВТ_СЧФ_Основная(Запрос, МассивВременныхТаблиц);
				ПодготовитьВТ_УПД_СЧФДОП(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			КонецЕсли;
			
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "1" Тогда
				ПодготовитьВТ_Накладные(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "2" Тогда
				ПодготовитьВТ_СчетаФактуры(Запрос, МассивВременныхТаблиц, ТипыДокументов);
			КонецЕсли;
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "3" Тогда
				ПодготовитьВТ_СчетНаОплату(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "4" Тогда
				ПодготовитьВТ_АктСверкиВзаиморасчетов(Запрос, МассивВременныхТаблиц);
			КонецЕсли;
			
			Возврат МассивВременныхТаблиц;
			
		КонецФункции
		
		Процедура ПодготовитьВТ_Накладные(Запрос, МассивВременныхТаблиц)
			
			ПодготовитьВТ_Накладные_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_ВозвратПоставщику(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_РеализацияОтгруженныхТоваров(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_АктОбОказанииПроизводственныхУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_РеализацияУслугПоПереработке(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_Накладные_ОтчетКомитенту(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДСТовары) КАК СуммаНДСТовары,
				|	СУММА(ВложенныйЗапрос.СуммаНДСУслуги) КАК СуммаНДСУслуги
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ 	КАК Документ,
				|		Товары.СуммаНДС 		КАК СуммаНДСТовары,
				|		0				 		КАК СуммаНДСУслуги
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
				|			ПО ВТ_Основная.Документ = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
				|			ПО ВТ_Основная.Документ = Услуги.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСТовары, 0) КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСУслуги, 0) КАК СуммаНДСУслуги,
				|	""РеализацияТоваровУслуг"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД
				|ПОМЕСТИТЬ Накладные_РеализацияТоваровУслуг
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
			    Запрос.Выполнить();
				
				МассивВременныхТаблиц.Добавить("Накладные_РеализацияТоваровУслуг");
				
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_КорректировкаРеализации(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|			И (Документ.ВидОперации = ЗНАЧЕНИЕ(перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки))
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|			И (Документ.ВидОперации = ЗНАЧЕНИЕ(перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки))
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДСТовары) КАК СуммаНДСТовары,
				|	СУММА(ВложенныйЗапрос.СуммаНДСУслуги) КАК СуммаНДСУслуги
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ 	КАК Документ,
				|		Товары.СуммаНДС 		КАК СуммаНДСТовары,
				|		0				 		КАК СуммаНДСУслуги
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК Товары
				|			ПО ВТ_Основная.Документ = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК Услуги
				|			ПО ВТ_Основная.Документ = Услуги.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСТовары, 0) КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСУслуги, 0) КАК СуммаНДСУслуги,
				|	""КорректировкаРеализации"" КАК Тип,
				|	"""" КАК ФункцияУПД
				|ПОМЕСТИТЬ Накладные_КорректировкаРеализации
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
			Запрос.Выполнить();
				
			МассивВременныхТаблиц.Добавить("Накладные_КорректировкаРеализации");
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_ВозвратПоставщику(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ 	КАК Документ,
				|		Товары.СуммаНДС 		КАК СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК Товары
				|			ПО ВТ_Основная.Документ = Товары.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСТовары,
				|	0 КАК СуммаНДСУслуги,
				|	""ВозвратТоваровПоставщику"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД
				|ПОМЕСТИТЬ Накладные_ВозвратПоставщику
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("Накладные_ВозвратПоставщику");
			
		КонецПроцедуры
	
		Процедура ПодготовитьВТ_Накладные_РеализацияОтгруженныхТоваров(Запрос, МассивВременныхТаблиц)
		
			Запрос.Текст=
				"ВЫБРАТЬ
				|	Документ.Ссылка КАК Документ,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
				|	Документ.ДокументОтгрузки.ВалютаДокумента КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	Документ.ДокументОтгрузки,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияОтгруженныхТоваров КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента,
				|	Документ.ДокументОтгрузки.ВалютаДокумента,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	Документ.ДокументОтгрузки,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияОтгруженныхТоваров КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДСТовары) КАК СуммаНДСТовары,
				|	СУММА(ВложенныйЗапрос.СуммаНДСУслуги) КАК СуммаНДСУслуги
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ КАК Документ,
				|		Товары.СуммаНДС КАК СуммаНДСТовары,
				|		0 КАК СуммаНДСУслуги
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
				|			ПО ВТ_Основная.ДокументОтгрузки = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
				|			ПО ВТ_Основная.ДокументОтгрузки = Услуги.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСТовары, 0) КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСУслуги, 0) КАК СуммаНДСУслуги,
				|	""РеализацияОтгруженныхТоваров"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД
				|ПОМЕСТИТЬ Накладные_РеализацияОтгруженныхТоваров
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("Накладные_РеализацияОтгруженныхТоваров");
			
		КонецПроцедуры
	
		Процедура ПодготовитьВТ_Накладные_АктОбОказанииПроизводственныхУслуг(Запрос, МассивВременныхТаблиц)
		
			Запрос.Текст=
				"ВЫБРАТЬ
				|	Документ.Ссылка КАК Документ,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента,
				|	Документ.ВалютаДокумента,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	СУММА(Услуги.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК Услуги
				|		ПО ВТ_Основная.Документ = Услуги.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Основная.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	0 КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСУслуги,
				|	""АктОбОказанииПроизводственныхУслуг"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД
				|ПОМЕСТИТЬ Накладные_АктОбОказанииПроизводственныхУслуг
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("Накладные_АктОбОказанииПроизводственныхУслуг");
			
		КонецПроцедуры
	
		Процедура ПодготовитьВТ_Накладные_РеализацияУслугПоПереработке(Запрос, МассивВременныхТаблиц)
		
			Запрос.Текст=
				"ВЫБРАТЬ
				|	Документ.Ссылка КАК Документ,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента,
				|	Документ.ВалютаДокумента,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	СУММА(Услуги.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке.Услуги КАК Услуги
				|		ПО ВТ_Основная.Документ = Услуги.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Основная.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	0 КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСУслуги,
				|	""РеализацияУслугПоПереработке"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД
				|ПОМЕСТИТЬ Накладные_РеализацияУслугПоПереработке
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("Накладные_РеализацияУслугПоПереработке");
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_Накладные_ОтчетКомитенту(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаВознаграждения 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ КАК ФункцияУПД,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И Документ.СуммаВознаграждения <> 0
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаВознаграждения 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") 			КАК СостояниеОтправкиДополнительныхВПФ,
				|	Документ.Проведен 	КАК Проведен,
				|	Документ.Дата 		КАК Дата,
				|	Документ.Номер 		КАК Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) В (&СЧФДОП, &ДОП, &СЧФ_ДОП)
				|			ТОГДА &ДОП
				|		ИНАЧЕ """"
				|	КОНЕЦ,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
				|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
				|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойства_СтатусОтправляемыхВПФ)
				|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП_ДокументыОснования КАК УПД_СЧФДОП_ДокументыОснования
				|		ПО (Документ.Ссылка = УПД_СЧФДОП_ДокументыОснования.ДокументОснование)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И УПД_СЧФДОП_ДокументыОснования.ДокументОснование ЕСТЬ NULL 
				|	И Документ.СуммаВознаграждения <> 0
				|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВТ_Основная.Документ,
				|	СУММА(Товары.СуммаНДСВознаграждения) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
				|		ПО ВТ_Основная.Документ = Товары.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Основная.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ПОМЕСТИТЬ ВТ_ЕстьСЧФ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (СЧФ.Проведен)
				|ГДЕ
				|	НЕ ВТ_Основная.ОтпрНеПроведенные
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СЧФ_ДокументыОснования
				|		ПО ВТ_Основная.Документ = СЧФ_ДокументыОснования.ДокументОснование
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СЧФ
				|		ПО (СЧФ_ДокументыОснования.Ссылка = СЧФ.Ссылка)
				|			И (НЕ СЧФ.ПометкаУдаления)
				|ГДЕ
				|	ВТ_Основная.ОтпрНеПроведенные
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСУслуги,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	0 КАК СуммаНДСТовары,
				|	""ОтчетКомитентуОПродажах"" КАК Тип,
				|	ВТ_Основная.ФункцияУПД КАК ФункцияУПД
				|ПОМЕСТИТЬ Накладные_ОтчетКомитенту
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьСЧФ КАК ВТ_ЕстьСЧФ
				|		ПО ВТ_Основная.Документ = ВТ_ЕстьСЧФ.Документ
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|ГДЕ
				|	(ВТ_ЕстьСЧФ.Документ ЕСТЬ НЕ NULL 
				|			ИЛИ ВТ_Основная.ФормироватьУПД <> &СЧФДОП)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ЕстьСЧФ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("Накладные_ОтчетКомитенту");
			
		КонецПроцедуры

		Процедура ПодготовитьВТ_СЧФ_Основная(Запрос, МассивВременныхТаблиц) Экспорт
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ДанныеДокументов.Ссылка КАК Документ,
				|	ДанныеДокументов.Организация КАК Организация,
				|	ЕСТЬNULL(ОтчетКомиссионераОПродажах.Контрагент, ДанныеДокументов.Контрагент) КАК Контрагент,
				|	ДанныеДокументов.ВалютаДокумента КАК Валюта,
				|	ДанныеДокументов.СуммаДокумента КАК СуммаДокументаЗначение,
				|	ДанныеДокументов.Проведен КАК Проведен,
				|	ДанныеДокументов.ПометкаУдаления КАК ПометкаУдаления,
				|	ДанныеДокументов.Дата КАК Дата,
				|	ДанныеДокументов.ПредставлениеНомера КАК Номер,
				|	ДанныеДокументов.ВидСчетаФактуры,
				|	ДанныеДокументов.Исправление
				|ПОМЕСТИТЬ ВТ_ДанныеДокументов
				|ИЗ
				|	Документ.СчетФактураВыданный КАК ДанныеДокументов
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
				|		ПО ДанныеДокументов.ДокументОснование = ОтчетКомиссионераОПродажах.Ссылка
				|ГДЕ
				|	ДанныеДокументов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Контрагент
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ДанныеДокументов.Документ,
				|	ДанныеДокументов.Организация,
				|	ДанныеДокументов.Контрагент,
				|	ДанныеДокументов.Валюта,
				|	ДанныеДокументов.СуммаДокументаЗначение,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") КАК ID,
				|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
				|	ДанныеДокументов.Проведен,
				|	ДанныеДокументов.ПометкаУдаления,
				|	ДанныеДокументов.Дата,
				|	ДанныеДокументов.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД) КАК ФормироватьУПД,
				|	ДанныеДокументов.ВидСчетаФактуры,
				|	ДанныеДокументов.Исправление,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокументов КАК ДанныеДокументов
				|		ПО ОтборОрганизации.Организация = ДанныеДокументов.Организация
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (ДанныеДокументов.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (ДанныеДокументов.Документ = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И ДанныеДокументов.Проведен
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ДанныеДокументов.Документ,
				|	ДанныеДокументов.Организация,
				|	ДанныеДокументов.Контрагент,
				|	ДанныеДокументов.Валюта,
				|	ДанныеДокументов.СуммаДокументаЗначение,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
				|	"""",
				|	ДанныеДокументов.Проведен,
				|	ДанныеДокументов.ПометкаУдаления,
				|	ДанныеДокументов.Дата,
				|	ДанныеДокументов.Номер,
				|	ЕСТЬNULL(ОтборКонтрагенты.ФормироватьУПД, ОтборОрганизации.ФормироватьУПД),
				|	ДанныеДокументов.ВидСчетаФактуры,
				|	ДанныеДокументов.Исправление,
				|	ОтборОрганизации.ОтпрНеПроведенные
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокументов КАК ДанныеДокументов
				|		ПО ОтборОрганизации.Организация = ДанныеДокументов.Организация
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (ДанныеДокументов.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (ДанныеДокументов.Документ = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И НЕ ДанныеДокументов.ПометкаУдаления
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.ID,
				|	ВТ_Основная.СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	ВТ_Основная.ФормироватьУПД,
				|	ВТ_Основная.ВидСчетаФактуры,
				|	ВТ_Основная.Исправление,
				|	ДокументыОснования.ДокументОснование,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") КАК ДокументОснованиеID
				|ПОМЕСТИТЬ ДанныеДокументаИДокументыОснования
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
				|		ПО ВТ_Основная.Документ = ДокументыОснования.Ссылка
				|			И (ДокументыОснования.ДокументОснование <> НЕОПРЕДЕЛЕНО)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (ДокументыОснования.ДокументОснование = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммыДокОснованийЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ КАК Документ,
				|		Товары.СуммаНДС КАК СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		АгентскиеУслуги.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК АгентскиеУслуги
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = АгентскиеУслуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Товары.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК Товары
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК Услуги
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Товары.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК Товары
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК Услуги
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке.Услуги КАК Услуги
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ДанныеДокументаИДокументыОснования.Документ,
				|		Товары.СуммаНДС
				|	ИЗ
				|		ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
				|			ПО ДанныеДокументаИДокументыОснования.ДокументОснование = Товары.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДанныеДокументаИДокументыОснования.Документ,
				|	ДанныеДокументаИДокументыОснования.Организация,
				|	ДанныеДокументаИДокументыОснования.Контрагент,
				|	ДанныеДокументаИДокументыОснования.СуммаДокументаЗначение,
				|	ДанныеДокументаИДокументыОснования.Валюта,
				|	ДанныеДокументаИДокументыОснования.ID КАК ID_,
				|	ДанныеДокументаИДокументыОснования.СостояниеОтправкиДополнительныхВПФ КАК СостояниеОтправкиДополнительныхВПФ,
				|	ДанныеДокументаИДокументыОснования.Проведен КАК Проведен,
				|	ДанныеДокументаИДокументыОснования.Дата КАК Дата,
				|	ДанныеДокументаИДокументыОснования.Номер КАК Номер,
				|	ЕСТЬNULL(СуммыДокОснованийЗначение.СуммаНДС, 0) КАК СуммаНДСТовары,
				|	0 КАК СуммаНДСУслуги,
				|	""СчетФактураВыданный"" КАК Тип,
				|	ДанныеДокументаИДокументыОснования.ФормироватьУПД КАК ФормироватьУПД,
				|	ДанныеДокументаИДокументыОснования.ВидСчетаФактуры КАК ВидСчетаФактуры,
				|	ДанныеДокументаИДокументыОснования.Исправление КАК Исправление,
				|	ДанныеДокументаИДокументыОснования.ДокументОснование КАК ДокументОснование,
				|	ДанныеДокументаИДокументыОснования.ДокументОснованиеID КАК ДокументОснованиеID
				|ПОМЕСТИТЬ СЧФ_Основная
				|ИЗ
				|	ДанныеДокументаИДокументыОснования КАК ДанныеДокументаИДокументыОснования
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыДокОснованийЗначение КАК СуммыДокОснованийЗначение
				|		ПО ДанныеДокументаИДокументыОснования.Документ = СуммыДокОснованийЗначение.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ДанныеДокументаИДокументыОснования
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммыДокОснованийЗначение";
										
			Запрос.Выполнить();
			
		КонецПроцедуры
					
		Процедура ПодготовитьВТ_УПД_СЧФДОП(Запрос, МассивВременныхТаблиц, ТипыДокументов) Экспорт
			
			Запрос.Текст=
			"ВЫБРАТЬ
			|	СЧФ_Основная.Документ
			|ПОМЕСТИТЬ ВТ_ПодходящиеСЧФ
			|ИЗ
			|	СЧФ_Основная КАК СЧФ_Основная
			|ГДЕ
			|	СЧФ_Основная.ФормироватьУПД = &СЧФДОП
			|	И СЧФ_Основная.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
			|	И НЕ СЧФ_Основная.Исправление
			|
			|СГРУППИРОВАТЬ ПО
			|	СЧФ_Основная.Документ
			|
			|ИМЕЮЩИЕ
			|	МИНИМУМ(ВЫБОР
			|			КОГДА СЧФ_Основная.ID_ = СЧФ_Основная.ДокументОснованиеID
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) = ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СЧФ_Основная.Документ,
			|	СЧФ_Основная.Организация,
			|	СЧФ_Основная.Контрагент,
			|	СЧФ_Основная.СуммаДокументаЗначение,
			|	СЧФ_Основная.СуммаНДСТовары,
			|	СЧФ_Основная.СуммаНДСУслуги,
			|	СЧФ_Основная.Валюта,
			|	СЧФ_Основная.Проведен,
			|	СЧФ_Основная.Дата,
			|	СЧФ_Основная.Номер,
			|	СЧФ_Основная.ID_,
			|	&СЧФДОП КАК ФункцияУПД,
			|	""СчетФактураВыданный"" КАК Тип,
			|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
			|	ЛОЖЬ КАК ЭтоСчет
			|ПОМЕСТИТЬ УПД_СЧФДОП
			|ИЗ
			|	ВТ_ПодходящиеСЧФ КАК ВТ_ПодходящиеСЧФ
			|		ЛЕВОЕ СОЕДИНЕНИЕ СЧФ_Основная КАК СЧФ_Основная
			|		ПО ВТ_ПодходящиеСЧФ.Документ = СЧФ_Основная.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СЧФ_Основная.ДокументОснование
			|ПОМЕСТИТЬ УПД_СЧФДОП_ДокументыОснования
			|ИЗ
			|	ВТ_ПодходящиеСЧФ КАК ВТ_ПодходящиеСЧФ
			|		ЛЕВОЕ СОЕДИНЕНИЕ СЧФ_Основная КАК СЧФ_Основная
			|		ПО ВТ_ПодходящиеСЧФ.Документ = СЧФ_Основная.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ПодходящиеСЧФ";
			
			Запрос.Выполнить();
			
			Если ПустаяСтрока(ТипыДокументов) ИЛИ ТипыДокументов = "5" Тогда
				МассивВременныхТаблиц.Добавить("УПД_СЧФДОП");
			КонецЕсли;
			
		КонецПроцедуры

		Процедура ПодготовитьВТ_СчетаФактуры(Запрос, МассивВременныхТаблиц, ТипыДокументов)
			
			Запрос.Текст=
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СЧФ_Основная.Документ,
			|	СЧФ_Основная.Организация,
			|	СЧФ_Основная.Контрагент,
			|	СЧФ_Основная.СуммаДокументаЗначение,
			|	СЧФ_Основная.СуммаНДСТовары,
			|	СЧФ_Основная.СуммаНДСУслуги,
			|	СЧФ_Основная.Валюта,
			|	СЧФ_Основная.Проведен,
			|	СЧФ_Основная.Дата,
			|	СЧФ_Основная.Номер,
			|	СЧФ_Основная.ID_,
			|	ВЫБОР
			|		КОГДА СЧФ_Основная.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
			|				И НЕ СЧФ_Основная.Исправление
			|				И СЧФ_Основная.ФормироватьУПД В (&СЧФДОП, &СЧФ, &СЧФ_ДОП)
			|			ТОГДА &СЧФ
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК ФункцияУПД,
			|	""СчетФактураВыданный"" КАК Тип,
			|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
			|	ЛОЖЬ КАК ЭтоСчет
			|ПОМЕСТИТЬ СчетФактураВыданный
			|ИЗ
			|	СЧФ_Основная КАК СЧФ_Основная
			|		ЛЕВОЕ СОЕДИНЕНИЕ УПД_СЧФДОП КАК УПД_СЧФДОП
			|		ПО СЧФ_Основная.Документ = УПД_СЧФДОП.Документ
			|ГДЕ
			|	УПД_СЧФДОП.Документ ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ СЧФ_Основная";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("СчетФактураВыданный");
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетНаОплату(Запрос, МассивВременныхТаблиц)
			
			ПодготовитьВТ_СчетНаОплату_СчетНаОплатуПокупателю(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_СчетНаОплату_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц);
			ПодготовитьВТ_СчетНаОплату_КорректировкаРеализации(Запрос, МассивВременныхТаблиц);
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетНаОплату_СчетНаОплатуПокупателю(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
			    "ВЫБРАТЬ
				|	Документ.Ссылка КАК Документ,
				|	Документ.Организация,
				|	Документ.Контрагент,
				|	Документ.СуммаДокумента  КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
				|ГДЕ
				|	ОтборОрганизации.ФормироватьСчетНаОсновании = 0
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	СУММА(Товары.СуммаНДС) КАК СуммаНДС
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю.Товары КАК Товары
				|		ПО ВТ_Основная.Документ = Товары.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Основная.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСТовары,
				|	0 КАК СуммаНДСУслуги,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.Проведен,
				|	ВТ_Основная.Дата,
				|	ВТ_Основная.Номер,
				|	""СчетНаОплату"" КАК Тип,
				|	ВТ_Основная.ID КАК ID_,
				|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
				|	"""" КАК ФункцияУПД
				|ПОМЕСТИТЬ СчетНаОплату_СчетНаОплатуПокупателю
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("СчетНаОплату_СчетНаОплатуПокупателю");
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетНаОплату_РеализацияТоваровУслуг(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен 			КАК Проведен,
				|	Документ.Дата 				КАК Дата,
				|	Документ.Номер 				КАК Номер
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
				|ГДЕ
				|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
				|	И НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен 			КАК Проведен,
				|	Документ.Дата 				КАК Дата,
				|	Документ.Номер 				КАК Номер
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
				|ГДЕ
				|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
				|	И ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДСТовары) КАК СуммаНДСТовары,
				|	СУММА(ВложенныйЗапрос.СуммаНДСУслуги) КАК СуммаНДСУслуги
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ КАК Документ,
				|		Товары.СуммаНДС 	 КАК СуммаНДСТовары,
				|		0				 	 КАК СуммаНДСУслуги
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
				|			ПО ВТ_Основная.Документ = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
				|			ПО ВТ_Основная.Документ = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		АгентскиеУслуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК АгентскиеУслуги
				|			ПО ВТ_Основная.Документ = АгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСТовары, 0) КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСУслуги, 0) КАК СуммаНДСУслуги,
				|	""СчетНаОплату""	 		КАК Тип,
				|	"""" КАК ФункцияУПД
				|ПОМЕСТИТЬ СчетНаОплату_РасходнаяНакладная
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("СчетНаОплату_РасходнаяНакладная");
			
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_СчетНаОплату_КорректировкаРеализации(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен 			КАК Проведен,
				|	Документ.Дата 				КАК Дата,
				|	Документ.Номер 				КАК Номер
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
				|ГДЕ
				|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
				|	И НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	Документ.СуммаДокумента 	КАК СуммаДокументаЗначение,
				|	Документ.ВалютаДокумента 	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен 			КАК Проведен,
				|	Документ.Дата 				КАК Дата,
				|	Документ.Номер 				КАК Номер
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
				|ГДЕ
				|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
				|	И ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ВложенныйЗапрос.Документ КАК Документ,
				|	СУММА(ВложенныйЗапрос.СуммаНДСТовары) КАК СуммаНДСТовары,
				|	СУММА(ВложенныйЗапрос.СуммаНДСУслуги) КАК СуммаНДСУслуги
				|ПОМЕСТИТЬ СуммаНДСЗначение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВТ_Основная.Документ КАК Документ,
				|		Товары.СуммаНДС 	 КАК СуммаНДСТовары,
				|		0 					 КАК СуммаНДСУслуги
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК Товары
				|			ПО ВТ_Основная.Документ = Товары.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		Услуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК Услуги
				|			ПО ВТ_Основная.Документ = Услуги.Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ВТ_Основная.Документ,
				|		0,
				|		АгентскиеУслуги.СуммаНДС
				|	ИЗ
				|		ВТ_Основная КАК ВТ_Основная
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК АгентскиеУслуги
				|			ПО ВТ_Основная.Документ = АгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	ВТ_Основная.СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСТовары, 0) КАК СуммаНДСТовары,
				|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДСУслуги, 0) КАК СуммаНДСУслуги,
				|	""СчетНаОплату""	 		КАК Тип,
				|	"""" КАК ФункцияУПД
				|ПОМЕСТИТЬ СчетНаОплату_КорректировкаРеализации
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
				|		ПО ВТ_Основная.Документ = СуммаНДСЗначение.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ СуммаНДСЗначение";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("СчетНаОплату_КорректировкаРеализации");
			
		КонецПроцедуры
		
		Процедура ПодготовитьВТ_АктСверкиВзаиморасчетов(Запрос, МассивВременныхТаблиц)
			
			Запрос.Текст=
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Документ.Ссылка КАК Документ,
				|	Документ.Организация КАК Организация,
				|	Документ.Контрагент КАК Контрагент,
				|	Документ.ВалютаДокумента КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен,
				|	Документ.Дата,
				|	Документ.Номер
				|ПОМЕСТИТЬ ВТ_Основная
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСверкиВзаиморасчетов КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (Документ.Проведен)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|ГДЕ
				|	НЕ ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Документ.Ссылка 			КАК Документ,
				|	Документ.Организация 		КАК Организация,
				|	Документ.Контрагент 		КАК Контрагент,
				|	""""					 	КАК Валюта,
				|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") 	КАК ID,
				|	Документ.Проведен 			КАК Проведен,
				|	Документ.Дата 				КАК Дата,
				|	Документ.Номер 				КАК Номер
				|ИЗ
				|	ОтборОрганизации КАК ОтборОрганизации
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСверкиВзаиморасчетов КАК Документ
				|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
				|			И (Документ.Организация = ОтборОрганизации.Организация)
				|			И (НЕ Документ.ПометкаУдаления)
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
				|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
				|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
				|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
				|ГДЕ
				|	ОтборОрганизации.ОтпрНеПроведенные
				|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Основная.Документ,
				|	ВТ_Основная.Организация,
				|	ВТ_Основная.Контрагент,
				|	0 							КАК СуммаДокументаЗначение,
				|	ВТ_Основная.Валюта,
				|	ВТ_Основная.ID КАК ID_,
				|	""""						КАК СостояниеОтправкиДополнительныхВПФ,
				|	ВТ_Основная.Проведен 	КАК Проведен,
				|	ВТ_Основная.Дата 		КАК Дата,
				|	ВТ_Основная.Номер 		КАК Номер,
				|	0 							КАК СуммаНДСТовары,
				|	0 							КАК СуммаНДСУслуги,
				|	""АктСверкиВзаиморасчетов""	КАК Тип,
				|	"""" КАК ФункцияУПД
				|ПОМЕСТИТЬ АктСверкиВзаиморасчетов
				|ИЗ
				|	ВТ_Основная КАК ВТ_Основная
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Основная";
										
		    Запрос.Выполнить();
			
			МассивВременныхТаблиц.Добавить("АктСверкиВзаиморасчетов");
			
		КонецПроцедуры
		
	//} ПАКЕТНЫЙ ЗАПРОС ОТПРАВКА ДОКУМЕНТОВ

	Функция ПолучитьТекстыЗапросов() Экспорт
		
		ТекстыЗапросовВСтруктуре=	Новый Структура;
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаСчетаФактуры", МетодСервера("Модуль_ИнтеграцияБП30","ПолучитьТекстЗапросаСчетаФактуры"));
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаНакладные", 	  МетодСервера("Модуль_ИнтеграцияБП30","ПолучитьТекстЗапросаНакладные"));
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаСчетаНаОплату",МетодСервера("Модуль_ИнтеграцияБП30","ПолучитьТекстЗапросаСчетаНаОплату"));
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаАктыСверки",	  МетодСервера("Модуль_ИнтеграцияБП30","ПолучитьТекстЗапросаАктыСверки"));
		
		Возврат ТекстыЗапросовВСтруктуре;
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаСчетаФактуры() Экспорт
		
		Возврат
		
		Новый Структура("СчетаФактуры_СчетФактураВыданный",
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация КАК Организация,
		|	Документ.Контрагент КАК Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	0 КАК СуммаНДСЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.ПредставлениеНомера КАК Номер,
		|	""СчетФактураВыданный"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	Документ.МоментВремени КАК МоментВремени
		|ПОМЕСТИТЬ СчетаФактуры_СчетФактураВыданный
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	0,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.ПредставлениеНомера,
		|	""СчетФактураВыданный"",
		|	"""",
		|	"""",
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"")
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаАктыСверки() Экспорт
		
		Возврат
		
		Новый Структура("АктыСверки_АктСверкиВзаиморасчетов",
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация КАК Организация,
		|	Документ.Контрагент КАК Контрагент,
		|	0 КАК СуммаДокументаЗначение,
		|	0 КАК СуммаНДСЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	""АктСверкиВзаиморасчетов"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	Документ.МоментВремени КАК МоментВремени
		|ПОМЕСТИТЬ АктыСверки_АктСверкиВзаиморасчетов
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСверкиВзаиморасчетов КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	0,
		|	0,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	""АктСверкиВзаиморасчетов"",
		|	"""",
		|	"""",
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСверкиВзаиморасчетов КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"")
		
	КонецФункции
		
	Функция ПолучитьТекстЗапросаНакладные() Экспорт
		
		СтруктураЗапроса= Новый Структура;
		
		СтруктураЗапроса.Вставить("Накладные_РеализацияТоваровУслуг" 			 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_РеализацияТоваровУслуг"));
		СтруктураЗапроса.Вставить("Накладные_КорректировкаРеализации" 			 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_КорректировкаРеализации"));
		СтруктураЗапроса.Вставить("Накладные_ВозвратТоваровПоставщику"			 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_ВозвратТоваровПоставщику"));
		СтруктураЗапроса.Вставить("Накладные_РеализацияОтгруженныхТоваров" 		 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_РеализацияОтгруженныхТоваров"));
		СтруктураЗапроса.Вставить("Накладные_АктОбОказанииПроизводственныхУслуг" , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_АктОбОказанииПроизводственныхУслуг"));
		СтруктураЗапроса.Вставить("Накладные_РеализацияУслугПоПереработке"		 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_РеализацияУслугПоПереработке"));
		СтруктураЗапроса.Вставить("Накладные_ОтчетКомитентуОПродажах"			 , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_Накладные_ОтчетКомитентуОПродажах"));
		
		Возврат СтруктураЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_РеализацияТоваровУслуг() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") КАК ID,
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") КАК СостояниеОтправкиДополнительныхВПФ,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеДокумента.Документ КАК Документ,
		|		Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|			ПО ДанныеДокумента.Документ = Товары.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		Услуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
		|			ПО ДанныеДокумента.Документ = Услуги.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		АгентскиеУслуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК АгентскиеУслуги
		|			ПО ДанныеДокумента.Документ = АгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""РеализацияТоваровУслуг"" КАК Тип,
		|	ДанныеДокумента.ID,
		|	ДанныеДокумента.СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_РеализацияТоваровУслуг
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_КорректировкаРеализации() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") КАК ID,
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") КАК СостояниеОтправкиДополнительныхВПФ,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ СтатусОтправляемыхВПФ.Значение ПОДОБНО ""%[НУ]%"")
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ СтатусОтправляемыхВПФ.Значение ПОДОБНО ""%[НУ]%"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеДокумента.Документ КАК Документ,
		|		Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК Товары
		|			ПО ДанныеДокумента.Документ = Товары.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		Услуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК Услуги
		|			ПО ДанныеДокумента.Документ = Услуги.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""КорректировкаРеализации"" КАК Тип,
		|	ДанныеДокумента.ID,
		|	ДанныеДокумента.СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_КорректировкаРеализации
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_ВозвратТоваровПоставщику() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.ВалютаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") КАК ID,
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") КАК СостояниеОтправкиДополнительныхВПФ,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """"),
		|	ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """"),
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК СтатусОтправляемыхВПФ
		|		ПО (Документ.Ссылка = СтатусОтправляемыхВПФ.Объект)
		|			И (СтатусОтправляемыхВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И (ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|			ИЛИ ЕСТЬNULL(СтатусОтправляемыхВПФ.Значение, """") ПОДОБНО ""%[НУ]%"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	СУММА(Товары.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК Товары
		|		ПО ДанныеДокумента.Документ = Товары.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	0 КАК СуммаНДСУслуги,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""ВозвратТоваровПоставщику"" КАК Тип,
		|	ДанныеДокумента.ID,
		|	ДанныеДокумента.СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_ВозвратТоваровПоставщику
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_РеализацияОтгруженныхТоваров() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ДокументОтгрузки.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени,
		|	Документ.ДокументОтгрузки
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияОтгруженныхТоваров КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ДокументОтгрузки.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени,
		|	Документ.ДокументОтгрузки
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияОтгруженныхТоваров КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеДокумента.Документ КАК Документ,
		|		Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|			ПО ДанныеДокумента.ДокументОтгрузки = Товары.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		Услуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
		|			ПО ДанныеДокумента.ДокументОтгрузки = Услуги.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""РеализацияОтгруженныхТоваров"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_РеализацияОтгруженныхТоваров
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_АктОбОказанииПроизводственныхУслуг() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	СУММА(Услуги.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК Услуги
		|		ПО ДанныеДокумента.Документ = Услуги.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""АктОбОказанииПроизводственныхУслуг"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_АктОбОказанииПроизводственныхУслуг
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_РеализацияУслугПоПереработке() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	СУММА(Услуги.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке.Услуги КАК Услуги
		|		ПО ДанныеДокумента.Документ = Услуги.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""РеализацияУслугПоПереработке"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_РеализацияУслугПоПереработке
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_Накладные_ОтчетКомитентуОПродажах() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаВознаграждения КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаВознаграждения,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадок)
		|ГДЕ
		|	ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	СУММА(Товары.СуммаНДСВознаграждения) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
		|		ПО ДанныеДокумента.Документ = Товары.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""ОтчетКомитентуОПродажах"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ Накладные_ОтчетКомитентуОПродажах
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаСчетаНаОплату() Экспорт
		
		СтруктураЗапроса= Новый Структура;
		
		СтруктураЗапроса.Вставить("СчетаНаОплату_СчетНаОплатуПокупателю" , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_СчетаНаОплату_СчетНаОплатуПокупателю"));
		СтруктураЗапроса.Вставить("СчетаНаОплату_РеализацияТоваровУслуг" , МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_СчетаНаОплату_РеализацияТоваровУслуг"));
		СтруктураЗапроса.Вставить("СчетаНаОплату_КорректировкаРеализации", МетодСервера("Модуль_ИнтеграцияБП30","ТекстЗапроса_СчетаНаОплату_КорректировкаРеализации"));
		
		Возврат СтруктураЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапроса_СчетаНаОплату_СчетНаОплатуПокупателю() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
		|ГДЕ
		|	ОтборОрганизации.ФормироватьСчетНаОсновании = 0
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	СУММА(Товары.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю.Товары КАК Товары
		|		ПО ДанныеДокумента.Документ = Товары.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""СчетНаОплату"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ СчетаНаОплату_СчетНаОплатуПокупателю
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_СчетаНаОплату_РеализацияТоваровУслуг() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
		|ГДЕ
		|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
		|	И НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
		|ГДЕ
		|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
		|	И ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеДокумента.Документ КАК Документ,
		|		Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|			ПО ДанныеДокумента.Документ = Товары.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		Услуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
		|			ПО ДанныеДокумента.Документ = Услуги.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		АгентскиеУслуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК АгентскиеУслуги
		|			ПО ДанныеДокумента.Документ = АгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""СчетНаОплату"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ СчетаНаОплату_РеализацияТоваровУслуг
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	Функция ТекстЗапроса_СчетаНаОплату_КорректировкаРеализации() Экспорт
		
		Возврат
		
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента КАК СуммаДокументаЗначение,
		|	Документ.ВалютаДокумента КАК Валюта,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (Документ.Проведен)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
		|ГДЕ
		|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
		|	И НЕ ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка,
		|	Документ.Организация,
		|	Документ.Контрагент,
		|	Документ.СуммаДокумента,
		|	Документ.ВалютаДокумента,
		|	Документ.Проведен,
		|	Документ.Дата,
		|	Документ.Номер,
		|	Документ.МоментВремени
		|ИЗ
		|	ОтборОрганизации КАК ОтборОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Документ
		|		ПО (Документ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|			И (Документ.Организация = ОтборОрганизации.Организация)
		|			И (НЕ Документ.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборКонтрагенты КАК ОтборКонтрагенты
		|		ПО (Документ.Контрагент = ОтборКонтрагенты.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ИдентификаторДокументаВДиадок
		|		ПО (Документ.Ссылка = ИдентификаторДокументаВДиадок.Объект)
		|			И (ИдентификаторДокументаВДиадок.Свойство = &ИдентификаторДокументаВДиадокСч)
		|ГДЕ
		|	ОтборОрганизации.ФормироватьСчетНаОсновании = 1
		|	И ОтборОрганизации.ОтпрНеПроведенные
		|	И ЕСТЬNULL(ИдентификаторДокументаВДиадок.Значение, """") = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ СуммаНДСЗначение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеДокумента.Документ КАК Документ,
		|		Товары.СуммаНДС КАК СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК Товары
		|			ПО ДанныеДокумента.Документ = Товары.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		Услуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК Услуги
		|			ПО ДанныеДокумента.Документ = Услуги.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеДокумента.Документ,
		|		АгентскиеУслуги.СуммаНДС
		|	ИЗ
		|		ДанныеДокумента КАК ДанныеДокумента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК АгентскиеУслуги
		|			ПО ДанныеДокумента.Документ = АгентскиеУслуги.Ссылка) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Документ,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.СуммаДокументаЗначение,
		|	ЕСТЬNULL(СуммаНДСЗначение.СуммаНДС, 0) КАК СуммаНДСЗначение,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Проведен,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	""СчетНаОплату"" КАК Тип,
		|	"""" КАК ID,
		|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
		|	ДанныеДокумента.МоментВремени
		|ПОМЕСТИТЬ СчетаНаОплату_КорректировкаРеализации
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНДСЗначение КАК СуммаНДСЗначение
		|		ПО ДанныеДокумента.Документ = СуммаНДСЗначение.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СуммаНДСЗначение"
		
	КонецФункции
	
	
	Функция ПолучитьТекстыЗапросовРасширение() Экспорт
		
		ТекстыЗапросовВСтруктуре = Новый Структура;
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаСчетаФактуры", 	ПолучитьТекстЗапросаСчетаФактурыРасширение());
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаНакладные", 		ПолучитьТекстЗапросаНакладныеРасширение());
		ТекстыЗапросовВСтруктуре.Вставить("ТекстЗапросаСчетаНаОплату",	ПолучитьТекстЗапросаСчетаНаОплатуРасширение());
				
		Возврат ТекстыЗапросовВСтруктуре;
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаСчетаФактурыРасширение() Экспорт
		
		ТекстЗапросаСчетаФактуры=	
		//{
			"ВЫБРАТЬ
			|	СчетФактураВыданныйДокументыОснования.Ссылка 				КАК Документ,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.Организация 	КАК Организация,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.Контрагент 	КАК Контрагент,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.СуммаДокумента КАК СуммаДокументаЗначение,
			|	0 КАК СуммаНДСТовары,
			|	0 КАК СуммаНДСУслуги,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.ВалютаДокумента КАК Валюта,
			|	ДополнительныеСведения.Значение КАК ID_,
			|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
            |	СчетФактураВыданныйДокументыОснования.Ссылка.Проведен,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.Дата,
			|	СчетФактураВыданныйДокументыОснования.Ссылка.ПредставлениеНомера КАК Номер,
			|	""СчетФактураВыданный"" КАК Тип
			|ИЗ
			|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|		ПО СчетФактураВыданныйДокументыОснования.Ссылка = ДополнительныеСведения.Объект
			|			И (ДополнительныеСведения.Свойство = &ИдентификаторДокументаВДиадок)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ фильтрПоОрганизациям КАК фильтрПоОрганизациям
			|		ПО СчетФактураВыданныйДокументыОснования.Ссылка.Организация = фильтрПоОрганизациям.Организация
			|ГДЕ
			|	(фильтрПоОрганизациям.ОтпрНеПроведенные
			|				И СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ
			|			ИЛИ НЕ фильтрПоОрганизациям.ОтпрНеПроведенные
			|				И СчетФактураВыданныйДокументыОснования.Ссылка.Проведен)
			|	И (СчетФактураВыданныйДокументыОснования.ДокументОснование = &РеализацияСсылка
			|			ИЛИ СчетФактураВыданныйДокументыОснования.Ссылка = &СсылкаНаСФ)
			|	";
						
		//}
		
		Возврат ТекстЗапросаСчетаФактуры;
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаНакладныеРасширение() Экспорт
		
		ТекстЗапросаНакладные=	
		//{
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Ссылка КАК Документ,
			|	РеализацияТоваровУслуг.Организация КАК Организация,
			|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
			|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокументаЗначение,
			|	ЕСТЬNULL(СУММА(ТаблицаТоваров.СуммаНДС), 0) КАК СуммаНДСТовары,
			|	ЕСТЬNULL(СУММА(ТаблицаУслуг.СуммаНДС), 0) КАК СуммаНДСУслуги,
			|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
			|	МАКСИМУМ(ЗначенияСвойствОбъектов.Значение) КАК ID_,
			|	МАКСИМУМ(ДополнительныеСведения_ВПФ.Значение) КАК СостояниеОтправкиДополнительныхВПФ,
			|	РеализацияТоваровУслуг.Проведен,
			|	РеализацияТоваровУслуг.Дата,
			|	РеализацияТоваровУслуг.Номер,
			|	""РеализацияТоваровУслуг"" КАК Тип
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
			|		ПО РеализацияТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
			|			И (ЗначенияСвойствОбъектов.Свойство = &ИдентификаторДокументаВДиадок)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения_ВПФ
			|		ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеСведения_ВПФ.Объект
			|			И (ДополнительныеСведения_ВПФ.Свойство = &ИдентификаторСвойстваСтатусОтправляемыхВПФ)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ фильтрПоОрганизациям КАК фильтрПоОрганизациям
			|		ПО РеализацияТоваровУслуг.Организация = фильтрПоОрганизациям.Организация
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
			|			СУММА(РеализацияТоваровУслугУслуги.СуммаНДС) КАК СуммаНДС
			|		ИЗ
			|			Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
			|		
			|		СГРУППИРОВАТЬ ПО
			|			РеализацияТоваровУслугУслуги.Ссылка) КАК ТаблицаУслуг
			|		ПО РеализацияТоваровУслуг.Ссылка = ТаблицаУслуг.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
			|			СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС
			|		ИЗ
			|			Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|		
			|		СГРУППИРОВАТЬ ПО
			|			РеализацияТоваровУслугТовары.Ссылка) КАК ТаблицаТоваров
			|		ПО РеализацияТоваровУслуг.Ссылка = ТаблицаТоваров.Ссылка
			|ГДЕ
			|	(фильтрПоОрганизациям.ОтпрНеПроведенные
			|				И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
			|			ИЛИ НЕ фильтрПоОрганизациям.ОтпрНеПроведенные
			|				И РеализацияТоваровУслуг.Проведен)
			|	И РеализацияТоваровУслуг.Ссылка = &РеализацияСсылка
			|
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТоваровУслуг.Ссылка,
			|	РеализацияТоваровУслуг.Организация,
			|	РеализацияТоваровУслуг.Контрагент,
			|	РеализацияТоваровУслуг.СуммаДокумента,
			|	РеализацияТоваровУслуг.ВалютаДокумента,
			|	РеализацияТоваровУслуг.Проведен,
			|	РеализацияТоваровУслуг.Дата,
			|	РеализацияТоваровУслуг.Номер
			|
			|";
		//}	
		
		Возврат ТекстЗапросаНакладные;
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаСчетаНаОплатуРасширение() Экспорт
		
		ТекстЗапросаСчетаНаОплату=	
		//{
			"ВЫБРАТЬ
			|	СчетНаОплатуПокупателю.Ссылка КАК Документ,
			|	СчетНаОплатуПокупателю.Организация КАК Организация,
			|	СчетНаОплатуПокупателю.Контрагент КАК Контрагент,
			|	СчетНаОплатуПокупателю.СуммаДокумента КАК СуммаДокументаЗначение,
			|	ЕСТЬNULL(СУММА(ТоварныеСтроки.СуммаНДС), 0) КАК СуммаНДСТовары,
			|	ЕСТЬNULL(СУММА(ТоварныеСтроки.СуммаНДСУслуги), 0) КАК СуммаНДСУслуги,
			|	СчетНаОплатуПокупателю.ВалютаДокумента КАК Валюта,
			|	ДополнительныеСведения.Значение КАК ID_,
			|	"""" КАК СостояниеОтправкиДополнительныхВПФ,
			|	СчетНаОплатуПокупателю.Проведен,
			|	СчетНаОплатуПокупателю.Дата,
			|	СчетНаОплатуПокупателю.Номер,
			|	""СчетНаОплату"" КАК Тип
			|ИЗ
			|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|		ПО СчетНаОплатуПокупателю.Ссылка = ДополнительныеСведения.Объект
			|			И (ДополнительныеСведения.Свойство = &ИдентификаторДокументаВДиадокСч)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ фильтрПоОрганизациям КАК фильтрПоОрганизациям
			|		ПО СчетНаОплатуПокупателю.Организация = фильтрПоОрганизациям.Организация
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ТоварыТЧ.Ссылка КАК Ссылка,
			|			ТоварыТЧ.СуммаНДС КАК СуммаНДС,
			|			0 КАК СуммаНДСУслуги
			|		ИЗ
			|			Документ.СчетНаОплатуПокупателю.Товары КАК ТоварыТЧ) КАК ТоварныеСтроки
			|		ПО (ТоварныеСтроки.Ссылка = СчетНаОплатуПокупателю.Ссылка)
			|ГДЕ
			|	СчетНаОплатуПокупателю.ПометкаУдаления = ЛОЖЬ
			|	И СчетНаОплатуПокупателю.Ссылка = &СчетСсылка
			|	И фильтрПоОрганизациям.ФормироватьСчетНаОсновании = 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ДополнительныеСведения.Значение,
			|	СчетНаОплатуПокупателю.Организация,
			|	СчетНаОплатуПокупателю.Контрагент,
			|	СчетНаОплатуПокупателю.СуммаДокумента,
			|	СчетНаОплатуПокупателю.ВалютаДокумента,
			|	СчетНаОплатуПокупателю.Ссылка,
			|	СчетНаОплатуПокупателю.Проведен,
			|	СчетНаОплатуПокупателю.Дата,
			|	СчетНаОплатуПокупателю.Номер
			|
			|";
		//}
		
		Возврат ТекстЗапросаСчетаНаОплату;
		
	КонецФункции
	
	Функция ПолучитьТекстЗапросаДокументыОснованияСчетаФактурыВыданного() Экспорт
		
		Возврат "ВЫБРАТЬ РАЗЛИЧНЫЕ
		        |	СчетФактураВыданныйДокументыОснования.ДокументОснование
		        |ИЗ
		        |	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		        |ГДЕ
		        |	СчетФактураВыданныйДокументыОснования.Ссылка = &СсылкаНаОбъект";
		
	КонецФункции

//} ТЕКСТЫ ЗАПРОСОВ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
	
	Функция ЗаменитьНедопустимыеСимволы(НомерДокумента) Экспорт
		
		НедопустимыеЗнаки = "\/:*?""<>|";
		Пока СтрДлина(НедопустимыеЗнаки)>0 Цикл
			ТекСимвол = Лев(НедопустимыеЗнаки,1);
			Если Найти(НомерДокумента,ТекСимвол)<>0 Тогда
				НомерДокумента = СтрЗаменить(НомерДокумента,ТекСимвол,"_");
			КонецЕсли;
			НедопустимыеЗнаки = Сред(НедопустимыеЗнаки,2);
		КонецЦикла;
		
		Возврат НомерДокумента;
		
	КонецФункции
	
	Функция СкопироватьСтруктуру(Знач СтруктураИсходник)
		
		Возврат МетодСервера("Модуль_ИнтеграцияУниверсальный", "СкопироватьСтруктуру", СтруктураИсходник);

	КонецФункции
	
	функция ОтрезатьПравуюЗапятую(стр) Экспорт
		результат = сокрЛП(стр);
		пока прав(результат, 1)="," цикл 
			Результат = лев(результат, стрДлина(результат)-1);
		КонецЦикла;	
		
		возврат результат;
	КонецФункции
	
	функция ДобавитьРазделитель(Стр, Префикс = "") Экспорт
		возврат ?(ЗначениеЗаполнено(стр), Префикс+сокрЛП(Стр)+", ", "");
	конецфункции
	
	Функция ПреобразоватьСтрокуВСписокПолей(структураАдреса) Экспорт
		попытка 
			возврат УправлениеКонтактнойИнформацией.ПреобразоватьСтрокуВСписокПолей(структураАдреса);
		Исключение 
			возврат УправлениеКонтактнойИнформациейКлиентСервер.ПреобразоватьСтрокуВСписокПолей(структураАдреса);
		КонецПопытки;
	КонецФункции
	
	Функция ПолучитьСвойствоXDTO(Знач ДанныеXDTO, НаименованиеСвойства) Экспорт
		
		ЗначениеСвойства=	"";
		
		Если ТипЗнч(ДанныеXDTO) = Тип("ОбъектXDTO") Тогда
			
			МассивСвойств= 		СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НаименованиеСвойства, ".");
			Для каждого ИскомоеСвойство Из МассивСвойств Цикл
				Если НЕ ДанныеXDTO.Свойства().Получить(ИскомоеСвойство) = Неопределено Тогда
					
					ЗначениеСвойства=	ДанныеXDTO[ИскомоеСвойство];
					ДанныеXDTO=			ДанныеXDTO[ИскомоеСвойство];
					
					Если НЕ ТипЗнч(ДанныеXDTO) = Тип("ОбъектXDTO") Тогда
						Если НЕ ЗначениеЗаполнено(ЗначениеСвойства) Тогда
							Возврат "";
						Иначе
							Возврат ЗначениеСвойства;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					Возврат "";
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Возврат ЗначениеСвойства;
		
	КонецФункции
	
	Функция ПолучитьЭлементСЗ(СЗ, Представление) Экспорт
		Для каждого Элемент из СЗ цикл 
			если Элемент.представление = представление тогда 
				возврат Элемент.Значение
			КонецЕсли;
		КонецЦикла;
		
		возврат "";
	КонецФункции	
	
	Функция ЭтоКСФ(СсылкаНаОбъект) Экспорт
		
		Возврат Строка(СсылкаНаОбъект.ВидСчетаФактуры) = "Корректировочный"
		
	КонецФункции
	
	Функция ЭтоИсправление(СсылкаНаОбъект) Экспорт
		
		Возврат СсылкаНаОбъект.Исправление
		
	КонецФункции	
	
	Функция ЭтоНакладная(СсылкаНаОбъект) Экспорт
		
		Возврат ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		
	КонецФункции	
	
	Функция ЭтоСчетНаОплату(СсылкаНаОбъект) Экспорт
		
		Возврат (НЕ Метаданные.Документы.Найти("СчетНаОплатуПокупателю") = Неопределено
				  И ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СчетНаОплатуПокупателю"));
				  
	КонецФункции
	
	Функция ЭтоЗаказПокупателя(СсылкаНаОбъект) Экспорт
		
		Возврат Ложь;
				  
	КонецФункции
	
	Функция ЭтоКорректировкаРеализации(СсылкаНаОбъект) Экспорт
		
		Возврат (НЕ Метаданные.Документы.Найти("КорректировкаРеализации") = Неопределено
				  И ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.КорректировкаРеализации"));	
	КонецФункции
	
	Функция СчетФактуранаАванс(СФ) Экспорт
		
		Возврат   ТипЗнч(СФ) = Тип("ДокументСсылка.СчетФактураВыданный") 
				И Метаданные.Перечисления.Найти("ВидСчетаФактурыВыставленного") <> Неопределено 
				И ( СФ.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыВыставленного.НаАванс") 
				ИЛИ СФ.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитента")); 
					
	КонецФункции	
	
	Функция ТаблицаЗначений_2_МассивСтруктур(ТаблЗнач) Экспорт
		Результат = Новый Массив;
		СтрокаКлючей = "";
		Для Каждого Колонка из ТаблЗнач.Колонки Цикл
			СтрокаКлючей = СтрокаКлючей +?(ПустаяСтрока(СтрокаКлючей),"",",")+ Колонка.Имя;
		КонецЦикла;                                                        
		Если ТипЗнч(ТаблЗнач) = Тип("ТаблицаЗначений") тогда
			
			Для Каждого Стр Из ТаблЗнач Цикл
				ЭлементСписка = Новый  Структура(СтрокаКлючей);
				ЗаполнитьЗначенияСвойств(ЭлементСписка,Стр);
				Результат.Добавить(ЭлементСписка);             
			КонецЦикла;
		КонецЕсли;
		Возврат Результат;
	КонецФункции
	
	Функция ВыделитьСлово(ИсходнаяСтрока) Экспорт
		
		Буфер = СокрЛ(ИсходнаяСтрока);
		ПозицияПослПробела = Найти(Буфер, " ");
		
		Если ПозицияПослПробела = 0 Тогда
			ИсходнаяСтрока = "";
			Возврат Буфер;
		КонецЕсли;
		
		ВыделенноеСлово = СокрЛП(Лев(Буфер, ПозицияПослПробела));
		ИсходнаяСтрока = Сред(ИсходнаяСтрока, ПозицияПослПробела + 1);
		
		Возврат ВыделенноеСлово;
		
	КонецФункции
	
	функция СократитьПредставлениеТелефона(телефонСтрока) Экспорт
		
		если (стрДлина(телефонСтрока)<=20) или (найти(ТелефонСтрока, ";")=0)  тогда 
			//резать нечего
			возврат ТелефонСтрока
		КонецЕсли;	
		
		НовыйТелефон = "";
		СтарыйТелефон = ТелефонСтрока;
		пока найти(СтарыйТелефон, ";")>0 Цикл
			Если (НовыйТелефон="") или (СтрДлина(НовыйТелефон)+найти(СтарыйТелефон, ";")<=20) тогда 
				//добавим кусок
				НовыйТелефон =?(НовыйТелефон="", "",  НовыйТелефон+";")+лев(СтарыйТелефон, найти(СтарыйТелефон, ";")-1);
				СтарыйТелефон = прав(СтарыйТелефон, СтрДлина(СтарыйТелефон) -  найти(СтарыйТелефон, ";"));
			Иначе 
				СтарыйТелефон = "";
			КонецЕсли;	
		КонецЦикла;	
		
		
		Возврат НовыйТелефон;
	КонецФункции	
	
	Функция ОснованиеОтчетКомитентаОПродажах_ОтчетОЗакупках(ДокОснования,СчетФактура=Неопределено) Экспорт
		Если СчетФактура = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		Если ДокОснования.Количество()= 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		Если ТипЗнч(ДокОснования[0].Значение) <> Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ОтчетКомитентуОПродажах = ДокОснования[0].Значение;
		
		Если ОтчетКомитентуОПродажах.Метаданные().Реквизиты.Найти("ВидОперации") = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ОтчетКомитентуОПродажах.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках
			И ЗначениеЗаполнено(СчетФактура.Продавец)
			И (СчетФактура.Контрагент <> СчетФактура.Продавец 
				ИЛИ СчетФактура.КодВидаОперации = "27")	Тогда // Сводный комиссионный счет-фактура, п 3.1 статьи 169 НК
			Возврат Истина;
		КонецЕсли;
		Возврат Ложь;	 
	КонецФункции
	
	Функция ОснованиеОтчетКомиссионераОПродажах(ДокОснования, СчетФактура=Неопределено) Экспорт
		
		Если СчетФактура = Неопределено ИЛИ ДокОснования.Количество()= 0 Тогда
			Возврат Ложь;
		КонецЕсли;
				
		Если ТипЗнч(ДокОснования[0].Значение) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
			 
	КонецФункции
	
	Функция ОснованиеАР_НачислениеАренднойПлаты(ДокОснования)
		
		Если ТипЗнч(ДокОснования[0].Значение) = Тип("ДокументСсылка.АР_НачислениеАренднойПлаты") Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	КонецФункции
	
	Функция ИнициализацияТаблицыСтрокТовары(ЭтоКСФ) Экспорт
		
		Товары= Новый ТаблицаЗначений();
		
		Товары.Колонки.Добавить("Номенклатура");
		Товары.Колонки.Добавить("КодНоменклатуры");  //для торг-12
		Товары.Колонки.Добавить("СтранаПроисхождения");
		Товары.Колонки.Добавить("НомерГТД");
		Товары.Колонки.Добавить("Количество");
		Товары.Колонки.Добавить("ЕдиницаИзмерения");
		Товары.Колонки.Добавить("КодЕдиницыИзмерения"); // для торг-12
		Товары.Колонки.Добавить("ВидУпаковки");//Для торг-12
		Товары.Колонки.Добавить("КоличествоВОдномМесте");//Для торг-12
		Товары.Колонки.Добавить("КоличествоМест");//Для торг-12
		Товары.Колонки.Добавить("Цена");
		Товары.Колонки.Добавить("СтавкаНДС");
		Товары.Колонки.Добавить("СуммаНДС");
		Товары.Колонки.Добавить("Сумма");
		Товары.Колонки.Добавить("СуммаВключаетНДС");
		Товары.Колонки.Добавить("ЭтоУслуга");
		Товары.Колонки.Добавить("Масса"); //Для торг-12
		Товары.Колонки.Добавить("ВсегоВРублях"); //Для торг-12
		Товары.Колонки.Добавить("НДСВРублях"); //Для торг-12
		Товары.Колонки.Добавить("СуществуютЗаписиРублевыхСумм"); //Для торг-12
		Товары.Колонки.Добавить("ПризнакТоварРаботаУслуга"); // для УПД
				
		Если ЭтоКСФ тогда 
			Товары.Колонки.Добавить("СтранаПроисхожденияДоИзменения");
			Товары.Колонки.Добавить("НомерГТДДоИзменения");
			Товары.Колонки.Добавить("КоличествоДоИзменения");
			Товары.Колонки.Добавить("ЕдиницаИзмеренияДоИзменения");
			Товары.Колонки.Добавить("ЦенаДоИзменения");
			Товары.Колонки.Добавить("СтавкаНДСДоИзменения");
			Товары.Колонки.Добавить("СуммаНДСДоИзменения");
			Товары.Колонки.Добавить("СуммаДоИзменения");
			Товары.Колонки.Добавить("ВсегоВРубляхДоИзменения"); //Для торг-12
			Товары.Колонки.Добавить("НДСВРубляхДоИзменения"); //Для торг-12
			Товары.Колонки.Добавить("СуществуютЗаписиРублевыхСуммДоИзменения"); //Для торг-12
		КонецЕсли;	
		
		Возврат Товары;
		
	КонецФункции
	
	Функция ПредставлениеСтавкиНДС(СтавкаНДС, ДляСФ = Ложь) Экспорт
		
		Если ТипЗнч(СтавкаНДС) = Тип("Строка") Тогда
			Возврат СтавкаНДС;
		ИначеЕсли НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
			Возврат "";
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.БезНДС тогда
			Возврат ?(ДляСФ, "без НДС", "");
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС0 тогда
			Возврат "0";
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС10 тогда
			Возврат "10";
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС18 тогда
			Возврат "18";
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС10_110 тогда
			Возврат ?(ДляСФ, "10/110","##");
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС18_118 тогда
			Возврат ?(ДляСФ, "18/118", "##");
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС20 тогда
			Возврат "20";
		ИначеЕсли СтавкаНДС = перечисления.СтавкиНДС.НДС20_120 тогда
			Возврат "##";
		Иначе 
			Возврат "##";
		КонецЕсли;	
		
	КонецФункции
	
	Функция ПолучитьМажорныйРазрядРелизаКонфигурации(ВерсияКонфигурации) Экспорт
		
		МажорныйРазряд = "";
		
		Буфер = СокрЛ(ВерсияКонфигурации);
				
		Счетчик = 1;
		Пока Счетчик <= 4 Цикл
									
			ПозицияПослеТочки = Найти(Буфер, ".");
			Если НЕ ПозицияПослеТочки = 0 Тогда
				
				ВыделенныйРазряд = СокрЛП(Лев(Буфер, ПозицияПослеТочки-1));
				Буфер = Сред(Буфер, ПозицияПослеТочки+1);
				Если Счетчик=3 Тогда
					МажорныйРазряд = ВыделенныйРазряд;
				КонецЕсли;
										
			КонецЕсли;
			
			Счетчик = Счетчик + 1;
			
		КонецЦикла;
				
		Возврат МажорныйРазряд;
		
	КонецФункции
	
	Функция ЭтоВалютныйДокумент(ДокументНаПроверку) Экспорт
		
		ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		Если ТипЗнч(ДокументНаПроверку)=Тип("ДокументСсылка.РеализацияТоваровУслуг")
			ИЛИ ТипЗнч(ДокументНаПроверку)=Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			
			ВалютаДок = ДокументНаПроверку.ВалютаДокумента;
			
			Если ДокументНаПроверку.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги Тогда
				Если ДокументНаПроверку.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах Тогда
					ДопПроверка = Истина;
				Иначе
					ДопПроверка = Ложь;
				КонецЕсли;
			Иначе
				ДопПроверка = Истина;
			КонецЕсли;
			
			Если НЕ ВалютаДок = ВалютаРеглУчета И ДопПроверка = Истина Тогда
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДокументНаПроверку)=Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
			РасчетыВУЕ 	= ДокументНаПроверку.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах;
			ВалютаДок 	= ДокументНаПроверку.ВалютаДокумента;
			
			Если РасчетыВУЕ И (НЕ ВалютаДок=ВалютаРеглУчета) Тогда
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	КонецФункции
	
	Функция ОпределитьТипСчетФактуры(ДокументСсылка) Экспорт
		
		ТипСФ= "Invoice";
		
		Если ЭтоКСФ(ДокументСсылка) Тогда
			Если ЭтоИсправление(ДокументСсылка) Тогда
				ТипСФ= "InvoiceCorrectionRevision"; 	
			Иначе
				ТипСФ= "InvoiceCorrection"; 
			КонецЕсли;		
		Иначе
			Если ЭтоИсправление(ДокументСсылка) Тогда
				ТипСФ= "InvoiceRevision";
			Иначе
				ТипСФ= "Invoice";
			КонецЕсли;
		КонецЕсли;
		
		Возврат ТипСФ;
		
	КонецФункции
	
//} СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ ПОЛУЧЕНИЕ ДАННЫХ
	
	Функция ПолучитьВидКИ(ЮрФизЛицо, Юрадрес, ИндивидуальныйПредприниматель= Ложь) Экспорт
		Если типЗнч(ЮрФизЛицо) = тип("СправочникСсылка.Организации") тогда 
			если юрадрес тогда
				возврат ?(ИндивидуальныйПредприниматель, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			Иначе
				возврат  ?(ИндивидуальныйПредприниматель, Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица, справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			КонецЕсли
		ИначеЕсли ТипЗнч(ЮрФизЛицо)=тип("СправочникСсылка.Контрагенты") тогда 
			Если ЮрАдрес тогда 
				возврат справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента
			Иначе 
				возврат справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента
			КонецЕсли;
		Иначе 
			вызватьИсключение("некорректный параметр функции ""ПолучитьВидКИ""")
		КонецЕсли;	
		
	КонецФункции	
	
	Функция ПолучитьКорпусКвартиру(ЗданияИПомещения) Экспорт
		
		СтруктураЗданияИПомещения=	Новый Структура;
		СтруктураЗданияИПомещения.Вставить("Дом", "");
		СтруктураЗданияИПомещения.Вставить("Корпус", "");
		СтруктураЗданияИПомещения.Вставить("Квартира", "");
		
		// Первые два здания выделяем отдельно, остальное в списке
		ТаблицаДанных = ЗданияИПомещения.Здания;
		
		// Вид = 1 - признак дома, владения. Вид = 2, доп строение
		СтрокаДома = ТаблицаДанных.Найти(1, "Вид");
		Если СтрокаДома<>Неопределено Тогда
			СтруктураЗданияИПомещения.Вставить("Дом", СтрокаДома.Значение);
			ТаблицаДанных.Удалить(СтрокаДома);
		КонецЕсли;
		
		СтрокаДома = ТаблицаДанных.Найти(2, "Вид");
		Если СтрокаДома<>Неопределено Тогда
			СтруктураЗданияИПомещения.Вставить("Корпус", СтрокаДома.Значение);
			ТаблицаДанных.Удалить(СтрокаДома);
		КонецЕсли;
		
		// Первое помещение указываем отдельно, остальные в списке
		ТаблицаДанных = ЗданияИПомещения.Помещения;
		НомерСтроки   = ТаблицаДанных.Количество();
		Если НомерСтроки>0 Тогда
			СтруктураЗданияИПомещения.Вставить("Квартира", ТаблицаДанных[0].Значение);
		КонецЕсли;
		
		Возврат СтруктураЗданияИПомещения;
		
	КонецФункции
	
	Функция ддПолучитьНомерНаПечать(СсылкаНаОбъект) Экспорт
		возврат ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СсылкаНаОбъект.Номер, Истина, Ложь);
	КонецФункции	
	
	Функция ПолучитьДанныеТЧ(Документы, ЭтоКСФ= Ложь, ВалютаРегламентированногоУчета, КолонкаКодаТовара= "Код", ФормированиеСФ, СчетФактура= Неопределено) Экспорт
		
		//Документы - список документов либо одичночнй документ
		Если СчетФактуранаАванс(СчетФактура) Тогда 
			ДокументыИтератор= Новый списокЗначений;
			ДокументыИтератор.Добавить(СчетФактура);
		ИначеЕсли ТипЗнч(Документы) = Тип("СписокЗначений") Тогда 
			ДокументыИтератор= Документы;
		Иначе 
			ДокументыИтератор= Новый СписокЗначений;
			ДокументыИтератор.Добавить(Документы);
		КонецЕсли;
		
		Товары=			 ИнициализацияТаблицыСтрокТовары(ЭтоКСФ);
		ЗапросТЧ= 		 Новый Запрос;
		
		Для каждого Документ из  ДокументыИтератор цикл
			
			Если ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	подзапрос.НомерСтроки КАК НомерСтроки,
				|	подзапрос.Номенклатура,
				| 	подзапрос.КодНоменклатуры, 
				|	подзапрос.Количество,
				|	подзапрос.Цена,
				|	подзапрос.Сумма,
				|	подзапрос.СтавкаНДС,
				|	подзапрос.СуммаНДС,
				|	подзапрос.НомерГТД,
				|	подзапрос.СтранаПроисхождения,
				|	подзапрос.СуммаВключаетНДС,
				|	подзапрос.ЕдиницаИзмерения,
				|	подзапрос.КодЕдиницыИзмерения,
				|	подзапрос.ВидУпаковки,
				|	подзапрос.КоличествоВОдномМесте,
				|	подзапрос.КоличествоМест,
				|	подзапрос.ЭтоУслуга,
				|	подзапрос.порядок 						КАК порядок,
				|	подзапрос.ВсегоВРублях					КАК ВсегоВРублях,
				|	подзапрос.НДСВРублях 					КАК НДСВРублях,
				|	подзапрос.СуществуютЗаписиРублевыхСумм 	КАК СуществуютЗаписиРублевыхСумм,
				|	подзапрос.ПризнакТоварРаботаУслуга 		КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	(ВЫБРАТЬ
				|		РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|				ТОГДА РеализацияТоваровУслугТовары.Номенклатура.Наименование
				|			ИНАЧЕ РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное
				|		КОНЕЦ КАК Номенклатура,
				|   	РеализацияТоваровУслугТовары.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|		РеализацияТоваровУслугТовары.Количество КАК Количество,
				|		РеализацияТоваровУслугТовары.Цена КАК Цена,
				|		РеализацияТоваровУслугТовары.Сумма КАК Сумма,
				|		РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
				|		РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
				|		РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТД,
				|		РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
				|		РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|		РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|		РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|		РеализацияТоваровУслугТовары.ЕдиницаИзмерения КАК ВидУпаковки,
				|		РеализацияТоваровУслугТовары.Коэффициент КАК КоличествоВОдномМесте,
				|		РеализацияТоваровУслугТовары.КоличествоМест,
				|		ЛОЖЬ КАК ЭтоУслуга,
				|		1 КАК порядок,
				|		0 КАК ВсегоВРублях,
				|		0 КАК НДСВРублях,
				|		Ложь СуществуютЗаписиРублевыхСумм,
				|		""Property"" КАК ПризнакТоварРаботаУслуга
				|	ИЗ
				|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
				|	ГДЕ
				|		РеализацияТоваровУслугТовары.Ссылка = &Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		РеализацияТоваровУслугУслуги.НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугУслуги.Содержание, 1, 10) = """"
				|				ТОГДА РеализацияТоваровУслугУслуги.Номенклатура.Наименование
				|			ИНАЧЕ РеализацияТоваровУслугУслуги.Содержание
				|		КОНЕЦ,
				|   	РеализацияТоваровУслугУслуги.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|		РеализацияТоваровУслугУслуги.Количество,
				|		РеализацияТоваровУслугУслуги.Цена,
				|		РеализацияТоваровУслугУслуги.Сумма,
				|		РеализацияТоваровУслугУслуги.СтавкаНДС,
				|		РеализацияТоваровУслугУслуги.СуммаНДС,
				|		"""",
				|		"""",
				|		РеализацияТоваровУслугУслуги.Ссылка.СуммаВключаетНДС,
				|		РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
				|		РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|		"""" КАК ВидУпаковки,
				|		0 КАК КоличествоВОдномМесте,
				|		0,
				|		ИСТИНА,
				|		2,
				|		0,
				|		0,
				|		Ложь,
				|		""Service""
				|	ИЗ
				|		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
			|	ГДЕ
				|		РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		РеализацияТоваровУслугАгентскиеУслуги.НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугАгентскиеУслуги.Содержание, 1, 10) = """"
				|				ТОГДА РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.Наименование
				|			ИНАЧЕ РеализацияТоваровУслугАгентскиеУслуги.Содержание
				|		КОНЕЦ,
				|   	РеализацияТоваровУслугАгентскиеУслуги.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|		РеализацияТоваровУслугАгентскиеУслуги.Количество,
				|		РеализацияТоваровУслугАгентскиеУслуги.Цена,
				|		РеализацияТоваровУслугАгентскиеУслуги.Сумма,
				|		РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС,
				|		РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
				|		"""",
				|		"""",
				|		РеализацияТоваровУслугАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
				|		РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
				|		РеализацияТоваровУслугАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|		"""" КАК ВидУпаковки,
				|		0 КАК КоличествоВОдномМесте,
				|		0,
				|		ИСТИНА,
				|		3,
				|		0,
				|		0,
				|		Ложь,
				|		""Service""
				|	ИЗ
				|		Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
				|	ГДЕ
				|		РеализацияТоваровУслугАгентскиеУслуги.Ссылка = &Ссылка) КАК подзапрос
				|
				|УПОРЯДОЧИТЬ ПО
				|	порядок,
				|	НомерСтроки";
				
			ИначеЕсли ЭтоКСФ = Ложь И Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено И ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	подзапрос.НомерСтроки КАК НомерСтроки,
				|	подзапрос.Номенклатура,
				|  	"""" как КодНоменклатуры, 
				|	подзапрос.Количество,
				|	подзапрос.Цена,
				|	подзапрос.Сумма,
				|	подзапрос.СтавкаНДС,
				|	подзапрос.СуммаНДС,
				|	подзапрос.НомерГТД,
				|	подзапрос.СтранаПроисхождения,
				|	подзапрос.СуммаВключаетНДС,
				|	подзапрос.ЕдиницаИзмерения,
				|	подзапрос.ЕдиницаИзмерения.Код как КодЕдиницыИзмерения,
				|	"""" как ВидУпаковки,
				|	0 как КоличествоВОдномМесте,
				|	0 как КоличествоМест,
				|	подзапрос.ЭтоУслуга,
				|	подзапрос.порядок 						КАК порядок,
				|	подзапрос.ВсегоВРублях					КАК ВсегоВРублях,
				|	подзапрос.НДСВРублях 					КАК НДСВРублях,
				|	подзапрос.СуществуютЗаписиРублевыхСумм 	КАК СуществуютЗаписиРублевыхСумм,
				|	подзапрос.ПризнакТоварРаботаУслуга 		КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	(ВЫБРАТЬ
				|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|				ТОГДА КорректировкаРеализацииТовары.Номенклатура.Наименование
				|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
				|		КОНЕЦ КАК Номенклатура,
				|		КорректировкаРеализацииТовары.Количество КАК Количество,
				|		КорректировкаРеализацииТовары.Цена КАК Цена,
				|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
				|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
				|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
				|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
				|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
				|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|		КорректировкаРеализацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|		ЛОЖЬ КАК ЭтоУслуга,
				|		1 КАК порядок,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
				|		ВЫБОР
				|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
				|				ТОГДА ЛОЖЬ
				|			ИНАЧЕ ИСТИНА
				|		КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
				|		""Property"" КАК ПризнакТоварРаботаУслуга
				|	ИЗ
				|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
				|		ПО (КорректировкаРеализацииТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
				|			И (КорректировкаРеализацииТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
				|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
				|	ГДЕ
				|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		КорректировкаРеализацииУслуги.НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
				|				ТОГДА КорректировкаРеализацииУслуги.Номенклатура.Наименование
				|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
				|		КОНЕЦ,
				|		КорректировкаРеализацииУслуги.Количество,
				|		КорректировкаРеализацииУслуги.Цена,
				|		КорректировкаРеализацииУслуги.Сумма,
				|		КорректировкаРеализацииУслуги.СтавкаНДС,
				|		КорректировкаРеализацииУслуги.СуммаНДС,
				|		"""",
				|		"""",
				|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
				|		КорректировкаРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
				|		ИСТИНА,
				|		2,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
				|		ВЫБОР
				|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
				|				ТОГДА ЛОЖЬ
				|			ИНАЧЕ ИСТИНА
				|		КОНЕЦ,
				|		""Service""
				|	ИЗ
				|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
				|		ПО (КорректировкаРеализацииУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
				|			И (КорректировкаРеализацииУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
				|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
				|	ГДЕ
				|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
				|		ВЫБОР
				|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
				|				ТОГДА КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
				|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
				|		КОНЕЦ,
				|		КорректировкаРеализацииАгентскиеУслуги.Количество,
				|		КорректировкаРеализацииАгентскиеУслуги.Цена,
				|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
				|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
				|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
				|		"""",
				|		"""",
				|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
				|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
				|		ИСТИНА,
				|		3,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
				|		ВЫБОР
				|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
				|				ТОГДА ЛОЖЬ
				|			ИНАЧЕ ИСТИНА
				|		КОНЕЦ,
				|		""Service""
				|	ИЗ
				|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
				|		ПО (КорректировкаРеализацииАгентскиеУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
				|			И (КорректировкаРеализацииАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
				|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
				|	ГДЕ
				|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК подзапрос
				|
				|УПОРЯДОЧИТЬ ПО
				|	порядок,
				|	НомерСтроки";
				
			ИначеЕсли ЭтоКСФ И Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено И ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
				
				Если Строка(Документ.Значение.ВидОперации) = "Исправление в первичных документах" Тогда 
					//это иксф
					ЗапросТЧ.Текст= "ВЫБРАТЬ
					|	подзапрос.НомерСтроки КАК НомерСтроки,
					|	подзапрос.Номенклатура,
					|	"""" КАК КодНоменклатуры,
					|	подзапрос.Количество,
					|	подзапрос.Цена,
					|	подзапрос.Сумма,
					|	подзапрос.СтавкаНДС,
					|	подзапрос.СуммаНДС,
					|	подзапрос.НомерГТД,
					|	подзапрос.СтранаПроисхождения,
					|	подзапрос.СуммаВключаетНДС,
					|	подзапрос.ЕдиницаИзмерения,
					|	"""" КАК КодЕдиницыИзмерения,
					|	"""" КАК ВидУпаковки,
					|	0 КАК КоличествоВОдномМесте,
					|	0 КАК КоличествоМест,
					|	подзапрос.ЭтоУслуга,
					|	подзапрос.порядок КАК порядок,
					|	подзапрос.КоличествоДоИзменения,
					|	подзапрос.ЦенаДоИзменения,
					|	подзапрос.СуммаДоИзменения,
					|	подзапрос.СтавкаНДСДоИзменения,
					|	подзапрос.СуммаНДСДоИзменения,
					|	подзапрос.НомерГТДДоИзменения,
					|	подзапрос.СтранаПроисхожденияДоИзменения,
					|	подзапрос.ЕдиницаИзмеренияДоИзменения,
					|	подзапрос.ВсегоВРубляхДоИзменения		КАК ВсегоВРублях,
					|	подзапрос.НДСВРубляхДоИзменения			КАК НДСВРублях,
					|	подзапрос.СуществуютЗаписиРублевыхСумм 	КАК СуществуютЗаписиРублевыхСумм,
					|	подзапрос.ПризнакТоварРаботаУслуга 		КАК ПризнакТоварРаботаУслуга
					|ИЗ
					|	(ВЫБРАТЬ
					|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииТовары.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
					|		КОНЕЦ КАК Номенклатура,
					|		КорректировкаРеализацииТовары.Количество КАК Количество,
					|		КорректировкаРеализацииТовары.Цена КАК Цена,
					|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
					|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
					|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
					|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
					|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
					|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
					|		КорректировкаРеализацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
					|		КорректировкаРеализацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДоИзменения,
					|		ЛОЖЬ КАК ЭтоУслуга,
					|		1 КАК порядок,
					|		КорректировкаРеализацииТовары.КоличествоДоКорректировки КАК КоличествоДоИзменения,
					|		КорректировкаРеализацииТовары.ЦенаДоКорректировки КАК ЦенаДоИзменения,
					|		КорректировкаРеализацииТовары.СуммаДоКорректировки КАК СуммаДоИзменения,
					|		КорректировкаРеализацииТовары.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииТовары.СуммаНДСДоКорректировки КАК СуммаНДСДоИзменения,
					|		КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения,
					|		КорректировкаРеализацииТовары.НомерГТДДоИзменения КАК НомерГТДДоИзменения,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРубляхДоИзменения,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРубляхДоИзменения,
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
					|		""Property"" КАК ПризнакТоварРаботаУслуга
					|	ИЗ
					|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
					|	ГДЕ
					|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		КорректировкаРеализацииУслуги.НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииУслуги.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
					|		КОНЕЦ,
					|		КорректировкаРеализацииУслуги.Количество,
					|		КорректировкаРеализацииУслуги.Цена,
					|		КорректировкаРеализацииУслуги.Сумма,
					|		КорректировкаРеализацииУслуги.СтавкаНДС,
					|		КорректировкаРеализацииУслуги.СуммаНДС,
					|		"""",
					|		"""",
					|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
					|		КорректировкаРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
					|		КорректировкаРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
					|		ИСТИНА,
					|		2,
					|		КорректировкаРеализацииУслуги.КоличествоДоКорректировки,
					|		КорректировкаРеализацииУслуги.ЦенаДоКорректировки,
					|		КорректировкаРеализацииУслуги.СуммаДоКорректировки,
					|		КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки,
					|		NULL,
					|		NULL,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					|		""Service""
					|	ИЗ
					|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
					|	ГДЕ
					|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
					|		КОНЕЦ,
					|		КорректировкаРеализацииАгентскиеУслуги.Количество,
					|		КорректировкаРеализацииАгентскиеУслуги.Цена,
					|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
					|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
					|		"""",
					|		"""",
					|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
					|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
					|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
					|		ИСТИНА,
					|		3,
					|		КорректировкаРеализацииАгентскиеУслуги.КоличествоДоКорректировки,
					|		КорректировкаРеализацииАгентскиеУслуги.ЦенаДоКорректировки,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаДоКорректировки,
					|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоКорректировки,
					|		NULL,
					|		NULL,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					|		""Service""
					|	ИЗ
					|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииАгентскиеУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
					|	ГДЕ
					|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК подзапрос
					|
					|УПОРЯДОЧИТЬ ПО
					|	порядок,
					|	НомерСтроки";
					
				ИначеЕсли Строка(Документ.Значение.ВидОперации) = "Корректировка по согласованию сторон" Тогда 
					//это КСФ
					ЗапросТЧ.Текст= "ВЫБРАТЬ
					|	подзапрос.НомерСтроки КАК НомерСтроки,
					|	подзапрос.Номенклатура,
					|	подзапрос.Количество,
					|	подзапрос.Цена,
					|	подзапрос.Сумма,
					|	подзапрос.СтавкаНДС,
					|	подзапрос.СуммаНДС,
					|	подзапрос.НомерГТД,
					|	подзапрос.СтранаПроисхождения,
					|	подзапрос.СуммаВключаетНДС,
					|	подзапрос.ЕдиницаИзмерения,
					|	"""" как КодЕдиницыИзмерения,
					|	"""" как ВидУпаковки,
					|	0 как КоличествоВОдномМесте,
					|	0 как КоличествоМест,
					|	подзапрос.ЭтоУслуга,
					|	подзапрос.порядок КАК порядок,
					|	подзапрос.КоличествоДоИзменения,
					|	подзапрос.ЦенаДоИзменения,
					|	подзапрос.СуммаДоИзменения,
					|	подзапрос.СтавкаНДСДоИзменения,
					|	подзапрос.СуммаНДСДоИзменения,
					|	подзапрос.НомерГТДДоИзменения,
					|	подзапрос.СтранаПроисхожденияДоИзменения,
					|	подзапрос.ЕдиницаИзмеренияДоИзменения,
					|	подзапрос.ВсегоВРублях					КАК ВсегоВРублях,
					|	подзапрос.НДСВРублях					КАК НДСВРублях,
					|	подзапрос.СуществуютЗаписиРублевыхСумм 	КАК СуществуютЗаписиРублевыхСумм,
					|	подзапрос.ВсегоВРубляхДоИзменения		КАК ВсегоВРубляхДоИзменения,
					|	подзапрос.НДСВРубляхДоИзменения			КАК НДСВРубляхДоИзменения,
					|	подзапрос.СуществуютЗаписиРублевыхСумм 	КАК СуществуютЗаписиРублевыхСуммДоИзменения,
					|	подзапрос.ПризнакТоварРаботаУслуга 		КАК ПризнакТоварРаботаУслуга
					|ИЗ
					|	(ВЫБРАТЬ
					|		КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииТовары.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииТовары.Номенклатура.НаименованиеПолное
					|		КОНЕЦ КАК Номенклатура,
					|		КорректировкаРеализацииТовары.Количество КАК Количество,
					|		КорректировкаРеализацииТовары.Цена КАК Цена,
					|		КорректировкаРеализацииТовары.Сумма КАК Сумма,
					|		КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
					|		КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
					|		КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
					|		КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
					|		КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
					|		КорректировкаРеализацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
					|		КорректировкаРеализацииТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДоИзменения,
					|		ЛОЖЬ КАК ЭтоУслуга,
					|		1 КАК порядок,
					|		КорректировкаРеализацииТовары.КоличествоДоИзменения КАК КоличествоДоИзменения,
					|		КорректировкаРеализацииТовары.ЦенаДоИзменения КАК ЦенаДоИзменения,
					|		КорректировкаРеализацииТовары.СуммаДоИзменения КАК СуммаДоИзменения,
					|		КорректировкаРеализацииТовары.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
					|		КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения,
					|		КорректировкаРеализацииТовары.НомерГТДДоИзменения КАК НомерГТДДоИзменения,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
					
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Всего, 0) КАК ВсегоВРубляхДоИзменения,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НДС, 0) КАК НДСВРубляхДоИзменения,
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ КАК СуществуютЗаписиРублевыхСуммДоИзменения,
					|		""Property"" КАК ПризнакТоварРаботаУслуга
					|	ИЗ
					|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
					
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки
					|		ПО (КорректировкаРеализацииТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор)
					|			И (КорректировкаРеализацииТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения))
					|	ГДЕ
					|		КорректировкаРеализацииТовары.Ссылка = &Ссылка
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		КорректировкаРеализацииУслуги.НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииУслуги.Содержание, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииУслуги.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииУслуги.Содержание
					|		КОНЕЦ,
					|		КорректировкаРеализацииУслуги.Количество,
					|		КорректировкаРеализацииУслуги.Цена,
					|		КорректировкаРеализацииУслуги.Сумма,
					|		КорректировкаРеализацииУслуги.СтавкаНДС,
					|		КорректировкаРеализацииУслуги.СуммаНДС,
					|		"""",
					|		"""",
					|		КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС,
					|		КорректировкаРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
					|		КорректировкаРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
					|		ИСТИНА,
					|		2,
					|		КорректировкаРеализацииУслуги.КоличествоДоИзменения,
					|		КорректировкаРеализацииУслуги.ЦенаДоИзменения,
					|		КорректировкаРеализацииУслуги.СуммаДоИзменения,
					|		КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииУслуги.СуммаНДСДоИзменения,
					|		NULL,
					|		NULL,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					|		""Service""
					|	ИЗ
					|		Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
					
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки
					|		ПО (КорректировкаРеализацииУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор)
					|			И (КорректировкаРеализацииУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения))
					|	ГДЕ
					|		КорректировкаРеализацииУслуги.Ссылка = &Ссылка
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
					|		ВЫБОР
					|			КОГДА ПОДСТРОКА(КорректировкаРеализацииАгентскиеУслуги.Содержание, 1, 10) = """"
					|				ТОГДА КорректировкаРеализацииАгентскиеУслуги.Номенклатура.Наименование
					|			ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Содержание
					|		КОНЕЦ,
					|		КорректировкаРеализацииАгентскиеУслуги.Количество,
					|		КорректировкаРеализацииАгентскиеУслуги.Цена,
					|		КорректировкаРеализацииАгентскиеУслуги.Сумма,
					|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
					|		"""",
					|		"""",
					|		КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
					|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
					|		КорректировкаРеализацииАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
					|		ИСТИНА,
					|		3,
					|		КорректировкаРеализацииАгентскиеУслуги.КоличествоДоИзменения,
					|		КорректировкаРеализацииАгентскиеУслуги.ЦенаДоИзменения,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения,
					|		КорректировкаРеализацииАгентскиеУслуги.СтавкаНДСДоИзменения,
					|		КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения,
					|		NULL,
					|		NULL,
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Всего, 0),
					|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НДС, 0),
					|		ВЫБОР
					|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор ЕСТЬ NULL 
					|				ТОГДА ЛОЖЬ
					|			ИНАЧЕ ИСТИНА
					|		КОНЕЦ,
					|		""Service""
					|	ИЗ
					|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
					|		ПО (КорректировкаРеализацииАгентскиеУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
					|			И (КорректировкаРеализацииАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
					
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки
					|		ПО (КорректировкаРеализацииАгентскиеУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.Регистратор)
					|			И (КорректировкаРеализацииАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.НомерСтрокиДокумента)
					|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоКорректировки.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения))
					|	ГДЕ
					|		КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка) КАК подзапрос
					|
					|УПОРЯДОЧИТЬ ПО
					|	порядок,
					|	НомерСтроки";
					
				КонецЕсли;
				
			ИначеЕсли Метаданные.Документы.Найти("ОказаниеУслуг") <> Неопределено И ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.Наименование
				|		ИНАЧЕ ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				|  	ОказаниеУслугКонтрагенты.Ссылка.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	ОказаниеУслугКонтрагенты.Количество КАК Количество,
				|	ОказаниеУслугКонтрагенты.Цена КАК Цена,
				|	ОказаниеУслугКонтрагенты.Сумма КАК Сумма,
				|	ОказаниеУслугКонтрагенты.Ссылка.СтавкаНДС КАК СтавкаНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	ОказаниеУслугКонтрагенты.Ссылка.СуммаВключаетНДС КАК суммаВключаетНДС,
				|	ОказаниеУслугКонтрагенты.Ссылка.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|	ОказаниеУслугКонтрагенты.ссылка.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0  как КоличествоМест,
				|	ИСТИНА КАК ЭтоУслуга,
				|	ОказаниеУслугКонтрагенты.СуммаНДС,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
				|ГДЕ
				|	ОказаниеУслугКонтрагенты.Ссылка = &Ссылка
				|	И ОказаниеУслугКонтрагенты.СчетФактура = &СчетФактура";
				
				//ссылка на счет-фактуру используется для формирования сф на основании дока "оказание услуг" 
				ЗапросТЧ.УстановитьПараметр("СчетФактура", СчетФактура);
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.АР_НачислениеАренднойПлаты") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	АР_НачислениеАренднойПлатыСостав.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(АР_НачислениеАренднойПлатыСостав.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА АР_НачислениеАренднойПлатыСостав.Номенклатура.Наименование
				|		ИНАЧЕ АР_НачислениеАренднойПлатыСостав.Номенклатура.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				| 	АР_НачислениеАренднойПлатыСостав.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	АР_НачислениеАренднойПлатыСостав.Количество,
				|	АР_НачислениеАренднойПлатыСостав.Цена,
				|	АР_НачислениеАренднойПлатыСостав.Сумма,
				|	АР_НачислениеАренднойПлатыСостав.СтавкаНДС,
				|	АР_НачислениеАренднойПлатыСостав.СуммаНДС,
				|	АР_НачислениеАренднойПлатыСостав.Ссылка.СуммаВключаетНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	АР_НачислениеАренднойПлатыСостав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|	АР_НачислениеАренднойПлатыСостав.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0  как КоличествоМест,
				|	ИСТИНА КАК ЭтоУслуга,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.АР_НачислениеАренднойПлаты.Состав КАК АР_НачислениеАренднойПлатыСостав
				|ГДЕ
				|	АР_НачислениеАренднойПлатыСостав.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.Наименование
				|		ИНАЧЕ АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				| 	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	АктОбОказанииПроизводственныхУслугУслуги.Количество,
				|	АктОбОказанииПроизводственныхУслугУслуги.Цена,
				|	АктОбОказанииПроизводственныхУслугУслуги.Сумма,
				|	АктОбОказанииПроизводственныхУслугУслуги.СтавкаНДС,
				|	АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС,
				|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.СуммаВключаетНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0  как КоличествоМест,
				|	ИСТИНА КАК ЭтоУслуга,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
				|ГДЕ
				|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И СчетФактура <> Неопределено Тогда
				
				ЗапросТЧ.Текст = 
				"ВЫБРАТЬ
				|	ОтчетКомиссионераОПродажахПокупатели.КлючСтроки
				|ПОМЕСТИТЬ ВТ_КлючПокупателя
				|ИЗ
				|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
				|ГДЕ
				|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &Ссылка
				|	И ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &СчетФактура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОтчетКомиссионераОПродажахТовары.НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(ОтчетКомиссионераОПродажахТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА ОтчетКомиссионераОПродажахТовары.Номенклатура.Наименование
				|		ИНАЧЕ ОтчетКомиссионераОПродажахТовары.Номенклатура.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				|  ОтчетКомиссионераОПродажахТовары.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	ОтчетКомиссионераОПродажахТовары.Количество,
				|	ОтчетКомиссионераОПродажахТовары.Цена,
				|	ОтчетКомиссионераОПродажахТовары.Сумма,
				|	ОтчетКомиссионераОПродажахТовары.СтавкаНДС,
				|	ОтчетКомиссионераОПродажахТовары.НомерГТД,
				|	ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения,
				|	ОтчетКомиссионераОПродажахТовары.Ссылка.СуммаВключаетНДС,
				|	ОтчетКомиссионераОПродажахТовары.ЕдиницаИзмерения,
				|	ОтчетКомиссионераОПродажахТовары.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	ОтчетКомиссионераОПродажахТовары.ЕдиницаИзмерения КАК ВидУпаковки,
				|	ОтчетКомиссионераОПродажахТовары.Коэффициент КАК КоличествоВОдномМесте,
				|	ОтчетКомиссионераОПродажахТовары.КоличествоМест,
				|	ЛОЖЬ КАК ЭтоУслуга,
				|	1 КАК Порядок,
				|	ОтчетКомиссионераОПродажахТовары.СуммаНДС,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Property"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючПокупателя КАК ВТ_КлючПокупателя
				|		ПО ОтчетКомиссионераОПродажахТовары.КлючСтроки = ВТ_КлючПокупателя.КлючСтроки
				|ГДЕ
				|	ОтчетКомиссионераОПродажахТовары.Ссылка = &Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ОтчетКомиссионераОПродажахУслуги.НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(ОтчетКомиссионераОПродажахУслуги.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА ОтчетКомиссионераОПродажахУслуги.Номенклатура.Наименование
				|		ИНАЧЕ ОтчетКомиссионераОПродажахУслуги.Номенклатура.НаименованиеПолное
				|	КОНЕЦ,
				|  ОтчетКомиссионераОПродажахУслуги.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	ОтчетКомиссионераОПродажахУслуги.Количество,
				|	ОтчетКомиссионераОПродажахУслуги.Цена,
				|	ОтчетКомиссионераОПродажахУслуги.Сумма,
				|	ОтчетКомиссионераОПродажахУслуги.СтавкаНДС,
				|	"""",
				|	"""",
				|	ОтчетКомиссионераОПродажахУслуги.Ссылка.СуммаВключаетНДС,
				|	ОтчетКомиссионераОПродажахУслуги.Номенклатура.ЕдиницаИзмерения,
				|	ОтчетКомиссионераОПродажахУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0  как КоличествоМест,
				|	ИСТИНА,
				|	2,
				|	ОтчетКомиссионераОПродажахУслуги.СуммаНДС,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service""
				|ИЗ
				|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючПокупателя КАК ВТ_КлючПокупателя
				|		ПО ОтчетКомиссионераОПродажахУслуги.КлючСтроки = ВТ_КлючПокупателя.КлючСтроки
				|ГДЕ
				|	ОтчетКомиссионераОПродажахУслуги.Ссылка = &Ссылка";
				
				ЗапросТЧ.УстановитьПараметр("СчетФактура", СчетФактура);
				
			ИначеЕсли ТипЗнч(Документ.Значение)= Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда 
				
				Если Документ.Значение.Метаданные().Реквизиты.Найти("ВидОперации") <> Неопределено 
					И Документ.Значение.ВидОперации = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОЗакупках 
					И СчетФактура <> Неопределено 
					И ЗначениеЗаполнено(СчетФактура.Продавец)
					И (СчетФактура.Контрагент <> СчетФактура.Продавец 
						ИЛИ СчетФактура.КодВидаОперации = "27")	Тогда // Сводный комиссионный счет-фактура, п 3.1 статьи 169 НК
						
					ЗапросТЧ.Текст= "ВЫБРАТЬ
	                 |	ОтчетКомитентуОПродажахТовары.Количество,
	                 |	ОтчетКомитентуОПродажахТовары.ЕдиницаИзмерения,
	                 |	"""" КАК СтранаПроисхождения,
	                 |	"""" КАК НомерГТД,
	                 |	ОтчетКомитентуОПродажахТовары.СтавкаНДС,
	                 |	ОтчетКомитентуОПродажахТовары.СуммаНДС,
	                 |	ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС,
	                 |	ОтчетКомитентуОПродажахТовары.Номенклатура.Услуга КАК ЭтоУслуга,
	                 |	ОтчетКомитентуОПродажахТовары.Номенклатура.Код КАК КодНоменклатуры,
	                 |	ОтчетКомитентуОПродажахТовары.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
	                 |	"""" КАК ВидУпаковки,
	                 |	"""" КАК КоличествоВОдномМесте,
	                 |	"""" КАК КоличествоМест,
	                 |	ВЫБОР
	                 |		КОГДА ПОДСТРОКА(ОтчетКомитентуОПродажахТовары.Содержание, 1, 10) = """"
	                 |			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.НаименованиеПолное
	                 |		ИНАЧЕ ОтчетКомитентуОПродажахТовары.Содержание
	                 |	КОНЕЦ КАК Номенклатура,
	                 |	ОтчетКомитентуОПродажахТовары.Цена КАК Цена,
	                 |	ОтчетКомитентуОПродажахТовары.Сумма КАК Сумма,
					 |	0 КАК ВсегоВРублях,
					 |	0 КАК НДСВРублях,
					 |	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
					 |		ВЫБОР 
					 |			КОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Услуга 
					 |				ТОГДА ""Service"" 
					 | 			ИНАЧЕ ""Property"" 
					 |		КОНЕЦ КАК ПризнакТоварРаботаУслуга
	                 |ИЗ
	                 |	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
	                 |		ПО ОтчетКомитентуОПродажахТовары.КлючСтроки = ОтчетКомитентуОПродажахПоставщики.КлючСтроки
	                 |ГДЕ
	                 |	ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
	                 |	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура";
					 
					 ЗапросТЧ.УстановитьПараметр("СчетФактура", СчетФактура);
	
				Иначе
									
					ЗапросТЧ.Текст= "ВЫБРАТЬ
					|	подзапрос.Сумма,
					|	подзапрос.СуммаНДС,
					|	подзапрос.Количество,
					|	подзапрос.Цена,
					|	подзапрос.НомерГТД,
					|	подзапрос.СтранаПроисхождения,
					|	подзапрос.СуммаВключаетНДС,
					|	подзапрос.ЕдиницаИзмерения,
					|	"""" КАК КодЕдиницыИзмерения,
					|	"""" КАК ВидУпаковки,
					|	0 КАК КоличествоВОдномМесте,
					|	0  как КоличествоМест,
					|	подзапрос.ЭтоУслуга,
					|	ВЫБОР
					|		КОГДА подзапрос.Номенклатура = ЗНАЧЕНИЕ(Справочник.номенклатура.ПустаяСсылка)
					|			ТОГДА ""Комиссионное вознаграждение""
					|		КОГДА ПОДСТРОКА(подзапрос.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|			ТОГДА подзапрос.Номенклатура.Наименование
					|		ИНАЧЕ подзапрос.Номенклатура.НаименованиеПолное
					|	КОНЕЦ КАК Номенклатура,
					|	ВЫБОР
					|		КОГДА подзапрос.Номенклатура = ЗНАЧЕНИЕ(Справочник.номенклатура.ПустаяСсылка)
					|			ТОГДА """"
					|		КОГДА ПОДСТРОКА(подзапрос.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|			ТОГДА подзапрос.Номенклатура.Наименование
					|		ИНАЧЕ подзапрос.Номенклатура." + КолонкаКодаТовара + " 
					|	КОНЕЦ КАК КодНоменклатуры,
					|	подзапрос.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДС,
					|	0 КАК ВсегоВРублях,
					|	0 КАК НДСВРублях,
					|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
					|	""Service"" КАК ПризнакТоварРаботаУслуга
					|ИЗ
					|	(ВЫБРАТЬ
					|		СУММА(ОтчетКомитентуОПродажахТовары.СуммаВознаграждения) КАК Сумма,
					|		СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения) КАК СуммаНДС,
					|		ОтчетКомитентуОПродажахТовары.Ссылка.УслугаПоВознаграждению КАК Номенклатура,
					|		ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
					|		0 КАК Количество,
					|		"""" КАК Цена,
					|		"""" КАК НомерГТД,
					|		"""" КАК СтранаПроисхождения,
					|		ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
					|		"""" КАК ЕдиницаИзмерения,
					|		ИСТИНА КАК ЭтоУслуга
					|	ИЗ
					|		Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
					|	ГДЕ
					|		ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
					|	
					|	СГРУППИРОВАТЬ ПО
					|		ОтчетКомитентуОПродажахТовары.Ссылка,
					|		ОтчетКомитентуОПродажахТовары.Ссылка.УслугаПоВознаграждению,
					|		ОтчетКомитентуОПродажахТовары.Ссылка.СуммаВключаетНДС) КАК подзапрос"; 		
					
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	ВозвратТоваровПоставщикуТовары.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(ВозвратТоваровПоставщикуТовары.Номенклатура.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА ВозвратТоваровПоставщикуТовары.Номенклатура.Наименование
				|		ИНАЧЕ ВозвратТоваровПоставщикуТовары.Номенклатура.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				|  	ВозвратТоваровПоставщикуТовары.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	ВозвратТоваровПоставщикуТовары.Количество,
				|	ВозвратТоваровПоставщикуТовары.Цена,
				|	ВозвратТоваровПоставщикуТовары.Сумма,
				|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
				|	ВозвратТоваровПоставщикуТовары.НомерГТД,
				|	ВозвратТоваровПоставщикуТовары.СтранаПроисхождения,
				|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
				|	ВозвратТоваровПоставщикуТовары.ЕдиницаИзмерения,
				|	ВозвратТоваровПоставщикуТовары.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	ВозвратТоваровПоставщикуТовары.ЕдиницаИзмерения КАК ВидУпаковки,
				|	ВозвратТоваровПоставщикуТовары.Коэффициент КАК КоличествоВОдномМесте,
				|	ВозвратТоваровПоставщикуТовары.КоличествоМест,
				|	ВозвратТоваровПоставщикуТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	ЛОЖЬ КАК ЭтоУслуга,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
				|		ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
				|		ВЫБОР
				|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
				|				ТОГДА ЛОЖЬ
				|			ИНАЧЕ ИСТИНА
				|		КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
				|	""Property"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
				|		ПО (ВозвратТоваровПоставщикуТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
				|			И (ВозвратТоваровПоставщикуТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
				|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
				|ГДЕ
				|	ВозвратТоваровПоставщикуТовары.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.РеализацияУслугПопереработке") Тогда 
				
				ЗапросТЧ.Текст = "ВЫБРАТЬ
				|	РеализацияУслугПоПереработкеУслуги.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(РеализацияУслугПоПереработкеУслуги.Содержание, 1, 10) = """"
				|			ТОГДА РеализацияУслугПоПереработкеУслуги.Номенклатура.Наименование
				|		ИНАЧЕ РеализацияУслугПоПереработкеУслуги.Содержание
				|	КОНЕЦ КАК Номенклатура,
				|  	РеализацияУслугПоПереработкеУслуги.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	РеализацияУслугПоПереработкеУслуги.Количество,
				|	РеализацияУслугПоПереработкеУслуги.Цена,
				|	РеализацияУслугПоПереработкеУслуги.Сумма,
				|	РеализацияУслугПоПереработкеУслуги.СтавкаНДС,
				|	РеализацияУслугПоПереработкеУслуги.СуммаНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	РеализацияУслугПоПереработкеУслуги.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	РеализацияУслугПоПереработкеУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|	РеализацияУслугПоПереработкеУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0 КАК КоличествоМест,
				|	ИСТИНА КАК ЭтоУслуга,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.РеализацияУслугПоПереработке.Услуги КАК РеализацияУслугПоПереработкеУслуги
				|ГДЕ
				|	РеализацияУслугПоПереработкеУслуги.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	СчетФактураВыданныйАвансы.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(СчетФактураВыданныйАвансы.Содержание, 1, 10) <> """" тогда СчетФактураВыданныйАвансы.Содержание
				|		КОГДА СчетФактураВыданныйАвансы.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка) и 
				|           ПОДСТРОКА(СчетФактураВыданныйАвансы.Номенклатура.НаименованиеПолное, 1, 10) <> """"
				|			ТОГДА СчетФактураВыданныйАвансы.Номенклатура.НаименованиеПолное
				|		КОГДА СчетФактураВыданныйАвансы.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка)  
				|			ТОГДА СчетФактураВыданныйАвансы.Номенклатура.Наименование
				|  Иначе ""Предварительная оплата""
				|	КОНЕЦ КАК Номенклатура,
				|  СчетФактураВыданныйАвансы.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
				|	0 как Количество,
				|	0 как Цена,
				|	СчетФактураВыданныйАвансы.Сумма,
				|	СчетФактураВыданныйАвансы.СтавкаНДС,
				|	СчетФактураВыданныйАвансы.СуммаНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	истина КАК СуммаВключаетНДС,
				|	""""  КАК ЕдиницаИзмерения,
				|	""""  КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0  как КоличествоМест,
				|	ИСТИНА КАК ЭтоУслуга,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Service"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.СчетФактураВыданный.Авансы КАК СчетФактураВыданныйАвансы
				|ГДЕ
				|	СчетФактураВыданныйАвансы.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.СчетНаоплатуПокупателю") Тогда
				
				// в новых конфах БП табличная часть "Услуги" выпилена
				Если НЕ Метаданные.Документы.СчетНаОплатуПокупателю.ТабличныеЧасти.Найти("Услуги") = Неопределено Тогда
					
					ЗапросТЧ.Текст=
					
					"ВЫБРАТЬ
					|	1 КАК НомерТЧ,
					|	ТЧ.НомерСтроки КАК НомерСтроки,
					|	ВЫБОР
					|		КОГДА ПОДСТРОКА(ТЧ.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|			ТОГДА ТЧ.Номенклатура.Наименование
					|		ИНАЧЕ ТЧ.Номенклатура.НаименованиеПолное
					|	КОНЕЦ КАК Номенклатура,
					|	ТЧ.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
					|	ТЧ.Количество КАК Количество,
					|	ТЧ.Цена КАК Цена,
					|	ТЧ.Сумма КАК Сумма,
					|	ТЧ.СтавкаНДС КАК СтавкаНДС,
					|	ТЧ.СуммаНДС КАК СуммаНДС,
					|	"""" КАК НомерГТД,
					|	"""" КАК СтранаПроисхождения,
					|	ТЧ.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
					|	"""" КАК ВидУпаковки,
					|	"""" КАК КоличествоВОдномМесте,
					|	"""" КАК КоличествоМест,
					|	ЛОЖЬ КАК ЭтоУслуга,
					|	0 КАК ВсегоВРублях,
					|	0 КАК НДСВРублях,
					|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
					|	""Property"" КАК ПризнакТоварРаботаУслуга
					|ИЗ
					|	Документ.СчетНаОплатуПокупателю.Товары КАК ТЧ
					|ГДЕ
					|	ТЧ.Ссылка = &Ссылка
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	2,
					|	ТЧ.НомерСтроки,
					|	ВЫБОР
					|		КОГДА ПОДСТРОКА(ТЧ.Содержание, 1, 10) = """"
					|			ТОГДА ТЧ.Номенклатура.Наименование
					|		ИНАЧЕ ТЧ.Содержание
					|	КОНЕЦ,
					|	ТЧ.Номенклатура." + КолонкаКодаТовара + ",
					|	ТЧ.Количество,
					|	ТЧ.Цена,
					|	ТЧ.Сумма,
					|	ТЧ.СтавкаНДС,
					|	ТЧ.СуммаНДС,
					|	"""",
					|	"""",
					|	ТЧ.Ссылка.СуммаВключаетНДС,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения.Код,
					|	"""",
					|	"""",
					|	"""",
					|	ИСТИНА,
					|	0 КАК ВсегоВРублях,
					|	0 КАК НДСВРублях,
					|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
					|	""Service""
					|ИЗ
					|	Документ.СчетНаОплатуПокупателю.Товары КАК ТЧ
					|ГДЕ
					|	ТЧ.Ссылка = &Ссылка
					|
					|УПОРЯДОЧИТЬ ПО
					|	НомерТЧ,
					|	НомерСтроки"					
					
				Иначе
					
					ЗапросТЧ.Текст=
					
					"ВЫБРАТЬ
					|	ТЧ.НомерСтроки КАК НомерСтроки,
					|	ВЫБОР
					|		КОГДА ПОДСТРОКА(ТЧ.Содержание, 1, 10) <> """"
					|			ТОГДА ТЧ.Содержание
					|		КОГДА ПОДСТРОКА(ТЧ.Номенклатура.НаименованиеПолное, 1, 10) = """"
					|			ТОГДА ТЧ.Номенклатура.Наименование
					|		ИНАЧЕ ТЧ.Номенклатура.НаименованиеПолное
					|	КОНЕЦ КАК Номенклатура,
					|	ТЧ.Номенклатура." + КолонкаКодаТовара + " КАК КодНоменклатуры,
					|	ТЧ.Количество КАК Количество,
					|	ТЧ.Цена КАК Цена,
					|	ТЧ.Сумма КАК Сумма,
					|	ТЧ.СтавкаНДС КАК СтавкаНДС,
					|	ТЧ.СуммаНДС КАК СуммаНДС,
					|	"""" КАК НомерГТД,
					|	"""" КАК СтранаПроисхождения,
					|	ТЧ.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
					|	ТЧ.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
					|	"""" КАК ВидУпаковки,
					|	"""" КАК КоличествоВОдномМесте,
					|	"""" КАК КоличествоМест,
					|	ЛОЖЬ КАК ЭтоУслуга,
					|	0 КАК ВсегоВРублях,
					|	0 КАК НДСВРублях,
					|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
					|	""Property"" КАК ПризнакТоварРаботаУслуга
					|ИЗ
					|	Документ.СчетНаОплатуПокупателю.Товары КАК ТЧ
					|ГДЕ
					|	ТЧ.Ссылка = &Ссылка
					|
					|УПОРЯДОЧИТЬ ПО
					|	НомерСтроки"
					
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.ПередачаОС") Тогда 
				
				ЗапросТЧ.Текст= "ВЫБРАТЬ
				|	ПередачаОС_ОС.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА ПОДСТРОКА(ПередачаОС_ОС.ОсновноеСредство.НаименованиеПолное, 1, 10) = """"
				|			ТОГДА ПередачаОС_ОС.ОсновноеСредство.Наименование
				|		ИНАЧЕ ПередачаОС_ОС.ОсновноеСредство.НаименованиеПолное
				|	КОНЕЦ КАК Номенклатура,
				| 	ПередачаОС_ОС.ОсновноеСредство.Код КАК КодНоменклатуры,
				|	ПередачаОС_ОС.Количество,
				|	ПередачаОС_ОС.Цена,
				|	ПередачаОС_ОС.Сумма,
				|	ПередачаОС_ОС.СтавкаНДС,
				|	ПередачаОС_ОС.СуммаНДС,
				|	ПередачаОС_ОС.Ссылка.СуммаВключаетНДС,
				|	"""" КАК НомерГТД,
				|	"""" КАК СтранаПроисхождения,
				|	ПередачаОС_ОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
				|	ПередачаОС_ОС.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
				|	"""" КАК ВидУпаковки,
				|	0 КАК КоличествоВОдномМесте,
				|	0 КАК КоличествоМест,
				|	ЛОЖЬ КАК ЭтоУслуга,
				|	0 КАК ВсегоВРублях,
				|	0 КАК НДСВРублях,
				|	ЛОЖЬ КАК СуществуютЗаписиРублевыхСумм,
				|	""Other"" КАК ПризнакТоварРаботаУслуга
				|ИЗ
				|	Документ.ПередачаОС.ОС КАК ПередачаОС_ОС
				|ГДЕ
				|	ПередачаОС_ОС.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки"
				
			КонецЕсли;
			
			ЗапросТЧ.УстановитьПараметр("Ссылка", Документ.Значение);
			ТоварыПоДокументу = ЗапросТЧ.Выполнить().Выгрузить();
			
			Если ЭтоКСФ Тогда 
				//удалим строки без изменений
				Ц= 0;
				Пока Ц < ТоварыПоДокументу.Количество() Цикл 
					ВыборкаТЧ= ТоварыПоДокументу[Ц];
					Если  ВыборкаТЧ.ЕдиницаИзмеренияДоИзменения = ВыборкаТЧ.ЕдиницаИзмерения
						И ВыборкаТЧ.КоличествоДоИзменения = ВыборкаТЧ.Количество
						И ВыборкаТЧ.ЦенаДоИзменения = ВыборкаТЧ.Цена
						И ВыборкаТЧ.СуммаДоИзменения = ВыборкаТЧ.Сумма
						И ВыборкаТЧ.СуммаНДСДоИзменения = ВыборкаТЧ.СуммаНДС
						И ВыборкаТЧ.СтавкаНДСДоИзменения = ВыборкаТЧ.СтавкаНДС
						И ВыборкаТЧ.СуммаДоИзменения = ВыборкаТЧ.Сумма 
					Тогда 
						ТоварыПоДокументу.Удалить(Ц);
					Иначе 
						Ц= Ц + 1;
					КонецЕсли;		
				КонецЦикла;
				
			ИначеЕсли Метаданные.Документы.Найти("КорректировкаРеализации") <> Неопределено И ТипЗнч(Документ.Значение) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				//про формировании ИСФ, торг-12 или акта на основании корректировки
				//удалим строки с пустой суммой
				Ц= 0;
				Пока Ц < ТоварыПоДокументу.Количество() Цикл 
					ВыборкаТЧ= ТоварыПоДокументу[Ц];
					Если ВыборкаТЧ.Сумма = 0 Тогда 
						ТоварыПоДокументу.Удалить(Ц);
					Иначе 
						Ц= Ц + 1;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
			
			Для каждого Стр из ТоварыПоДокументу Цикл 
				
				Стр2= 						Товары.Добавить();
				Стр2.Номенклатура= 			Стр.Номенклатура ; 
				Стр2.СтранаПроисхождения= 	Стр.СтранаПроисхождения;
				Стр2.НомерГТД= 				Стр.НомерГТД;
				Стр2.Количество= 			Стр.Количество;
				Стр2.ЕдиницаИзмерения= 		Стр.ЕдиницаИзмерения;
				Стр2.Цена= 					Стр.Цена;
				Стр2.СтавкаНДС= 			Стр.СтавкаНДС;
				Стр2.СуммаНДС= 				Стр.СуммаНДС;
				Стр2.Сумма= 				Стр.Сумма;
				Стр2.СуммаВключаетНДС=		Стр.СуммаВключаетНДС; 
				Стр2.ЭтоУслуга= 			Стр.ЭтоУслуга;
				
				Если НЕ ТоварыПоДокументу.Колонки.Найти("ВсегоВРублях") = Неопределено Тогда
					Стр2.ВсегоВРублях= Стр.ВсегоВРублях;
				КонецЕсли;
				Если НЕ ТоварыПоДокументу.Колонки.Найти("НДСВРублях") = Неопределено Тогда
					Стр2.НДСВРублях= Стр.НДСВРублях;
				КонецЕсли;
				Если НЕ ТоварыПоДокументу.Колонки.Найти("СуществуютЗаписиРублевыхСумм") = Неопределено Тогда
					Стр2.СуществуютЗаписиРублевыхСумм= Стр.СуществуютЗаписиРублевыхСумм;
				КонецЕсли;
								
				Если ЭтоКСФ Тогда 
					
					Стр2.КоличествоДоИзменения= 			Стр.КоличествоДоИзменения;
					Стр2.ЦенаДоИзменения= 					Стр.ЦенаДоИзменения;
					Стр2.ЕдиницаИзмеренияДоИзменения= 		Стр.ЕдиницаИзмеренияДоИзменения;
					Стр2.СуммаДоИзменения= 					Стр.СуммаДоИзменения;
					Стр2.СтавкаНДСДоИзменения= 				?(ЗначениеЗаполнено(Стр.СтавкаНДСДоИзменения), Стр.СтавкаНДСДоИзменения, Стр.СтавкаНДС);
					Стр2.СуммаНДСДоИзменения= 				Стр.СуммаНДСДоИзменения;
					Стр2.СтранаПроисхожденияДоИзменения= 	Стр.СтранаПроисхожденияДоИзменения;
					Стр2.НомерГТДДоИзменения= 				Стр.НомерГТДДоИзменения;
					
					Если НЕ ТоварыПоДокументу.Колонки.Найти("ВсегоВРубляхДоИзменения") = Неопределено Тогда
						Стр2.ВсегоВРубляхДоИзменения= ?(Стр.ВсегоВРубляхДоИзменения<0, -Стр.ВсегоВРубляхДоИзменения, Стр.ВсегоВРубляхДоИзменения);
					КонецЕсли;
					Если НЕ ТоварыПоДокументу.Колонки.Найти("НДСВРубляхДоИзменения") = Неопределено Тогда
						Стр2.НДСВРубляхДоИзменения= ?(Стр.НДСВРубляхДоИзменения<0, -Стр.НДСВРубляхДоИзменения, Стр.НДСВРубляхДоИзменения);
					КонецЕсли;
					Если НЕ ТоварыПоДокументу.Колонки.Найти("СуществуютЗаписиРублевыхСуммДоИзменения") = Неопределено Тогда
						Стр2.СуществуютЗаписиРублевыхСуммДоИзменения= Стр.СуществуютЗаписиРублевыхСуммДоИзменения;
					КонецЕсли;
					
				Иначе
					
					Стр2.КодНоменклатуры= 		Стр.КодНоменклатуры;
					Стр2.КодЕдиницыИзмерения= 	СокрЛП(Стр.КодЕдиницыИзмерения);
					Стр2.ВидУпаковки= 			Стр.ВидУпаковки;
					Стр2.КоличествоВОдномМесте= Стр.КоличествоВОдномМесте;
					Стр2.КоличествоМест= 		Стр.КоличествоМест;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Стр2.СтранаПроисхождения) Тогда
					//СтранаКод = Стр2.СтранаПроисхождения.Код;
					//Если СтранаКод = "643" Тогда
					//	Стр2.СтранаПроисхождения= Справочники.СтраныМира.ПустаяСсылка();
					//	стр2.НомерГТД 			= Справочники.НомераГТД.ПустаяСсылка();
					//ИначеЕсли (НЕ ЗначениеЗаполнено(Стр2.НомерГТД) ИЛИ ПустаяСтрока(Стр2.НомерГТД.Код)) И МетодСервера(,"СтранаЧленТС", СтранаКод) Тогда
					//	Стр2.СтранаПроисхождения= Справочники.СтраныМира.ПустаяСсылка();
					//КонецЕсли;
					Если (НЕ ЗначениеЗаполнено(Стр2.НомерГТД) ИЛИ ПустаяСтрока(Стр2.НомерГТД.Код)) И МетодСервера(,"СтранаЧленТС", Стр2.СтранаПроисхождения.Код) Тогда
						Стр2.СтранаПроисхождения= Справочники.СтраныМира.ПустаяСсылка();
					КонецЕсли;
				Иначе
					Стр2.НомерГТД= Справочники.НомераГТД.ПустаяСсылка();
				КонецЕсли;

				Стр2.ПризнакТоварРаботаУслуга= Стр.ПризнакТоварРаботаУслуга;

			КонецЦикла;	
			
		КонецЦикла;				 
		
		Возврат Товары;
		
	КонецФункции
	
	Функция ПолучитьДанныеШапки(Документы, СчетФактура = Неопределено) Экспорт
		
		//Документы - список документов либо одичночнй документ
		Если ТипЗнч(Документы) = тип("СписокЗначений") тогда 
			ДокументыИтератор = документы
		Иначе 
			ДокументыИтератор = новый списокЗначений;                               
			ДокументыИтератор.Добавить(Документы)
		КонецЕсли;
		
		Если СчетФактуранаАванс(СчетФактура) тогда 
			ЗапросШапка = новый запрос;
			ЗапросШапка.Текст = "ВЫБРАТЬ
			|	СчетФактураВыданный.Организация,
			|	"""" как Грузоотправитель,
			|	СчетФактураВыданный.Контрагент,
			|	"""" КАК Грузополучатель,
			|	"""" как АдресДоставки,
			|	СчетФактураВыданный.ВалютаДокумента,
			|	истина как СуммаВключаетНДС
			|ИЗ
			|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|ГДЕ
			|	СчетФактураВыданный.Ссылка = &Ссылка"; 
			ЗапросШапка.УстановитьПараметр("Ссылка", СчетФактура);
			возврат ЗапросШапка.Выполнить().Выгрузить();
		ИначеЕсли ОснованиеОтчетКомитентаОПродажах_ОтчетОЗакупках(ДокументыИтератор,СчетФактура) Тогда
			
			ЗапросШапка = новый Запрос;
			ЗапросШапка.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомитентуОПродажахПоставщики.Поставщик КАК Организация,
			|	"""" КАК Грузоотправитель,
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка.Контрагент,
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка.ВалютаДокумента,
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка.Организация КАК Грузополучатель
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажахПоставщики
			|ГДЕ
			|	ОтчетКомитентуОПродажахПоставщики.Ссылка = &Ссылка
			|	И ОтчетКомитентуОПродажахПоставщики.СчетФактура = &СчетФактура";
			ЗапросШапка.УстановитьПараметр("Ссылка", ДокументыИтератор[0].Значение);
			ЗапросШапка.УстановитьПараметр("СчетФактура", СчетФактура);
			
			возврат ЗапросШапка.Выполнить().Выгрузить();
			
		ИначеЕсли ОснованиеОтчетКомиссионераОПродажах(ДокументыИтератор, СчетФактура) Тогда
			
			ЗапросШапка = Новый Запрос;
			ЗапросШапка.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА ""он же""
			|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Ссылка.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	ОтчетКомиссионераОПродажахПокупатели.Покупатель КАК Контрагент,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель
			|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Ссылка.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВалютаДокумента
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
			|ГДЕ
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &Ссылка
			|	И ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &СчетФактура";
			ЗапросШапка.УстановитьПараметр("Ссылка", ДокументыИтератор[0].Значение);
			ЗапросШапка.УстановитьПараметр("СчетФактура", СчетФактура);
			
			Возврат ЗапросШапка.Выполнить().Выгрузить();
		ИначеЕсли ОснованиеАР_НачислениеАренднойПлаты(ДокументыИтератор) Тогда
			
			ЗапросШапка = новый Запрос;
			ЗапросШапка.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	АР_НачислениеАренднойПлаты.Организация КАК Организация,
			|	"""" КАК Грузоотправитель,
			|	АР_НачислениеАренднойПлаты.Контрагент,
			|	АР_НачислениеАренднойПлаты.ВалютаДокумента,
			|	"""" КАК Грузополучатель
			|ИЗ
			|	Документ.АР_НачислениеАренднойПлаты КАК АР_НачислениеАренднойПлаты
			|ГДЕ
			|	АР_НачислениеАренднойПлаты.Ссылка = &Ссылка";
			ЗапросШапка.УстановитьПараметр("Ссылка", ДокументыИтератор[0].Значение);
		
			возврат ЗапросШапка.Выполнить().Выгрузить();
			
		Иначе 	
			
			ЗапросШапка = новый запрос;
			ЗапросШапка.Текст = 
			"ВЫБРАТЬ
			|	Т.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА Т.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА ""он же""
			|		ИНАЧЕ Т.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|	Т.Контрагент,
			|	ВЫБОР
			|		КОГДА Т.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА Т.Контрагент
			|		ИНАЧЕ Т.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|	Т.АдресДоставки КАК АдресДоставки,
			|	Т.ВалютаДокумента КАК ВалютаДокумента,
			|	Т.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	""[СведенияОТранспортировкеИГрузе]"" КАК СведенияОТранспортировкеИГрузе
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК Т
			|ГДЕ
			|	Т.Ссылка В(&СпДокументовОснований)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Организация,
			|	ВЫБОР
			|		КОГДА Т.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			ТОГДА ""он же""
			|		ИНАЧЕ Т.Грузоотправитель
			|	КОНЕЦ,
			|	Т.Контрагент,
			|	ВЫБОР
			|		КОГДА Т.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			ТОГДА Т.Контрагент
			|		ИНАЧЕ Т.Грузополучатель
			|	КОНЕЦ,
			|	NULL,
			|	Т.ВалютаДокумента,
			|	Т.СуммаВключаетНДС,
			|	Неопределено
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК Т
			|ГДЕ
			|	Т.Ссылка В(&СпДокументовОснований)";
			
			Если МетодСервера(,"ЕстьРеквизитПрикладногоОбъекта", Тип("ДокументСсылка.РеализацияТоваровУслуг"), "СведенияОТранспортировкеИГрузе") Тогда
				ЗапросШапка.Текст= СтрЗаменить(ЗапросШапка.Текст, """[СведенияОТранспортировкеИГрузе]""", "Т.СведенияОТранспортировкеИГрузе");
			Иначе
				ЗапросШапка.Текст= СтрЗаменить(ЗапросШапка.Текст, """[СведенияОТранспортировкеИГрузе]""", "Неопределено");
			КонецЕсли;
			
			Если Метаданные.Документы.Найти("ОказаниеУслуг") <> Неопределено Тогда
				ЗапросШапка.Текст = ЗапросШапка.Текст  + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ОказаниеУслугКонтрагенты.Ссылка.Организация,
				|	"""",
				|	ОказаниеУслугКонтрагенты.Контрагент,
				|	"""",
				|	"""",
				|	ОказаниеУслугКонтрагенты.Ссылка.ВалютаДокумента,
				|	ОказаниеУслугКонтрагенты.Ссылка.СуммаВключаетНДС,
				|	Неопределено
				|ИЗ
				|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
				|ГДЕ
				|	ОказаниеУслугКонтрагенты.Ссылка В(&СпДокументовОснований)
				|	И ОказаниеУслугКонтрагенты.СчетФактура = &СчетФактура";
			КонецЕсли;
			
			ЗапросШапка.Текст = ЗапросШапка.Текст  + "				
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АктОбОказанииПроизводственныхУслуг.Организация,
			|	"""",
			|	АктОбОказанииПроизводственныхУслуг.Контрагент,
			|	"""",
			|	"""",
			|	АктОбОказанииПроизводственныхУслуг.ВалютаДокумента,
			|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС,
			|	Неопределено
			|ИЗ
			|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
			|ГДЕ
			|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&СпДокументовОснований)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОтчетКомиссионераОПродажах.Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажах.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
			|			ТОГДА ""он же""
			|		ИНАЧЕ ОтчетКомиссионераОПродажах.Грузоотправитель
			|	КОНЕЦ,
			|	ОтчетКомиссионераОПродажах.Контрагент,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажах.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
			|			ТОГДА ОтчетКомиссионераОПродажах.Контрагент
			|		ИНАЧЕ ОтчетКомиссионераОПродажах.Грузополучатель
			|	КОНЕЦ,
			|	"""",
			|	ОтчетКомиссионераОПродажах.ВалютаДокумента,
			|	ОтчетКомиссионераОПродажах.СуммаВключаетНДС,
			|	Неопределено
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
			|ГДЕ
			|	ОтчетКомиссионераОПродажах.Ссылка В(&СпДокументовОснований)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОтчетКомитентуОПродажах.Организация,
			|	"""",
			|	ОтчетКомитентуОПродажах.Контрагент,
			|	"""",
			|	"""",
			|	ОтчетКомитентуОПродажах.ВалютаДокумента,
			|	ОтчетКомитентуОПродажах.СуммаВключаетНДС,
			|	Неопределено
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
			|ГДЕ
			|	ОтчетКомитентуОПродажах.Ссылка В(&СпДокументовОснований)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацияУслугПоПереработке.Организация,
			|	"""",
			|	РеализацияУслугПоПереработке.Контрагент,
			|	"""",
			|	"""",
			|	РеализацияУслугПоПереработке.ВалютаДокумента,
			|	РеализацияУслугПоПереработке.СуммаВключаетНДС,
			|	Неопределено
			|ИЗ
			|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
			|ГДЕ
			|	РеализацияУслугПоПереработке.Ссылка В(&СпДокументовОснований)";
			
			если метаданные.Документы.Найти("КорректировкаРеализации") <> неопределено тогда 
				ЗапросШапка.Текст  =ЗапросШапка.Текст  +"
				|Объединить все  
				|"+"ВЫБРАТЬ
				|	КорректировкаРеализации.Организация КАК Организация,
				|	ВЫБОР
				|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(справочник.контрагенты.ПустаяСсылка)
				|			ТОГДА ""он же""
				|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
				|	КОНЕЦ КАК Грузоотправитель,
				|	КорректировкаРеализации.Контрагент,
				|	ВЫБОР
				|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(справочник.контрагенты.пустаяСсылка)
				|			ТОГДА КорректировкаРеализации.Контрагент
				|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
				|	КОНЕЦ КАК Грузополучатель,
				|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
				|	КорректировкаРеализации.ВалютаДокумента КАК ВалютаДокумента,
				|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	Неопределено
				|ИЗ
				|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
				|ГДЕ
				|	КорректировкаРеализации.Ссылка В(&СпДокументовОснований)";
			КонецЕсли;					
			
			Если Метаданные.Документы.Найти("СчетНаОплатуПокупателю") <> Неопределено Тогда
				ЗапросШапка.Текст = ЗапросШапка.Текст  + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	СчетНаОплату.Организация,
				|	"""",
				|	СчетНаОплату.Контрагент,
				|	"""",
				|	"""",
				|	СчетНаОплату.ВалютаДокумента,
				|	СчетНаОплату.СуммаВключаетНДС,
				|	Неопределено
				|ИЗ
				|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплату
				|ГДЕ
				|	СчетНаОплату.Ссылка В(&СпДокументовОснований)";
			КонецЕсли;
			
			Если Метаданные.Документы.Найти("ПередачаОС") <> Неопределено Тогда
				ЗапросШапка.Текст = ЗапросШапка.Текст  + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПередачаОС.Организация,
				|	"""",
				|	ПередачаОС.Контрагент,
				|	"""",
				|	"""",
				|	ПередачаОС.ВалютаДокумента,
				|	ПередачаОС.СуммаВключаетНДС,
				|	Неопределено
				|ИЗ
				|	Документ.ПередачаОС КАК ПередачаОС
				|ГДЕ
				|	ПередачаОС.Ссылка В(&СпДокументовОснований)";
			КонецЕсли;
			
			ЗапросШапка.УстановитьПараметр("СпДокументовОснований", ДокументыИтератор);
			ЗапросШапка.УстановитьПараметр("СчетФактура", СчетФактура);
			возврат  ЗапросШапка.Выполнить().выгрузить();
		КонецЕсли;	
		
	КонецФункции	
	
	Функция ПолучитьБанковскийСчет(Док) Экспорт
		
		Если ТипЗнч(Док) = тип("ДокументСсылка.КорректировкаРеализации") тогда
			ДокТоварный = Док.ДокументРеализации;
			пока ТипЗнч(ДокТоварный) = тип("ДокументСсылка.КорректировкаРеализации") цикл 
				ДокТоварный = ДокТоварный.ДокументРеализации;
			КонецЦикла;
		Иначе
			ДокТоварный = Док;
		КонецЕсли;	
		
		Возврат ?(ДокТоварный.Метаданные().Реквизиты.найти("БанковскийСчетОрганизации")=неопределено, неопределено, ДокТоварный.БанковскийСчетОрганизации);
		
	конецфункции
	
	Функция ПолучитьПодразделениеИзДокумента(ДокСсылка) Экспорт
		Возврат ?(ДокСсылка.ПодразделениеОрганизации.ОбособленноеПодразделение, ДокСсылка.ПодразделениеОрганизации.НаименованиеПолное, "");
	КонецФункции
	
	Функция ПолучитьДанныеОбОснованииДляДиадок(ИСФ) Экспорт   
		результат = новый структура;
		
		ДокОснование = ИСФ.ДокументыОснования[0].ДокументОснование;
		Если ТипЗнч(Докоснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
			ДокОснование = ДокОснование.ДокументОтгрузки;
		Иначеесли ТипЗнч(Докоснование) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") тогда
			ДокОснование = ДокОснование;
		иначе 	
			пока (ТипЗнч(Докоснование) = Тип("ДокументСсылка.КорректировкаРеализации")) и (ДокОснование.ВидОперации = перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки) цикл 
				ДокОснование = ДокОснование.ДокументРеализации
			КонецЦикла;
		КонецЕсли;	
		
		результат.Вставить("ПервичныйДокументОснование",  ДокОснование);
		//ищем СФ
		запрос = новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СчетФактураВыданныйДокументыОснования.ДокументОснование,
		|	СчетФактураВыданныйДокументыОснования.Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		|ГДЕ
		|	СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументОснование";
		Запрос.УстановитьПараметр("Документоснование", ДокОснование);
		выборка = запрос.Выполнить().Выбрать();
		Если выборка.Следующий() тогда 
			Результат.Вставить("СФОснование", выборка.ссылка);
		КонецЕсли;	
		
		возврат результат;
	конецфункции	
	
	Функция ПолучитьМассивСсылокРТУПоСчетуНаОплату(СчетСсылка) Экспорт
		
		Запрос= Новый Запрос;
		
		Запрос.Текст= 
			"ВЫБРАТЬ
      		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
          	|ИЗ
          	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
         	|ГДЕ
          	|	РеализацияТоваровУслуг.СчетНаОплатуПокупателю = &СчетНаОплатуПокупателю
          	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ";
					  
		Запрос.УстановитьПараметр("СчетНаОплатуПокупателю", СчетСсылка);
		
		РезультатЗапроса= Запрос.Выполнить().Выгрузить();
		
		Возврат РезультатЗапроса.ВыгрузитьКолонку("Ссылка");		
		
	КонецФункции
	
	Функция ПолучитьМассивРасходныхНакладныхПоСчетуФактуреВыданному(СчетФактураСсылка) Экспорт
		
		Запрос= Новый Запрос;
		
		Если ТипЗнч(СчетФактураСсылка.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") 
			И ЗначениеЗаполнено(СчетФактураСсылка.ДокументОснование) Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура КАК ДокОснование
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
			|ГДЕ
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &ОтчетКомиссионераСсылка
			|	И ОтчетКомиссионераОПродажахПокупатели.СчетФактура <> &СФСсылка";
			
			Запрос.УстановитьПараметр("ОтчетКомиссионераСсылка", СчетФактураСсылка.ДокументОснование);
		
		ИначеЕсли НЕ Метаданные.Документы.СчетФактураВыданный.ТабличныеЧасти.Найти("ДокументыОснования") = Неопределено Тогда
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокОснование
				|ИЗ
				|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
				|ГДЕ
				|	СчетФактураВыданныйДокументыОснования.Ссылка = &СФСсылка
				|	И (СчетФактураВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
				|		ИЛИ СчетФактураВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
				|		ИЛИ СчетФактураВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.АктОбОказанииПроизводственныхУслуг
				|		ИЛИ СчетФактураВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах)";
		Иначе 
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	СчетФактураВыданный.ДокументОснование КАК ДокОснование
				|ИЗ
				|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
				|ГДЕ
				|	СчетФактураВыданный.Ссылка = &СФСсылка
				|	И (СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
				|		ИЛИ СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
				|		ИЛИ СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.АктОбОказанииПроизводственныхУслуг
				|		ИЛИ СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах)";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СФСсылка", СчетФактураСсылка);
		
		РезультатЗапроса= Запрос.Выполнить().Выгрузить();
		
		Возврат РезультатЗапроса.ВыгрузитьКолонку("ДокОснование");
		
	КонецФункции
	
	Функция ПолучитьСсылкуСчетаФактурыВыданногоПоДокументуОснованию(ДокументСсылка) Экспорт
		
		СФСсылка= 	Неопределено;
		Запрос= 	Новый Запрос;
		
		Если НЕ Метаданные.Документы.СчетФактураВыданный.ТабличныеЧасти.Найти("ДокументыОснования") = Неопределено Тогда
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	СчетФактураВыданныйДокументыОснования.Ссылка
				|ИЗ
				|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
				|ГДЕ
				|	СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументОснование
				|	И СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ";
		Иначе 
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	СчетФактураВыданный.Ссылка
				|ИЗ
				|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
				|ГДЕ
				|	СчетФактураВыданный.ДокументОснование = &ДокументОснование
				|	И СчетФактураВыданный.ПометкаУдаления = ЛОЖЬ";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылка);
		
		Выборка= Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СФСсылка= Выборка.Ссылка;
		КонецЕсли;
		
		Возврат СФСсылка;
		
	КонецФункции
	
	Функция ПолучитьДокОснованиеКорректировкиРеализации(ДокументСсылка) Экспорт
		
		ДокументОснование= Неопределено;
		
		Если НЕ ДокументСсылка.Метаданные().Реквизиты.Найти("ДокументРеализации") = Неопределено Тогда
			ДокументОснование= ДокументСсылка.ДокументРеализации;
		Иначе
			ДокументОснование= ДокументСсылка.ДокументОснование;
		КонецЕсли;
		
		Возврат ДокументОснование;
		
	КонецФункции
	
	Функция ПолучитьСчетНаОплатуНаОснованииРТУ(ДокументСсылка) Экспорт
		
		Возврат ДокументСсылка.СчетНаОплатуПокупателю;			
		
	КонецФункции
	
	Функция ПолучитьЗаказПокупателяНаОснованииРТУ(ДокументСсылка) Экспорт
		
		Возврат Неопределено;
		
	КонецФункции
	
	Функция ПолучитьСФОснованиеПоИСФ_КСФ(ИСФ_КСФ) Экспорт
		
		ДокОснование= ИСФ_КСФ.ДокументыОснования[0].ДокументОснование;
		Если ДокОснование.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда 
			ДокОснование= ДокОснование.ДокументРеализации;
		Иначе 	
			Пока  ТипЗнч(ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") 
				И ДокОснование.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Цикл 
				
				ДокОснование= ДокОснование.ДокументРеализации;
				
			КонецЦикла;
		КонецЕсли;	
		
		Запрос= Новый Запрос;
		Запрос.Текст= 
			"ВЫБРАТЬ
            |	СчетФактураВыданныйДокументыОснования.Ссылка
            |ИЗ
            |	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
            |ГДЕ
			|	СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументОснование
			|	И СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ";
            			
		Запрос.УстановитьПараметр("Документоснование", ДокОснование);
		Выборка= Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда 
			Возврат Выборка.Ссылка;
		КонецЕсли;	
		
		Возврат Неопределено;
	
	КонецФункции

	Функция ПолучитьДанныеДляФормированияУПД(ДокССылка, ТипДокумента) Экспорт
		
		ФункцияУПД = МетодСервера(, "ФункцияУПД", ТипДокумента);
		
		Если ФункцияУПД = "СЧФДОП" ИЛИ ФункцияУПД = "СЧФ" Тогда
			
			ДанныеДляФормированияСчетФактуры = СформироватьДанныеДляПечати(ДокССылка, Ложь);
			
			ДанныеДляФормированияУПД = Новый Структура("ДанныеШапки", Новый Структура);
			
			Для Каждого КлючИЗначение ИЗ ДанныеДляФормированияСчетФактуры Цикл
				
				Если КлючИЗначение.Ключ = "ТабличнаяЧасть" Тогда
					ДанныеДляФормированияУПД.Вставить("ТаблицаТоваров", КлючИЗначение.Значение);
				Иначе
					ДанныеДляФормированияУПД.ДанныеШапки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
				КонецЕсли;
				
			КонецЦикла;
			
			ПараметрыОтбораСтрок= Новый Структура("ЭтоУслуга", Ложь);
			СтрокаМассиваСтруктурНеУслуга= МетодСервера(, "НайтиСтрокуВМассивеСтруктур", ДанныеДляФормированияУПД.ТаблицаТоваров, ПараметрыОтбораСтрок);
			ДанныеДляФормированияУПД.ДанныеШапки.Вставить("СодержитТовары", СтрокаМассиваСтруктурНеУслуга <> Неопределено);
			
		Иначе
			
			ДанныеШапки = ПолучитьДанныеШапки(ДокССылка, Неопределено);
			ДанныеДляФормированияУПД = Новый Структура("ДанныеШапки", Новый Структура("ЦифровойИндексОбособленногоПодразделения,Дата,Поставщик,Покупатель,Грузоотправитель,Грузополучатель,Валюта,АдресДоставки"));
			Если ДанныеШапки.количество() = 0 Тогда
				вызватьисключение("не найден документ")
			иначе 
				ДанныеШапки = ДанныеШапки[0];
			КонецЕсли;	
			ЗаполнитьЗначенияСвойств(ДанныеДляФормированияУПД.ДанныеШапки, ДанныеШапки);
			ДанныеДляФормированияУПД.ДанныеШапки.ЦифровойИндексОбособленногоПодразделения = "";
			ДанныеДляФормированияУПД.ДанныеШапки.Дата       = ДокССылка.Дата;
			ДанныеДляФормированияУПД.ДанныеШапки.Поставщик  = ДанныеШапки.Организация;
			ДанныеДляФормированияУПД.ДанныеШапки.Покупатель = ДанныеШапки.Контрагент;
			ДанныеДляФормированияУПД.ДанныеШапки.Валюта     = ДанныеШапки.ВалютаДокумента;
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				Иначе
					КолонкаКодаТовара = "Код";
				КонецЕсли;
			Исключение
				КолонкаКодаТовара = "Код";
			КонецПопытки;
			ДанныеДляФормированияУПД.Вставить("ТаблицаТоваров", ПолучитьДанныеТЧ(ДокСсылка,, Константы.ВалютаРегламентированногоУчета.Получить(), КолонкаКодаТовара, Ложь));
			ДанныеДляФормированияУПД.ДанныеШапки.Вставить("СодержитТовары", ДанныеДляФормированияУПД.ТаблицаТоваров.Найти(Ложь, "ЭтоУслуга") <> Неопределено);
			
		КонецЕсли;
		
		Если ФункцияУПД = "СЧФДОП" Тогда
			ДанныеДляФормированияУПД.ДанныеШапки.Вставить("Функция", "InvoiceAndBasic");
		ИначеЕсли ФункцияУПД = "ДОП" Тогда
			ДанныеДляФормированияУПД.ДанныеШапки.Вставить("Функция", "Basic");
		ИначеЕсли ФункцияУПД = "СЧФ" Тогда
			ДанныеДляФормированияУПД.ДанныеШапки.Вставить("Функция", "Invoice");
		КонецЕсли;
		ДанныеДляФормированияУПД.ДанныеШапки.Вставить("ДатаНомерСвидетельстваОРегистрации", ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(ДокСсылка.Организация));
		
		Возврат ДанныеДляФормированияУПД;
		
	КонецФункции

//} ПОЛУЧЕНИЕ ДАННЫХ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ РАБОТА С КОНТЕНТОМ
	
	////////////////////////////////////////////////////////////////////////////////
	//{ ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

		Функция ПолучитьТекстЗапросаКонтактнаяИнформация(ЮрФизЛицо)
		
			Если ТипЗнч(ЮрФизЛицо) = тип("СправочникСсылка.Организации") тогда
				Если ЗначениеЗаполнено(ЮрФизЛицо.ИндивидуальныйПредприниматель)
					// Начиная с версии 3.0.43.148 контактная информация хранится в карточке организации.
					И МетодСервера(,"СравнитьВерсии", ПараметрыКлиентСервер.ВерсияКонфигурации, "3.0.43.148") = "ПерваяВерсияМладше" Тогда
					ТекстЗапроса = 
					"ВЫБРАТЬ
					|	ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей,
					|	ФизическиеЛицаКонтактнаяИнформация.Представление
					|ИЗ
					|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
					|ГДЕ
					|	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка
					|	И ФизическиеЛицаКонтактнаяИнформация.Тип = &Тип
					|	И ФизическиеЛицаКонтактнаяИнформация.Вид = &Вид";
				Иначе
					Если Метаданные.Справочники.Организации.ТабличныеЧасти.КонтактнаяИнформация.Реквизиты.Найти("ДействуетС") <> Неопределено Тогда
						ТекстЗапроса =
						"ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	ОрганизацииКонтактнаяИнформация.Ссылка КАК Объект,
						|	ОрганизацииКонтактнаяИнформация.Вид КАК Вид,
						|	МАКСИМУМ(ОрганизацииКонтактнаяИнформация.ДействуетС) КАК ДействуетС
						|ПОМЕСТИТЬ СрезКонтактнойИнформации
						|ИЗ
						|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
						|ГДЕ
						|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
						|	И ОрганизацииКонтактнаяИнформация.ДействуетС <= &ДействуетС
						|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
						|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид
						|
						|СГРУППИРОВАТЬ ПО
						|	ОрганизацииКонтактнаяИнформация.Вид, ОрганизацииКонтактнаяИнформация.Ссылка
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	ОрганизацииКонтактнаяИнформация.ЗначенияПолей,
						|	ОрганизацииКонтактнаяИнформация.Представление
						|ИЗ
						|	СрезКонтактнойИнформации КАК СрезКонтактнойИнформации
						|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
						|		ПО СрезКонтактнойИнформации.Объект = ОрганизацииКонтактнаяИнформация.Ссылка
						|			И СрезКонтактнойИнформации.Вид = ОрганизацииКонтактнаяИнформация.Вид
						|			И СрезКонтактнойИнформации.ДействуетС = ОрганизацииКонтактнаяИнформация.ДействуетС";
					Иначе
						ТекстЗапроса = 
						"ВЫБРАТЬ
						|	ОрганизацииКонтактнаяИнформация.ЗначенияПолей,
						|	ОрганизацииКонтактнаяИнформация.Представление
						|ИЗ
						|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
						|ГДЕ
						|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
						|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
						|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
					КонецЕсли;
				КонецЕсли;
			Иначе
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	КонтрагентыКонтактнаяИнформация.ЗначенияПолей,
				|	КонтрагентыКонтактнаяИнформация.Представление
				|ИЗ
				|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
				|ГДЕ
				|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
				|	И КонтрагентыКонтактнаяИнформация.Тип = &Тип
				|	И КонтрагентыКонтактнаяИнформация.Вид = &Вид";
			КонецЕсли;
			
			Возврат ТекстЗапроса;
			
		КонецФункции
		
		Процедура ЗаполнитьСтруктурированноеОписаниеАдреса(AddressContent, СведенияОбОрганизации, ЮрФизЛицо, ЮрАдрес, ДатаДокумента) Экспорт
			
			Запрос= Новый Запрос;
			Запрос.Текст= ПолучитьТекстЗапросаКонтактнаяИнформация(ЮрФизЛицо);
			Если ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Организации") И ЗначениеЗаполнено(ЮрФизЛицо.ИндивидуальныйПредприниматель)
			  // Начиная с версии 3.0.43.148 контактная информация хранится в карточке организации.
			  И МетодСервера(,"СравнитьВерсии", ПараметрыКлиентСервер.ВерсияКонфигурации, "3.0.43.148") = "ПерваяВерсияМладше" Тогда
				Запрос.УстановитьПараметр("Ссылка", ЮрФизЛицо.ИндивидуальныйПредприниматель);
				Запрос.УстановитьПараметр("Вид", 	ПолучитьВидКИ(ЮрФизЛицо, Юрадрес, Истина));
			Иначе
				Запрос.УстановитьПараметр("Ссылка", ЮрфизЛицо);
				Запрос.УстановитьПараметр("Вид", 	ПолучитьВидКИ(ЮрФизЛицо, Юрадрес));
			КонецЕсли;
			Запрос.УстановитьПараметр("ДействуетС", ДатаДокумента);
			Запрос.УстановитьПараметр("Тип",		Перечисления.ТипыКонтактнойИнформации.Адрес);

			Выборка= Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда 
				
				СтруктураАдреса= Выборка.ЗначенияПолей;
				ЭтоСтрокаXML= 	 ЭтоКонтактнаяИнформацияВXML(СтруктураАдреса);
				
				СтранаРегистрацииКод= "643";
				Если СведенияОбОрганизации.Свойство("СтранаРегистрации") И ЗначениеЗаполнено(СведенияОбОрганизации.СтранаРегистрации) Тогда
					СтранаРегистрацииКод= СведенияОбОрганизации.СтранаРегистрации.Код;
				КонецЕсли;
										
				Если НЕ ЭтоСтрокаXML И ТипЗнч(структураАдреса) = Тип("Строка") Тогда
					
					Данные= ПреобразоватьСтрокуВСписокПолей(СтруктураАдреса);
										
					Индекс= 			ПолучитьЭлементСЗ(Данные, "Индекс");
					Регион= 			МетодСервера(,"КодРегиона", ПолучитьЭлементСЗ(Данные, "Регион"));
					Район= 				ПолучитьЭлементСЗ(Данные, "Район");
					Город= 				ПолучитьЭлементСЗ(Данные, "Город");
					НаселенныйПункт= 	ПолучитьЭлементСЗ(Данные, "НаселенныйПункт");
					Улица= 				ПолучитьЭлементСЗ(Данные, "Улица");
					Дом= 				ПолучитьЭлементСЗ(Данные, "Дом");
					Корпус= 			ПолучитьЭлементСЗ(Данные, "Корпус");
					Квартира= 			ПолучитьЭлементСЗ(Данные, "Квартира"); 
					
					Если Регион = "" И Район = "" И Город = "" И НаселенныйПункт = "" И Улица = "" И Дом = "" И Корпус = "" И Квартира = "" Тогда
						// как иностранный адрес
						КодСтраны= ПолучитьЭлементСЗ(Данные, "КодСтраны");
						AddressContent.IsForeign= 	Истина;
						AddressContent.CountryCode= ?(ЗначениеЗаполнено(КодСтраны), КодСтраны, СтранаРегистрацииКод);
						AddressContent.AddressText= ПолучитьЭлементСЗ(Данные, "Представление");
					Иначе
						// как адрес РФ
						AddressContent.IsForeign= 	Ложь;
						AddressContent.ZipCode=		Индекс;
						AddressContent.RegionCode=	Регион;
						AddressContent.Territory=	Район;
						AddressContent.City=		Город;
						AddressContent.Locality=	НаселенныйПункт;
						AddressContent.Street=		Улица;
						AddressContent.Building=	Дом;
						AddressContent.Block= 		Корпус;
						AddressContent.Apartment=	Квартира;	
					КонецЕсли;
										
				ИначеЕсли ЭтоСтрокаXML Тогда
					
					Данные=						"";
					ЭтоРоссийскийАдрес=			Ложь;
					АдресВведенВСвободнойФорме=	Ложь;
					ПочтовыйИндексАдреса=		"";
					
					ЗданияИПомещения= Новый Структура;
					ЗданияИПомещения.Вставить("Дом", "");
					ЗданияИПомещения.Вставить("Корпус", "");
					ЗданияИПомещения.Вставить("Квартира", "");
					
					Если Метаданные.ОбщиеМодули.Найти("УправлениеКонтактнойИнформациейСлужебный") <> Неопределено Тогда
						Данные=	 			  			Вычислить("УправлениеКонтактнойИнформациейСлужебный.АдресXMLВXDTO(Выборка.ЗначенияПолей, Выборка.Представление)");
						ЭтоРоссийскийАдрес=	  			Вычислить("УправлениеКонтактнойИнформациейСлужебный.ЭтоРоссийскийАдрес(Данные.Состав)");
						АдресВведенВСвободнойФорме=	  	Вычислить("УправлениеКонтактнойИнформациейСлужебный.АдресВведенВСвободнойФорме(Данные)");
						ПочтовыйИндексАдреса= 			Вычислить("УправлениеКонтактнойИнформациейСлужебный.ПочтовыйИндексАдреса(ПолучитьСвойствоXDTO(Данные, ""Состав""))");
						ЗданияИПомещения=	  			Вычислить("ПолучитьКорпусКвартиру(УправлениеКонтактнойИнформациейСлужебный.ЗданияИПомещенияАдреса(Данные))");
					ИначеЕсли Метаданные.ОбщиеМодули.Найти("КонтактнаяИнформацияСлужебный") <> Неопределено Тогда
						Данные=				  			Вычислить("КонтактнаяИнформацияСлужебный.ДесериализацияАдреса(Выборка.ЗначенияПолей)");
						ЭтоРоссийскийАдрес=	  			Вычислить("КонтактнаяИнформацияСлужебный.ЭтоРоссийскийАдрес(Данные.Состав)");
						АдресВведенВСвободнойФорме=	  	Вычислить("КонтактнаяИнформацияСлужебный.АдресВведенВСвободнойФорме(Данные)");
						ПочтовыйИндексАдреса=			Вычислить("КонтактнаяИнформацияСлужебный.ПочтовыйИндексАдреса(ПолучитьСвойствоXDTO(Данные, ""Состав""))");
						ЗданияИПомещения=     			Вычислить("ПолучитьКорпусКвартиру(КонтактнаяИнформацияСлужебный.ЗданияИПомещенияАдреса(Данные))");
					Иначе
						ВызватьИсключение "В текущей конфигурации не найден модуль управления контактной информацией!";
					КонецЕсли;
										
					Если НЕ АдресВведенВСвободнойФорме И ЭтоРоссийскийАдрес Тогда
						
						// как адрес РФ по КЛАДРу
						СубъектРФ= 	МетодСервера(,"КодРегиона", ПолучитьСвойствоXDTO(Данные, "Состав.Состав.СубъектРФ"));
						Район=		СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.СвРайМО.Район"));
						Город=		СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.Город"));
						НаселПункт=	СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.НаселПункт"));
						Улица=		СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.Улица"));
						Дом=		СокрЛП(ЗданияИПомещения.Дом);
						Корпус=		СокрЛП(ЗданияИПомещения.Корпус);
						Квартира=	СокрЛП(ЗданияИПомещения.Квартира);
					
						AddressContent.IsForeign= 	Ложь;
						AddressContent.ZipCode=		СокрЛП(ПочтовыйИндексАдреса);
						AddressContent.RegionCode=	СубъектРФ;
						AddressContent.Territory=	Район;
						Если НЕ ЗначениеЗаполнено(AddressContent.Territory) Тогда
							AddressContent.Territory= СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.СвРайМО1.Район"));
						КонецЕсли;
						Если НЕ ЗначениеЗаполнено(AddressContent.Territory) Тогда
							AddressContent.Territory= СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.ОКАТО"));
						КонецЕсли;
						AddressContent.City=		Город;
						AddressContent.Locality=	НаселПункт;
						AddressContent.Street=		Улица;
						AddressContent.Building=	Дом;
						AddressContent.Block=		Корпус;
						AddressContent.Apartment=	Квартира;
						
					Иначе
						
						// как иностранный адрес или адрес РФ произвольной строкой
						Попытка
							ДанныеСтраныМира= Справочники.СтраныМира.ДанныеСтраныМира(, СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Страна")));
							КодСтраны= ДанныеСтраныМира.Код;
						Исключение
							КодСтраны= "";
						КонецПопытки;
						
						AddressContent.IsForeign= 	Истина;
						AddressContent.CountryCode= ?(ЗначениеЗаполнено(КодСтраны), КодСтраны, СтранаРегистрацииКод);
						
						AddressContent.AddressText= СокрЛП(ПолучитьСвойствоXDTO(Данные, "Состав.Состав.Представление"));
						Если НЕ ЗначениеЗаполнено(AddressContent.AddressText) Тогда
							AddressContent.AddressText= СокрЛП(ПолучитьСвойствоXDTO(Данные, "Представление"));
						КонецЕсли;
						
					КонецЕсли;
										
				КонецЕсли;
								
			КонецЕсли;	
			
		КонецПроцедуры
		
		Функция ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(Организация) Экспорт
			
			Возврат МетодСервера("Модуль_ИнтеграцияУниверсальный", "ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП", Организация);

		КонецФункции

		Функция СформироватьПредставлениеКонтрагентаДляАкта(Организация, ДатаОперации) Экспорт
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, ДатаОперации);
			Возврат ОтрезатьПравуюЗапятую(ДобавитьРазделитель(СведенияОбОрганизации.ПолноеНаименование) + ДобавитьРазделитель(СведенияОбОрганизации.ИНН, "ИНН: ") + ДобавитьРазделитель(СведенияОбОрганизации.КПП, "КПП: "));
			
		КонецФункции
		
		Функция ПолучитьБанковскийСчетПоДокументу(ДокССылка)
			
			Если (ДокСсылка.Метаданные().Реквизиты.Найти("СтруктурнаяЕдиница")<>Неопределено) и 
				 ЗначениеЗаполнено(Докссылка.СтруктурнаяЕдиница)  и 
				 (ТипЗнч(Докссылка.СтруктурнаяЕдиница)=Тип("СправочникСсылка.БанковскиеСчета")) 
			Тогда 
				возврат Докссылка.СтруктурнаяЕдиница
			Иначе 
				возврат Неопределено
			КонецЕсли;	
			
		КонецФункции	
		
		Функция СформироватьПечатнуюФормуСчетаНаОплату(ДокССылка, ПараметрыОтправкиНаСогласование =  Неопределено, ФИОПодписанта = "") Экспорт
			
			ДанныеШапки =  ПолучитьДанныеШапки(ДокССылка);
			Если ДанныеШапки.количество()=0 тогда 
				ВызватьИсключение("не найден документ");
			Иначе
				ДанныеШапки = ДанныеШапки[0];
			КонецЕсли;	
			
			Макет = ОбработкаОбъект.ПолучитьМакет("СчетНаОплату");
			Шапка1 = Макет.ПолучитьОбласть("ШапкаСчета1");
			Таб = Новый ТабличныйДокумент;
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокССылка.Организация, ДокССылка.Дата, ПолучитьБанковскийСчетПоДокументу(ДокССылка));
			Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
				Шапка1.Параметры.БанкПолучателя 	 = СведенияОбОрганизации.Банк;
				Шапка1.Параметры.БИКБанкаПолучателя  = СведенияОбОрганизации.БИК;
				Шапка1.Параметры.СчетБанкаПолучателя = СведенияОбОрганизации.КоррСчет;
				Шапка1.Параметры.СчетПолучателя 	 = СведенияОбОрганизации.НомерСчета;
				Шапка1.Параметры.ИННПолучателя 		 = СведенияОбОрганизации.ИНН;
				Шапка1.Параметры.КПППолучателя 		 = СведенияОбОрганизации.КПП;
				Шапка1.Параметры.Получатель 		 = СведенияОбОрганизации.НаименованиеДляПечатныхФорм;
			КонецЕсли;	
			Таб.Вывести(Шапка1);
			
			НомерДокумента = МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
			
			Шапка2 =  Макет.ПолучитьОбласть("ШапкаСчета2");
			Шапка2.Параметры.Заголовок = "Счет на оплату № " + НомерДокумента + " от " + Формат(ДокСсылка.Дата,"ДФ=dd.MM.yyyy");
			Таб.Вывести(Шапка2);
			
			ОписаниеОрганизации= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			Шапка3 =  Макет.ПолучитьОбласть("ШапкаСчета3");
			Шапка3.Параметры.Поставщик = ОписаниеОрганизации;
			Таб.Вывести(Шапка3);
			
			СведенияОбКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокССылка.Контрагент, ДокССылка.Дата);
			
			ОписаниеКонтрагента= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбКонтрагенте, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			Шапка4 =  Макет.ПолучитьОбласть("ШапкаСчета4");
			Шапка4.Параметры.Покупатель = ОписаниеКонтрагента;
			Таб.Вывести(Шапка4);
			
			ШапкаТаблицы =  Макет.ПолучитьОбласть("Шапкатаблицы");
			Таб.Вывести(ШапкаТаблицы);
			СтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
			СуммаВсего = 0;
			СуммаВсегоНДС = 0;
			ц = 0;
			
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				Иначе
					КолонкаКодаТовара = "Код";
				КонецЕсли;
			Исключение
				КолонкаКодаТовара = "Код";
			КонецПопытки;
			
			ТаблицаТоваров= 	ПолучитьДанныеТЧ(ДокССылка, , Константы.ВалютаРегламентированногоУчета.Получить(), КолонкаКодаТовара, Ложь);
			ЕстьСтавкаБезНДС= 	Ложь;
			
			Для каждого Стр Из ТаблицаТоваров Цикл
				
				Ц= Ц + 1;
				СтрокаТаблицы.Параметры.НомерСтроки= 		Ц;
				СтрокаТаблицы.Параметры.Товар= 				Стр.Номенклатура;
				СтрокаТаблицы.Параметры.Количество= 		Стр.Количество;
				СтрокаТаблицы.Параметры.ЕдиницаИзмерения= 	Строка(Стр.ЕдиницаИзмерения);
				СтрокаТаблицы.Параметры.Цена= 				Стр.Цена;
				СтрокаТаблицы.Параметры.Сумма= 				Стр.сумма;
				
				Если Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
					ЕстьСтавкаБезНДС= Истина;
				КонецЕсли;
							
				СуммаВсего= 								СуммаВсего 		+ Стр.Сумма;
				СуммаВсегоНДС= 								СуммаВсегоНДС 	+ Стр.СуммаНДС;
				
				Таб.Вывести(СтрокаТаблицы);
			КонецЦикла;
			
			СуммаВключаетНДС = ?(  ДокССылка.метаданные().реквизиты.найти("СуммаВключаетНДС")=неопределено, истина,   ДокССылка.СуммаВключаетНДС);
			СуммаВсегоСНДС =  СуммаВсего+?(СуммаВключаетНДС, 0, СуммаВсегоНДС);
			
			Подвал = Макет.ПолучитьОбласть("Подвал");
			Подвал.Параметры.Всего =  СуммаВсего; 
			Таб.Вывести(Подвал);
			
			ПодвалНДС = Макет.ПолучитьОбласть("ПодвалНДС");
			Если СуммаВсегоНДС <> 0 Тогда
				ПодвалНДС.Параметры.НДС = ?(СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
				ПодвалНДС.Параметры.ВсегоНДС = Формат(СуммаВсегоНДС,"ЧЦ=15; ЧДЦ=2");
			Иначе
				ПодвалНДС.Параметры.НДС = "Без налога (НДС)";
				ПодвалНДС.Параметры.ВсегоНДС = "-";
			КонецЕсли;
			Таб.Вывести(ПодвалНДС);
			
			ПодвалИтого = Макет.ПолучитьОбласть("ПодвалИтогоКОплате");
			ПодвалИтого.Параметры.ИтогоКОплате = СуммаВсегоСНДС;
			Таб.Вывести(ПодвалИтого);
			
			ПодвалСуммаПрописью = Макет.ПолучитьОбласть("ПодвалСуммаПрописью");
			ПодвалСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований " + ТаблицаТоваров.Количество() 
			+ ", на сумму "+ Формат(СуммаВсегоСНДС,"ЧЦ=15; ЧДЦ=2") + " " + СокрП(ДокССылка.ВалютаДокумента);
			
			ПодвалСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(СуммаВсегоСНДС, ,ДокССылка.ВалютаДокумента.ПараметрыПрописиНаРусском);
			Таб.Вывести(ПодвалСуммаПрописью);
			
			ПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчета");
			если  НЕ ПараметрыОтправкиНаСогласование = Неопределено Тогда 
				ПодвалСчета.Параметры.ФИОРуководителя =  ?(ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПолучателя), ПараметрыОтправкиНаСогласование.ФИОПолучателя, "_");
			Иначе 	
				ПодвалСчета.Параметры.ФИОРуководителя =  ФИОПодписанта;
			КонецЕсли;	
			Таб.Вывести(ПодвалСчета);
			
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
			ИмяФайла = "Счет №" + ЗаменитьНедопустимыеСимволы(НомерДокумента) + " от " + Формат(ДокССылка.Дата, "ДЛФ=Д") + ".pdf";
			Таб.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.PDF);
			
			Результат= Новый Структура;
			Результат.Вставить("Таблица", 				Таб);
			Результат.Вставить("СписокОшибок", 			"");
			Результат.Вставить("ИмяВременногоФайла", 	ИмяВременногоФайла);
			Результат.Вставить("ИмяФайла", 				ИмяФайла);
			Результат.Вставить("Дата", 					ДокССылка.Дата);
			Результат.Вставить("Номер", 				НомерДокумента);
			Результат.Вставить("Сумма", 				СуммаВсегоСНДС);
			Результат.Вставить("СуммаНДС", 				СуммаВсегоНДС);
			Результат.Вставить("ДокументБезНДС", 		?(ЕстьСтавкаБезНДС И СуммаВсегоНДС = 0, Истина, Ложь));
			
			Возврат Результат;	
			
		КонецФункции

		Функция СформироватьПечатнуюФормуАктаСверки(ДокССылка, ПараметрыОтправкиНаСогласование =  Неопределено, ФИОПодписанта = "") Экспорт
			
			ДанныеСверки = ПолучитьДанныеДляФормированияАктаСверки(ДокСсылка);
			
			Таб = Новый ТабличныйДокумент;
			Макет = ОбработкаОбъект.ПолучитьМакет("АктСверкиВзаиморасчетов");
			
			ЗаголовокАкта = макет.ПолучитьОбласть("Заголовок");
			
			ОписаниеПериода = "за период: " + ПредставлениеПериода(НачалоДня(ДанныеСверки.ДатаНачалаСверки), КонецДня(ДанныеСверки.ДатаОкончанияСверки), "ФП = Истина");
			ПредставительОрганизации = ДанныеСверки.ПредставительОрганизации;
			ПредставительКонтрагента = ДанныеСверки.ПредставительКонтрагента;
			ЗаголовокАктаСверки =  "взаимных расчетов " + ОписаниеПериода  + Символы.ПС
			+ "между " + ДанныеСверки.ПредставлениеОрганизации + Символы.ПС + "и " + ДанныеСверки.ПредставлениеКонтрагента;
			Если ЗначениеЗаполнено(ДокСсылка.ДоговорКонтрагента) Тогда 
				ЗаголовокАктаСверки = ЗаголовокАктаСверки + символы.ПС+
				"по договору "+ДокСсылка.ДоговорКонтрагента;
			КонецЕсли;   
			
			ЗаголовокТаблицы = "Мы, нижеподписавшиеся, "+ПредставлениеПредставителяДляШапки(ПредставительОрганизации, ДанныеСверки.ПредставлениеОрганизации)+", с одной стороны, и "+
			ПредставлениеПредставителяДляШапки(ПредставительКонтрагента, ДанныеСверки.ПредставлениеКонтрагента)+", с другой стороны, составили настоящий акт сверки в том, что состояние "+
			"взаимных расчетов по данным учета следующее:";
			
			ЗаголовокАкта.Параметры.ЗаголовокАктаСверки = ЗаголовокАктаСверки;
			ЗаголовокАкта.Параметры.ЗаголовокТаблицы = ЗаголовокТаблицы;
			
			Таб.Вывести(ЗаголовокАкта);
			
			
			Шапка = макет.ПолучитьОбласть("Шапка|Секция");
			Шапка.Параметры.Шапка = "По данным "+ДанныеСверки.ПредставлениеОрганизации+", "+ДанныеСверки.ВалютаДокумента;
			Таб.Вывести(Шапка);
			Шапка.Параметры.Шапка = "По данным "+ДанныеСверки.ПредставлениеКонтрагента+", "+ДанныеСверки.ВалютаДокумента;
			Таб.Присоединить(Шапка);
			
			
			//выводим табличную часть
			СтрокаСальдо = Макет.ПолучитьОбласть("Сальдо|Секция");
			СальдоНачальное = ДанныеСверки.СальдоНачальное;
			СтрокаСальдо.Параметры.Дебет  = ?(СальдоНачальное>0, СальдоНачальное, 0);
			СтрокаСальдо.Параметры.Кредит = ?(СальдоНачальное>0, 0, -СальдоНачальное);
			Таб.Вывести(СтрокаСальдо);
			
			СтрокаСальдо.Параметры.Дебет  = ?(СальдоНачальное>0, 0, -СальдоНачальное);
			СтрокаСальдо.Параметры.Кредит = ?(СальдоНачальное>0, СальдоНачальное, 0);
			Таб.Присоединить(СтрокаСальдо);
			
			МассивДанныхПоДоговорам = ДанныеСверки.МассивДанныхПоДоговорам;
			СтрокаТаблицы = макет.ПолучитьОбласть("Строка|Секция");
			СтрокаНачалоДоговора = макет.получитьОбласть("ДоговорНачалоСекции|Секция");
			СтрокаКонецДоговора  = макет.получитьОбласть("ДоговорКонецСекции|Секция");
			ПустойШаблон = Новый Структура("Дата, представлениеДокумента, Дебет, Кредит");
			
			ОрганизацияИтогДт = 0;
			ОрганизацияИтогКт = 0;
			КонтрагентИтогДт = 0;
			КонтрагентИтогКт = 0;
			
			Для каждого ДанныеДоговора из МассивДанныхПоДоговорам цикл 
				Договор = ДанныеДоговора.ДоговорСсылка;
				ДанныеОрганизации = ДанныеДоговора.ДанныеОрганизации;
				ДанныеКонтрагента = ДанныеДоговора.ДанныеКонтрагента;
				
				Если ЗначениеЗаполнено(Договор) Тогда 
					СтрокаНачалоДоговора.Параметры.договор = Договор;
					Таб.Вывести(СтрокаНачалоДоговора);
					Таб.присоединить(СтрокаНачалоДоговора);
				КонецЕсли;
				
				Для ц = 0 по макс(ДанныеОрганизации.Количество(),ДанныеКонтрагента.Количество() )-1 цикл 
					СтрокаТаблицы.Параметры.Заполнить(?(ц<ДанныеОрганизации.Количество(), ДанныеОрганизации[ц],  ПустойШаблон));
					Таб.Вывести(СтрокаТаблицы);
					СтрокаТаблицы.Параметры.Заполнить(?(ц<ДанныеКонтрагента.Количество(), ДанныеКонтрагента[ц],  ПустойШаблон));
					Таб.Присоединить(СтрокаТаблицы);
				КонецЦикла;
				
				Если ЗначениеЗаполнено(Договор) Тогда 
					СтрокаКонецДоговора.Параметры.Дебет  =  ДанныеОрганизации.Итог("Дебет");
					СтрокаКонецДоговора.Параметры.Кредит =  ДанныеОрганизации.Итог("Кредит");
					Таб.Вывести(СтрокаКонецДоговора);
					СтрокаКонецДоговора.Параметры.Дебет  =  ДанныеКонтрагента.Итог("Дебет");
					СтрокаКонецДоговора.Параметры.Кредит =  ДанныеКонтрагента.Итог("Кредит");
					Таб.Присоединить(СтрокаКонецДоговора);
				КонецЕсли;	
				
				ОрганизацияИтогДт = ОрганизацияИтогДт+  ДанныеОрганизации.Итог("Дебет");
				ОрганизацияИтогКт = ОрганизацияИтогКт+  ДанныеОрганизации.Итог("Кредит");
				КонтрагентИтогДт  = КонтрагентИтогДт+  ДанныеКонтрагента.Итог("Дебет");
				КонтрагентИтогКт  = КонтрагентИтогКт+  ДанныеКонтрагента.Итог("Кредит");
			КонецЦикла;	
			
			ОрганизацияИтогСальдо = СальдоНачальное + ОрганизацияИтогДт - ОрганизацияИтогКт;
			КонтрагентИтогСальдо = -СальдоНачальное + КонтрагентИтогДт - КонтрагентИтогКт;
			
			//заполним итог по организации
			ПодвалИтоги = макет.ПолучитьОбласть("ПодвалИтоги|Секция");
			ПодвалИтоги.Параметры.ОборотыДт = ОрганизацияИтогДт;
			ПодвалИтоги.Параметры.ОборотыКт = ОрганизацияИтогКт;
			ПодвалИтоги.Параметры.Дебет  = ?(ОрганизацияИтогСальдо>0, ОрганизацияИтогСальдо, 0);
			ПодвалИтоги.Параметры.Кредит = ?(ОрганизацияИтогСальдо>0, 0, -ОрганизацияИтогСальдо);
			ПодвалИтоги.параметры.ПредставлениеОрганизации = "По данным "+ДанныеСверки.ПредставлениеОрганизации;
			ПодвалИтоги.параметры.РезультатыСверки = ПредставлениеРезультатовСверки(ДанныеСверки.ДатаОкончанияСверки, ДанныеСверки.ПредставлениеОрганизации,ДанныеСверки.ПредставлениеКонтрагента, ОрганизацияИтогСальдо, ДанныеСверки.ВалютаДокумента);
			Таб.Вывести(ПодвалИтоги);
			
			
			Если ДанныеСверки.СверкаСогласована  Тогда 
				ПодвалИтоги.Параметры.ОборотыДт = КонтрагентИтогДт;
				ПодвалИтоги.Параметры.ОборотыКт = КонтрагентИтогКт;
				ПодвалИтоги.Параметры.Дебет  = ?(КонтрагентИтогСальдо>0, КонтрагентИтогСальдо, 0);
				ПодвалИтоги.Параметры.Кредит = ?(КонтрагентИтогСальдо>0, 0, -КонтрагентИтогСальдо);
				ПодвалИтоги.параметры.ПредставлениеОрганизации = "По данным "+ДанныеСверки.ПредставлениеКонтрагента;
				ПодвалИтоги.параметры.РезультатыСверки = ПредставлениеРезультатовСверки(ДанныеСверки.ДатаОкончанияСверки, ДанныеСверки.ПредставлениеКонтрагента, ДанныеСверки.ПредставлениеОрганизации, КонтрагентИтогСальдо, ДанныеСверки.ВалютаДокумента);
			Иначе 
				ПодвалИтоги.Параметры.ОборотыДт = "";
				ПодвалИтоги.Параметры.ОборотыКт = "";
				ПодвалИтоги.Параметры.Дебет  = "";
				ПодвалИтоги.Параметры.Кредит = "";
				ПодвалИтоги.параметры.ПредставлениеОрганизации = "";
				ПодвалИтоги.параметры.РезультатыСверки = "";
			КонецЕсли;	 
			Таб.Присоединить(ПодвалИтоги);
			
			Если  ДанныеСверки.СверкаСогласована и   ДанныеСверки.Расхождение <> 0 Тогда 
				ПодвалРасхождение = Макет.ПолучитьОбласть("Расхождение");
				СуммаРасхождение = ?(ДанныеСверки.Расхождение>0, ДанныеСверки.Расхождение, -ДанныеСверки.Расхождение);
				ОписаниеРасхождения = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере " +
				РазвернутоеПредставлениеСуммы(СуммаРасхождение, ДанныеСверки.ВалютаДокумента);
				ПодвалРасхождение.параметры.Расхождение =ОписаниеРасхождения; 
				Таб.Вывести(ПодвалРасхождение);
			КонецЕсли;	 
			
			
			//и, наконец. подписи
			ПодвалПодписи = макет.ПолучитьОбласть("ПодвалПодпись|Секция");
			ПодвалПодписи.Параметры.ПредставлениеОрганизации = ДанныеСверки.ПредставлениеОрганизации;
			ПодвалПодписи.Параметры.Должность				 = ДанныеСверки.ПредставительОрганизации.Должность;
			ПодвалПодписи.Параметры.ФИО						 = ДанныеСверки.ПредставительОрганизации.ФИО;
			Таб.Вывести(ПодвалПодписи);
			
			ПодвалПодписи.Параметры.ПредставлениеОрганизации = ДанныеСверки.ПредставлениеКонтрагента;
			ПодвалПодписи.Параметры.Должность				 = ДанныеСверки.ПредставительКонтрагента.Должность;
			ПодвалПодписи.Параметры.ФИО						 = ДанныеСверки.ПредставительКонтрагента.ФИО;
			Таб.Присоединить(ПодвалПодписи);
			
			
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
			ИмяФайла = "Акт сверки №" + ЗаменитьНедопустимыеСимволы(ДокССылка.Номер) + " от " + Формат(ДокССылка.Дата, "ДЛФ=Д") + ".pdf";
			таб.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.PDF);
			
			
			результат = Новый Структура;
			результат.Вставить("Таблица", таб);
			результат.Вставить("СписокОшибок","");
			результат.Вставить("ИмяВременногоФайла", ИмяВременногоФайла);
			результат.Вставить("ИмяФайла", ИмяФайла);
			результат.Вставить("Дата", ДокССылка.Дата);
			результат.Вставить("Номер", ДокССылка.Номер);
			результат.Вставить("Сумма", "");
			результат.Вставить("СуммаНДС", "");
			
			Возврат результат;		
			
		КонецФункции
		
		Функция ПолучитьДанныеДляФормированияАктаСверки(ДокСсылка) Экспорт
			
			ДанныеДляАктаСверки = Новый Структура();
			
			ДанныеДляАктаСверки.вставить("ДатаНачалаСверки",ДокСсылка.ДатаНачала);
			ДанныеДляАктаСверки.Вставить("ДатаокончанияСверки", ДокСсылка.Датаокончания);
			
			СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокСсылка.Организация, ДокСсылка.Дата);
			ДанныеДляАктаСверки.Вставить("ПредставлениеОрганизации", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,"));
			
			СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокСсылка.Контрагент, ДокСсылка.Дата);
			ДанныеДляАктаСверки.Вставить("ПредставлениеКонтрагента", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,"));
			
			ДанныеДляАктаСверки.Вставить("ПредставительОрганизации",  ПолучитьПредставителяОрганизацииДляАктаСверки(ДокСсылка));
			ДанныеДляАктаСверки.Вставить("ПредставительКонтрагента",  ПолучитьПредставителяКонтрагентаДляАктаСверки(ДокСсылка));
			
			ДанныеДляАктаСверки.вставить("ВалютаДокумента", ДокСсылка.ВалютаДокумента);
			ДанныеДляАктаСверки.вставить("МассивДанныхПоДоговорам",  ПолучитьДанныеТЧАктаСверки(ДокСсылка));
			
			ДанныеДляАктаСверки.Вставить("СальдоНачальное",  ДокСсылка.ОстатокНаНачало);
			ДанныеДляАктаСверки.Вставить("СверкаСогласована", ДокСсылка.СверкаСогласована);
			ДанныеДляАктаСверки.Вставить("Расхождение", ДокСсылка.Расхождение);
			
			Возврат ДанныеДляАктаСверки;
			
		КонецФункции
		
		Функция  ПолучитьПредставителяОрганизацииДляАктаСверки(ДокСсылка) Экспорт
			ПредставительОрганизации = Новый Структура;
			ДанныеПредставителя = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ДокСсылка.Организация, ДокСсылка.ПредставительОрганизации, ДокСсылка.Дата);
			
			ПредставительОрганизации.Вставить("ФИО", сокрЛП(строка(ДанныеПредставителя.Фамилия)+" "+ДанныеПредставителя.Имя+" "+ДанныеПредставителя.Отчество));
			ПредставительОрганизации.Вставить("Должность", Строка(ДанныеПредставителя.Должность));
			
			Возврат ПредставительОрганизации;
		КонецФункции
		
		Функция  ПолучитьПредставителяКонтрагентаДляАктаСверки(ДокСсылка) Экспорт
			ПредставительКонтрагента = Новый Структура;
			ПредставительКонтрагента.Вставить("ФИО", ДокСсылка.ПредставительКонтрагента.наименование);
			ПредставительКонтрагента.Вставить("Должность", ДокСсылка.ПредставительКонтрагента.Должность);
			
			Возврат ПредставительКонтрагента;
		КонецФункции
		
		Функция ПолучитьДанныеТЧАктаСверки(ДокСсылка) Экспорт
			запрос = Новый Запрос;
			запрос.Текст = "ВЫБРАТЬ
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.НомерСтроки,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Дата,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Представление,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Дебет,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Кредит,
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Договор,
			|	Истина КАК ЭтоДанныеОрганизации
			|ИЗ
			|	Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК АктСверкиВзаиморасчетовПоДаннымОрганизации
			|ГДЕ
			|	АктСверкиВзаиморасчетовПоДаннымОрганизации.Ссылка = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.НомерСтроки,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Дата,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Представление,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Дебет,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Кредит,
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Договор,
			|	Ложь
			|ИЗ
			|	Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК АктСверкиВзаиморасчетовПоДаннымКонтрагента
			|ГДЕ
			|	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Ссылка = &Ссылка"; 
			Запрос.УстановитьПараметр("Ссылка", ДокСсылка);
			Выборка = запрос.Выполнить().Выбрать();
			МассивДанныхПоДоговорам = Новый Массив;
			
			пока выборка.Следующий() цикл 
				СтруктураДанныхПоДоговору = ПолучитьСтруктуруДанныхТекущегоДоговораАктаСверки(МассивДанныхПоДоговорам, ?(Докссылка.РазбитьПоДоговорам, Выборка.Договор, Неопределено) );
				ТаблицаДанных = ?(выборка.ЭтоДанныеОрганизации, СтруктураДанныхПоДоговору.ДанныеОрганизации,  СтруктураДанныхПоДоговору.ДанныеКонтрагента);
				стр = ТаблицаДанных.Добавить();
				Стр.Дата = выборка.Дата;
				Стр.представлениеДокумента = выборка.Представление;
				стр.Дебет = Выборка.Дебет;
				стр.Кредит =выборка.кредит;
			КонецЦикла;	 
			
			
			Возврат МассивДанныхПоДоговорам;
		КонецФункции	
		
		Функция ПолучитьСтруктуруДанныхТекущегоДоговораАктаСверки(МассивДанныхПоДоговорам, ДоговорСсылка) Экспорт
			для каждого элемент из  МассивДанныхПоДоговорам цикл 
				Если Элемент.ДоговорСсылка = ДоговорСсылка Тогда
					Возврат  Элемент
				КонецЕсли;
			КонецЦикла;
			
			СтруктураДанных = Новый Структура();
			СтруктураДанных.Вставить("ДанныеОрганизации", ИнициализироватьТЧДляСверки());
			СтруктураДанных.Вставить("ДанныеКонтрагента", ИнициализироватьТЧДляСверки());
			СтруктураДанных.Вставить("ДоговорСсылка"    , ДоговорСсылка);
			
			МассивДанныхПоДоговорам.Добавить(СтруктураДанных);
			
			Возврат СтруктураДанных;
		КонецФункции
		
		Функция ИнициализироватьТЧДляСверки() Экспорт
			ТЗ = Новый ТаблицаЗначений;
			ТЗ.Колонки.Добавить("Дата");
			ТЗ.Колонки.Добавить("ПредставлениеДокумента");
			ТЗ.Колонки.Добавить("Дебет");
			ТЗ.Колонки.Добавить("Кредит");
			
			Возврат ТЗ;
		КонецФункции		
		
		Функция ПредставлениеПредставителяДляШапки(ПредставительОрганизации, ПредставлениеОрганизации) Экспорт
			Возврат ?(ЗначениеЗаполнено(ПредставительОрганизации.Должность), ПредставительОрганизации.Должность, "представитель")+
			" "+ПредставлениеОрганизации+" "+?(ЗначениеЗаполнено(ПредставительОрганизации.ФИО), ПредставительОрганизации.ФИО, ""); 
		КонецФункции	
		
		Функция ПредставлениеРезультатовСверки(ДатаОкончанияСверки, ПредставлениеОрганизации, ПредставлениеКонтрагента, ОрганизацияИтогСальдо, валютаДокумента) Экспорт
			
			результат =  "на "+формат(ДатаОкончанияСверки, "ДФ=dd.MM.yyyy")+" задолженность ";
			Если ОрганизацияИтогСальдо>0 Тогда 
				результат = результат + "в пользу "+ПредставлениеОрганизации+" "+
				РазвернутоеПредставлениеСуммы(ОрганизацияИтогСальдо, ВалютаДокумента);
			ИначеЕсли ОрганизацияИтогСальдо<0 Тогда 
				результат = результат + "в пользу "+ПредставлениеКонтрагента+" "+
				РазвернутоеПредставлениеСуммы(-ОрганизацияИтогСальдо, ВалютаДокумента);
			Иначе 
				результат = результат +"отсутствует";
			КонецЕсли;
			
			Возврат  результат;
			
		КонецФункции
		
		Функция РазвернутоеПредставлениеСуммы(Сумма, Валюта) Экспорт
			Возврат  формат(Сумма, "ЧДЦ=2")+" "+Валюта+
			" (" + ЧислоПрописью(Сумма, ,Валюта.ПараметрыПрописиНаРусском)+")"
		КонецФункции
		
		Функция СформироватьМетуСчетаНаОплату(ДокументСсылка) Экспорт
			
			МетаСчетаНаОплату=	Новый Структура;
			МетаСчетаНаОплату.Вставить("Дата", 		ДокументСсылка.Дата);
			МетаСчетаНаОплату.Вставить("Номер", 	МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокументСсылка));
			МетаСчетаНаОплату.Вставить("Сумма", 	ДокументСсылка.СуммаДокумента);
			
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				Иначе
					КолонкаКодаТовара = "Код";
				КонецЕсли;
			Исключение
				КолонкаКодаТовара = "Код";
			КонецПопытки;
			
			ТабличнаяЧасть = ПолучитьДанныеТЧ(ДокументСсылка, , Константы.ВалютаРегламентированногоУчета.Получить(), КолонкаКодаТовара, Ложь);
			
			СуммаНДС= ТабличнаяЧасть.Итог("СуммаНДС"); 
			МетаСчетаНаОплату.Вставить("СуммаНДС", СуммаНДС);
			
			МассивСтрокиБезНДС= ТабличнаяЧасть.НайтиСтроки(Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.БезНДС));
			Если МассивСтрокиБезНДС.Количество() > 0 Тогда
				ЕстьСтавкаБезНДС= Истина;	
			Иначе 
				ЕстьСтавкаБезНДС= Ложь;
			КонецЕсли;
			
			МетаСчетаНаОплату.Вставить("ДокументБезНДС", ?(ЕстьСтавкаБезНДС И СуммаНДС = 0, Истина, Ложь));
			
			Возврат МетаСчетаНаОплату;
			
		КонецФункции
		
		Функция СформироватьМетуАктаСверки(ДокументСсылка) Экспорт
			
			МетаАктаСверки=	Новый Структура;
			МетаАктаСверки.Вставить("Дата", 	ДокументСсылка.Дата);
			МетаАктаСверки.Вставить("Номер", 	МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокументСсылка));
			
			Возврат МетаАктаСверки;
			
		КонецФункции
		
		Функция СформироватьМетуАктаВыполненныхРабот(ДокументСсылка) Экспорт
			
			МетаАктаВыполненныхРабот=	Новый Структура;
			МетаАктаВыполненныхРабот.Вставить("Дата", 	ДокументСсылка.Дата);
			МетаАктаВыполненныхРабот.Вставить("Номер", 	МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокументСсылка));
						
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				Иначе
					КолонкаКодаТовара = "Код";
				КонецЕсли;
			Исключение
				КолонкаКодаТовара = "Код";
			КонецПопытки;
			
			ТабличнаяЧасть = ПолучитьДанныеТЧ(ДокументСсылка , , Константы.ВалютаРегламентированногоУчета.Получить(),  КолонкаКодаТовара, ложь );
			ТабличнаяЧасть.Колонки.Добавить("СуммаБезНДС");
			
			ИтогСумма=			0;
			ИтогСуммаБезНДС=	0;
			ЕстьСтавкаБезНДС= Ложь;
			
			Для каждого стр Из ТабличнаяЧасть Цикл
				
				СуммаСНДС=		(Стр.Сумма + ?(ДокументСсылка.СуммаВключаетНДС, 0, Стр.СуммаНДС));
				СуммаБезНДС= 	СуммаСНДС - Стр.СуммаНДС;
				
				ИтогСумма=			ИтогСумма 		+ СуммаСНДС;
				ИтогСуммаБезНДС=	ИтогСуммаБезНДС + СуммаБезНДС;
				
				Если Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
					ЕстьСтавкаБезНДС= Истина;	
				КонецЕсли;
								
			КонецЦикла;
			
			МетаАктаВыполненныхРабот.Вставить("Сумма", 		ИтогСумма);
			МетаАктаВыполненныхРабот.Вставить("СуммаНДС", 	ИтогСумма - ИтогСуммаБезНДС);
			МетаАктаВыполненныхРабот.Вставить("ДокументБезНДС", ?(ЕстьСтавкаБезНДС И (ИтогСумма - ИтогСуммаБезНДС) = 0, Истина, Ложь));
						
			Возврат МетаАктаВыполненныхРабот;
			
		КонецФункции
		
		Функция СтруктурированноеПредставлениеОснования(ДокСсылка) Экспорт
			
			ДоговорКонтрагента = ДокСсылка.ДоговорКонтрагента;
			
			Ground = Новый Структура;
			Ground.Вставить("GroundName", "");
			Ground.Вставить("GroundNumber", "");
			Ground.Вставить("GroundDate", "");
			
			Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
				Ground.Вставить("GroundName", 	ДоговорКонтрагента.Наименование);
				Ground.Вставить("GroundNumber", ДоговорКонтрагента.Номер);
				Ground.Вставить("GroundDate", 	ДоговорКонтрагента.Дата);
			КонецЕсли;
			
			Возврат  Ground;
			
		КонецФункции
		
		Функция СтруктурированноеПредставлениеОснования_УПД(ДокументСсылка, ТипДокумента)
			
			Перем Договор;
			
			КоллекцияДокументНосительОснования= Новый Массив;
			ДобавленныеОснования=				Новый Массив;
			TransferBases= 						Новый Массив;
						
			ФункцияУПД= МетодСервера(, "ФункцияУПД", ТипДокумента);
		
			Если ФункцияУПД = "СЧФДОП" ИЛИ ФункцияУПД = "СЧФ" Тогда
				// в этом случае параметр ДокументСсылка это Счет фактура выданный
				Если МетодСервера(, "СуществуетОбъектМетаданных", "Документ.СчетФактураВыданный.ТабличнаяЧасть.ДокументыОснования") Тогда
					Для каждого СтрокаТЧ из ДокументСсылка.ДокументыОснования Цикл
						КоллекцияДокументНосительОснования.Добавить(?(ТипЗнч(СтрокаТЧ.ДокументОснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), СтрокаТЧ.ДокументОснование.ДокументОтгрузки, СтрокаТЧ.ДокументОснование));	
					КонецЦикла;			
				Иначе
					Если МетодСервера(, "ЕстьРеквизитТипаОбъекта", ТипЗнч(ДокументСсылка), "ДокументОснование") Тогда
						КоллекцияДокументНосительОснования.Добавить(?(ТипЗнч(ДокументСсылка.ДокументОснование) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), ДокументСсылка.ДокументОснование.ДокументОтгрузки, ДокументСсылка.ДокументОснование));
					КонецЕсли;					
				КонецЕсли;
				
			Иначе
				// в этом случае параметр ДокументСсылка это документ реализации
				КоллекцияДокументНосительОснования.Добавить(?(ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), ДокументСсылка.ДокументОтгрузки, ДокументСсылка));
			КонецЕсли;
			
			Для каждого ДокументМассива из КоллекцияДокументНосительОснования Цикл
				
				Договор= 		Неопределено;
				
				DocumentName= 	"";
				DocumentNumber= "";
				DocumentDate= 	'00010101';
				
				Если МетодСервера(, "ЕстьРеквизитТипаОбъекта", ТипЗнч(ДокументМассива), "ДоговорКонтрагента") Тогда 
					Договор= ДокументМассива.ДоговорКонтрагента;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Договор) Тогда
					DocumentName= 	"Договор"; 	
					DocumentNumber= Договор.Номер;
					DocumentDate= 	Договор.Дата; 
				КонецЕсли;
				
				Если ЗначениеЗаполнено(DocumentName) И ЗначениеЗаполнено(DocumentDate) Тогда
					
					Если ДобавленныеОснования.Найти(Договор) = Неопределено Тогда
						
						ДобавленныеОснования.Добавить(Договор);
						
						TransferBase= Новый Структура("DocumentName, DocumentNumber, DocumentDate, DocumentInfo", СокрЛП(DocumentName), СокрЛП(DocumentNumber), DocumentDate, ""); 
						
						TransferBases.Добавить(TransferBase);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Возврат TransferBases;
									
		КонецФункции
		
		Процедура ЗаполнитьСтруктурированноеОписаниеГрузоотправителяГрузополучателя(OrganizationInfo, ЮрФизЛицо, ДатаДокумента, КастомныйАдрес = "") Экспорт

			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаДокумента);
			если стрДлина(СведенияОбОрганизации.ИНН)<>12 тогда 
				НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
				ЭтоИП = ложь;
			Иначе 
				Если типЗнч(юрФизЛицо) = тип("СправочникСсылка.Организации") тогда 
					//для нашей организации - данные берем из нормализованного представления физлица
					НаименованиеОрганизации  = юрФизЛицо.наименованиеПолное;
				Иначе 
					НаименованиеОрганизации  = СведенияОбОрганизации.ПолноеНаименование 
				КонецЕсли;	  
				ЭтоИП = истина;
			КонецЕсли;
			
			OrganizationInfo.Name = НаименованиеОрганизации;
			OrganizationInfo.IsSoleProprietor  =  ЭтоИП;
			OrganizationInfo.SameAsSellerOrBuyer = ложь;
			OrganizationInfo.Ссылка = ЮрФизЛицо;
			
			Если ЗначениеЗаполнено(КастомныйАдрес) = Истина Тогда
				
				AddressContent = OrganizationInfo.Address;
												
				AddressContent.IsForeign	= True;
				AddressContent.CountryCode 	= "643";
				AddressContent.AddressText 	= КастомныйАдрес;
								
			Иначе

				ЗаполнитьСтруктурированноеОписаниеАдреса(OrganizationInfo.Address, СведенияОбОрганизации, ЮрФизЛицо, Ложь, ДатаДокумента);

			КонецЕсли;
			
		КонецПроцедуры
		
		Функция ПолучитьГоловноеЮрлицо(ЮрФизЛицо) Экспорт
			
			ГоловноеЮрЛицо = "";
	
			Если ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Контрагенты") Тогда
				ГоловноеЮрЛицо = ЮрФизЛицо.ГоловнойКонтрагент;	
			ИначеЕсли ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Организации") Тогда
				ГоловноеЮрЛицо = ЮрФизЛицо.ГоловнаяОрганизация;
			КонецЕсли;

			Если ЗначениеЗаполнено(ГоловноеЮрЛицо) И 
				(ЮрФизЛицо.Метаданные().Реквизиты.Найти("ОбособленноеПодразделение")<>Неопределено) и (ЮрФизЛицо.ОбособленноеПодразделение = Истина) Тогда
				Возврат ГоловноеЮрЛицо
			Иначе 
				возврат "";
			КонецЕсли;
			
		КонецФункции	

		Процедура ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(OrganizationInfo, ЮрФизЛицо, ДатаДокумента, БанковскийСчетОрганизации = Неопределено,  ЮрАдрес, АдресДляСФ = ложь, КППГрузоотправителя = "") Экспорт

			ГоловноеЮрЛицо = "";
			
			Если АдресДляСФ = Истина Тогда
				ГоловноеЮрЛицо = ПолучитьГоловноеЮрлицо(ЮрФизЛицо);
		
				Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
					СведенияОПодразделении 	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
					СведенияОбОрганизации	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ГоловноеЮрЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
					СведенияОбОрганизации.КПП = СведенияОПодразделении.КПП;
				Иначе
					СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
				КонецЕсли;	
			Иначе
				СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаДокумента,  БанковскийСчетОрганизации);
			КонецЕсли;
			
			Если СтрДлина(СведенияОбОрганизации.ИНН)<>12 Тогда 
				НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
				ЭтоИП = Ложь;
			Иначе 
				Если ТипЗнч(юрФизЛицо) = Тип("СправочникСсылка.Организации") Тогда
					НаименованиеОрганизации = юрФизЛицо.наименованиеПолное;
				Иначе 
					НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
				КонецЕсли;	  
				ЭтоИП = Истина;
			КонецЕсли;
			
			OrganizationInfo.Name = НаименованиеОрганизации;
			OrganizationInfo.Inn  = СведенияОбОрганизации.ИНН;
			Если ЗначениеЗаполнено(КППГрузоотправителя) Тогда
				OrganizationInfo.Kpp  = КППГрузоотправителя;
			Иначе
				OrganizationInfo.Kpp  = СведенияОбОрганизации.КПП;
			КонецЕсли;

			Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
				ЗаполнитьСтруктурированноеОписаниеАдреса(OrganizationInfo.Address, СведенияОбОрганизации, ГоловноеЮрЛицо, ЮрАдрес, ДатаДокумента);	
			Иначе
				ЗаполнитьСтруктурированноеОписаниеАдреса(OrganizationInfo.Address, СведенияОбОрганизации, ЮрФизЛицо, ЮрАдрес, ДатаДокумента);
			КонецЕсли;
			
			OrganizationInfo.IsSoleProprietor  =  ЭтоИП;
			
			Если АдресДляСФ=ложь тогда
				OrganizationInfo.Okpo  = СведенияОбОрганизации.КодПоОкпо;
				
				Если найти(СведенияОбОрганизации.Телефоны, "факс:")>0 тогда 
					телефон = СокрЛП(лев(СведенияОбОрганизации.Телефоны, найти(СведенияОбОрганизации.Телефоны, "факс:")-1));
					Если прав(телефон,1) = ","  тогда
						телефон = лев(телефон, стрДлина(телефон)-1);
					КонецЕсли;
					факс = СокрЛП(прав(СведенияОбОрганизации.Телефоны, СтрДлина(СведенияОбОрганизации.Телефоны) - найти(СведенияОбОрганизации.Телефоны, "факс:")- 5));
				Иначе 
					Телефон =СведенияОбОрганизации.Телефоны;
					Факс = "";
				КонецЕсли;	
				OrganizationInfo.Phone = СократитьПредставлениеТелефона(Телефон);
				OrganizationInfo.BankAccountNumber = ?(ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчета),  СведенияОбОрганизации.НомерСчета, "") ;
				
				Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) = Истина Тогда
					Если ТипЗнч(СведенияОбОрганизации.Банк) = Тип("Строка") Тогда 	//начиная с БП 3.0.43.29 фун. БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице 
						НаименованиеБанка = СведенияОбОрганизации.Банк;	            //под ключом Банк возвращает строку с наименованием, а не ссылку на банк как раньше
					Иначе
						НаименованиеБанка = СведенияОбОрганизации.Банк.Наименование;	
					КонецЕсли;
				Иначе
					НаименованиеБанка = "";
				КонецЕсли;
				OrganizationInfo.BankName = НаименованиеБанка;
				
				OrganizationInfo.BankId =  ?(ЗначениеЗаполнено(СведенияОбОрганизации.БИК),  СокрЛП(СведенияОбОрганизации.БИК), "");
			конецЕсли;

			Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
				OrganizationInfo.вставить("Ссылка",ГоловноеЮрЛицо);
			Иначе
				OrganizationInfo.вставить("Ссылка",ЮрФизЛицо);
			КонецЕсли;

		КонецПроцедуры
		
		Процедура Заполнить_ExtendedOrganizationInfo(ExtendedOrganizationInfo, ЮрФизЛицо, ДатаДокумента, ЭтоПродавецИлиПокупатель, БанковскийСчет= Неопределено, КППГрузоотправителя = "") Экспорт
			
			ГоловноеЮрЛицо = ПолучитьГоловноеЮрлицо(ЮрФизЛицо);
			
			Если ЗначениеЗаполнено(ГоловноеЮрЛицо) Тогда
				
				ИспользуемоеЮрФизЛицо   = ГоловноеЮрЛицо;
				СведенияОПодразделении 	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаДокумента,  БанковскийСчет);
				СведенияОбОрганизации	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ИспользуемоеЮрФизЛицо, ДатаДокумента,  БанковскийСчет);
				
				Если МетодСервера(,"ЕстьРеквизитИлиСвойствоОбъекта", ЮрФизЛицо, "СтранаРегистрации") Тогда
					СведенияОПодразделении.Вставить("СтранаРегистрации", ЮрФизЛицо.СтранаРегистрации);
					СтранаРегистрацииКод = ЮрФизЛицо.СтранаРегистрации.Код;
				КонецЕсли;
				Если МетодСервера(,"ЕстьРеквизитИлиСвойствоОбъекта", ГоловноеЮрЛицо, "СтранаРегистрации") Тогда
					СведенияОбОрганизации.Вставить("СтранаРегистрации", ГоловноеЮрЛицо.СтранаРегистрации);
					СтранаРегистрацииКод = ГоловноеЮрЛицо.СтранаРегистрации.Код;
				КонецЕсли;
				
				СведенияОбОрганизации.КПП = СведенияОПодразделении.КПП;

			Иначе
				
				ИспользуемоеЮрФизЛицо = ЮрФизЛицо;
				СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ИспользуемоеЮрФизЛицо, ДатаДокумента,  БанковскийСчет);
				Если МетодСервера(,"ЕстьРеквизитИлиСвойствоОбъекта", ЮрФизЛицо, "СтранаРегистрации") Тогда
					СведенияОбОрганизации.Вставить("СтранаРегистрации", ЮрФизЛицо.СтранаРегистрации);
					СтранаРегистрацииКод = ЮрФизЛицо.СтранаРегистрации.Код;
				КонецЕсли;

			КонецЕсли;	
			
			ЭтоОрганизация = ТипЗнч(ИспользуемоеЮрФизЛицо) = Тип("СправочникСсылка.Организации");
			ЭтоИП = СтрДлина(СведенияОбОрганизации.ИНН) = 12;
			
			Если ЭтоИП И ЭтоОрганизация Тогда
				// Для нашей организации, полное наименование берем из нормализованного представления физлица
				Если Не ПустаяСтрока(ИспользуемоеЮрФизЛицо.ИндивидуальныйПредприниматель.Наименование) Тогда
					СведенияОбОрганизации.ПолноеНаименование = ИспользуемоеЮрФизЛицо.ИндивидуальныйПредприниматель.Наименование;
				КонецЕсли;
			ИначеЕсли Не ЭтоОрганизация И НЕ ЭтоПродавецИлиПокупатель Тогда
				// для грузополучателя будем указывать именно его полное наименование.
				СведенияОбОрганизации.ПолноеНаименование = ЮрФизЛицо.НаименованиеПолное;
			КонецЕсли;
			
			ExtendedOrganizationInfo.Name= 					СведенияОбОрганизации.ПолноеНаименование;
			ExtendedOrganizationInfo.Inn=  					СведенияОбОрганизации.ИНН;
			Если ЗначениеЗаполнено(КППГрузоотправителя) Тогда
				ExtendedOrganizationInfo.Kpp= 				КППГрузоотправителя;
			Иначе
				ExtendedOrganizationInfo.Kpp= 				СведенияОбОрганизации.КПП;
			КонецЕсли;
			ExtendedOrganizationInfo.Okpo= 					СведенияОбОрганизации.КодПоОкпо;
			ExtendedOrganizationInfo.CorrespondentAccount=  СведенияОбОрганизации.КоррСчет;
			
			ExtendedOrganizationInfo.BankAccountNumber= МетодСервера(, "Значение1C_В_СтрокаCOM", СведенияОбОрганизации.НомерСчета);
			ExtendedOrganizationInfo.BankId=  			МетодСервера(, "Значение1C_В_СтрокаCOM", СведенияОбОрганизации.БИК);
			ExtendedOrganizationInfo.BankName=   		?(ЗначениеЗаполнено(СведенияОбОрганизации.Банк), Строка(СведенияОбОрганизации.Банк), ""); // в некоторых случаях Банк возвращается как ссылка на справочник и компонента игнорирует такое значение, теряя данные, поэтому значение Банк преобразовано к строке 
			
			Если найти(СведенияОбОрганизации.Телефоны, "факс:")>0 тогда 
				телефон = СокрЛП(лев(СведенияОбОрганизации.Телефоны, найти(СведенияОбОрганизации.Телефоны, "факс:")-1));
				Если прав(телефон,1) = ","  тогда
					телефон = лев(телефон, стрДлина(телефон)-1);
				КонецЕсли;
			Иначе 
				Телефон = СведенияОбОрганизации.Телефоны;
			КонецЕсли;	
			
			ExtendedOrganizationInfo.Phone = СократитьПредставлениеТелефона(Телефон);
			
			Если ЭтоОрганизация Тогда
				ExtendedOrganizationInfo.Okdp = ИспользуемоеЮрФизЛицо.КодОКВЭД;
			КонецЕсли;
			
			Если ЭтоИП Тогда
				ExtendedOrganizationInfo.Type= "IndividualEntity";
			Иначе
				Если Не ПустаяСтрока(СтранаРегистрацииКод) И СтранаРегистрацииКод <> "643" Тогда
					ТипОрганизации = "ForeignEntity";  
			    Иначе
					ТипОрганизации = "LegalEntity";  
				КонецЕсли;
				ExtendedOrganizationInfo.Type= ТипОрганизации;
			КонецЕсли;
			
			ExtendedOrganizationInfo.Email = ЮрФизЛицо_АдресЭлектроннойПочты(ИспользуемоеЮрФизЛицо, ДатаДокумента, ЭтоОрганизация);
			
			Если Не ЭтоОрганизация И НЕ ЭтоПродавецИлиПокупатель Тогда
				ЗаполнитьСтруктурированноеОписаниеАдреса(ExtendedOrganizationInfo.Address, СведенияОбОрганизации, ЮрФизЛицо, ЭтоПродавецИлиПокупатель, ДатаДокумента);
			Иначе
				ЗаполнитьСтруктурированноеОписаниеАдреса(ExtendedOrganizationInfo.Address, СведенияОбОрганизации, ИспользуемоеЮрФизЛицо, ЭтоПродавецИлиПокупатель, ДатаДокумента);
			КонецЕсли;
				
			ExtendedOrganizationInfo.Вставить("Ссылка", ИспользуемоеЮрФизЛицо);
			
		КонецПроцедуры
		
		Функция ЮрФизЛицо_АдресЭлектроннойПочты(ЮрФизЛицо, ДатаДокумента, ЭтоОрганизация)
			
			ЗапросЕмэйл = Новый Запрос;
			ЗапросЕмэйл.Текст = ПолучитьТекстЗапросаКонтактнаяИнформация(ЮрФизЛицо);
			ЗапросЕмэйл.УстановитьПараметр("ССылка", ЮрФизЛицо);
			ЗапросЕмэйл.УстановитьПараметр("ДействуетС", ДатаДокумента);
			ЗапросЕмэйл.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			Если ЭтоОрганизация Тогда
				ЗапросЕмэйл.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
			Иначе 
				ЗапросЕмэйл.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты);
			КонецЕсли;
			ВыборкаЕмэйл = ЗапросЕмэйл.Выполнить().Выбрать();
			Если ВыборкаЕмэйл.Следующий() Тогда
				Возврат ВыборкаЕмэйл.Представление;
			КонецЕсли;
				
		КонецФункции
		
		Функция сформироватьДанныеДляПечати(СсылкаНаОбъект, ЭтоКСФ) Экспорт
			
			ВалютаРегламентированногоУчета  = Константы.ВалютаРегламентированногоУчета.Получить();

			ЭтоСФ = ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СчетФактураВыданный");
			ЭтоСФНаАванс = СчетФактуранаАванс(СсылкаНаОбъект);

			//сформируем список документов-оснований
			СпДокументовОснований = новый СписокЗначений;
			
			Если ЭтоСФ Тогда
				Для каждого Строка из СсылкаНаОбъект.ДокументыОснования цикл 
					если ЗначениеЗаполнено(Строка.ДокументОснование) и (СпДокументовОснований.НайтиПоЗначению(Строка.ДокументОснование) = неопределено)  тогда 
						СпДокументовОснований.Добавить(?(типЗнч(Строка.ДокументОснование)=Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), Строка.ДокументОснование.ДокументОтгрузки, Строка.ДокументОснование));
					КонецЕсли;	
				КонецЦикла;	
			Иначе
				СпДокументовОснований.Добавить(?(типЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), СсылкаНаОбъект.ДокументОтгрузки, СсылкаНаОбъект));
			КонецЕсли;

			Если СпДокументовОснований.Количество()>0 Тогда
				НаОснованииОтчетаКомитенту = ?(ТипЗнч(СпДокументовОснований[0].Значение ) = Тип("Документссылка.ОтчетКомитентуОПродажах"),Истина, Ложь);
			КонецЕсли;
			
			//формируем шапку
			ДанныеДляПечати = новый Структура;
			ДанныеДляпечати.Вставить("Дата"				, СсылкаНаОбъект.Дата);
			ДанныеДляПечати.Вставить("Номер"			, ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ССылкаНаОбъект.Номер, Истина, Ложь));
			
			ДанныеДляПечати.Вставить("Поставщик"		, "");
			ДанныеДляПечати.Вставить("Грузоотправитель" , "");
			ДанныеДляПечати.Вставить("Покупатель" 	    , "");
			ДанныеДляПечати.Вставить("Грузополучатель"  , "");
			ДанныеДляПечати.Вставить("Валюта"			, "");
			ДанныеДляПечати.Вставить("КодВалюты"		, "");
			ДанныеДляПечати.Вставить("ЦифровойИндексОбособленногоПодразделения", "");
			ДанныеДляПечати.Вставить("СведенияОТранспортировкеИГрузе");
									
			РасчетыВУЕ = ложь; 
			
			ПоставщикСписком= Ложь;
			Разделитель= "";

			ТаблицаШапки= ПолучитьДанныеШапки(СпДокументовОснований, ?(ЭтоСФ ИЛИ ЭтоСФНаАванс, ССылкаНаОбъект, Неопределено));

			Для Каждого СтрокаШапка Из ТаблицаШапки Цикл
				
				ЗаполнитьЗначенияСвойств(ДанныеДляПечати, СтрокаШапка);
				
				ДанныеДляПечати.Поставщик= 		  СтрокаШапка.Организация;
				ДанныеДляПечати.Покупатель=		  СтрокаШапка.Контрагент;
				ДанныеДляПечати.Валюта=			  СтрокаШапка.ВалютаДокумента;
				ДанныеДляПечати.КодВалюты=		  ?(ЗначениеЗаполнено(СтрокаШапка.ВалютаДокумента), СтрокаШапка.ВалютаДокумента.Код, "");
				Если СсылкаНаОбъект.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах И
					(СтрокаШапка.ВалютаДокумента <> ВалютаРегламентированногоУчета) Тогда
					РасчетыВУЕ = Истина;
				КонецЕсли;	 
				
			КонецЦикла;

			Если РасчетыВУЕ ИЛИ ЭтоСФНаАванс Тогда 

				//счета-фактуры в уе и на аванс - выставляются только в рублях
				ДанныеДляПечати.Валюта = ВалютаРегламентированногоУчета;
				
			КонецЕсли;	  
			
			Попытка
				Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
					КолонкаКодаТовара = "Артикул";
				Иначе
					КолонкаКодаТовара = "Код";
				КонецЕсли;
			Исключение
				КолонкаКодаТовара = "Код";
			КонецПопытки;

			//формируем ТЧ
			ДанныеТабличнойЧасти=	ПолучитьДанныеТЧ(СпДокументовОснований, ЭтоКСФ,  ВалютаРегламентированногоУчета, КолонкаКодаТовара, Истина, ?(ЭтоСФ, СсылкаНаОбъект, Неопределено));

			//если в тч только услуги - убъем грузоотправителя и грузополучателя
			Если ДанныеТабличнойЧасти.НайтиСтроки(Новый Структура("ЭтоУслуга", ложь)).Количество()=0 Тогда
				ДанныеДляПечати.Грузоотправитель = "";
				ДанныеДляПечати.Грузополучатель = "";
			КонецЕсли;	
			
			ДанныеДляПечати.Вставить("ТабличнаяЧасть", ТаблицаЗначений_2_МассивСтруктур(ДанныеТабличнойЧасти));
			
			//формируем список ПРС
			Запрос = новый запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПРС.ДатаДокумента КАК ДатаПлатежноРасчетногоДокумента,
			|	ПРС.НомерДокумента КАК НомерПлатежноРасчетногоДокумента
			|ИЗ
			|	Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК ПРС
			|ГДЕ
			|	ПРС.Ссылка = &Ссылка
			|	И ПРС.НомерДокумента <> """"
			|	И ПРС.ДатаДокумента <> ДАТАВРЕМЯ(1, 1, 1)";
			Запрос.УстановитьПараметр("Ссылка", ссылкаНаОбъект);
			
			ТаблицаДатаНомерДокументовОплаты=	Запрос.Выполнить().Выгрузить();
			
			Если НЕ Найти(ПараметрыКлиентСервер.СинонимКонфигурации, "КОРП") = 0 Тогда
				
				ДокОснование=  СсылкаНаОбъект.ДокументыОснования[0].ДокументОснование;
				
				Если НЕ ДокОснование.Метаданные().Реквизиты.Найти("ПодразделениеОрганизации") = Неопределено Тогда
					ЦифровойИндексОбособленногоПодразделения= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокОснование, "ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
					ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения= ЦифровойИндексОбособленногоПодразделения;	
				КонецЕсли;
								
			КонецЕсли;
						
			ДанныеДляПечати.Вставить("ДатаНомерДокументовОплаты", ТаблицаЗначений_2_МассивСтруктур(ТаблицаДатаНомерДокументовОплаты));
			
			Если ЭтоКСФ тогда 
				//вставим данные КСФ
				ДанныеКСФ = новый структура;
				ДанныеКСФ.Вставить("НомерСчФ",  ССылкаНаОбъект.ДокументыОснования[0].НомерИсходногоДокумента);
				ДанныеКСФ.Вставить("ДатаСчФ",  ССылкаНаОбъект.ДокументыОснования[0].ДатаИсходногоДокумента);
				ДанныеКСФ.Вставить("УчитыватьИсправлениеИсходногоДокумента",  ССылкаНаОбъект.ДокументыОснования[0].УчитыватьИсправлениеИсходногоДокумента);
				ДанныеКСФ.Вставить("НомИспрСчФ",  ССылкаНаОбъект.ДокументыОснования[0].НомерИсправленияИсходногоДокумента);
				ДанныеКСФ.Вставить("ДатаИспрСчФ",  ССылкаНаОбъект.ДокументыОснования[0].ДатаИсправленияИсходногоДокумента);
				Если СсылкаНаОбъект.Исправление = ложь тогда 
					//это КСФ
					ДанныеКСФ.Вставить("НомерКСчФ",  ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СсылкаНаОбъект.Номер, Истина, Ложь));
					ДанныеКСФ.Вставить("ДатаКСчФ",  ССылкаНаОбъект.Дата);
					ДанныеКСФ.Вставить("ЭтоИКСФ", ложь);
				Иначе 
					ДанныеКСФ.Вставить("НомерКСчФ", формат(ССылкаНаОбъект.НомерИсправляемогоКорректировочногоДокумента, "ЧГ=0"));
					ДанныеКСФ.Вставить("ДатаКСчФ",  ССылкаНаОбъект.ДатаИсправляемогоКорректировочногоДокумента);
					ДанныеКСФ.Вставить("ЭтоИКСФ", истина);
					ДанныеКСФ.Вставить("НомИспрКСчФ",  ССылкаНаОбъект.НомерИсправления);
					ДанныеКСФ.Вставить("ДатаИспрКСчФ",  ССылкаНаОбъект.Дата);
				КонецЕсли;	
				
				ДанныеДляПечати.вставить("ДанныеКСФ", ДанныеКСФ);
			Иначе 
				//вставим данные по СФ
				Если ЭтоСФ Тогда
					ДанныеСФ = новый структура;
					Если СсылкаНаОбъект.исправление тогда 
						ДанныеСФ.Вставить("НомерСчФ", СсылкаНаОбъект.НомерИсходногоДокумента);
						ДанныеСФ.Вставить("ДатаСчФ" , СсылкаНаОбъект.ДатаИсходногоДокумента);
						
						ИспрСчФ = новый структура;
						ИспрСчФ.Вставить("НомИспрСчФ", формат(СсылкаНаОбъект.НомерИсправления,"ЧГ=0"));
						ИспрСчФ.Вставить("ДатаИспрСчФ", СсылкаНаОбъект.Дата);
						ДанныеСФ.Вставить("ИспрСчФ",ИспрСчФ); 
					Иначе 	
						ДанныеСФ.Вставить("НомерСчФ", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СсылкаНаОбъект.Номер, Истина, Ложь));
						ДанныеСФ.Вставить("ДатаСчФ" , ДанныеДляПечати.Дата);
					КонецЕсли;	
					ДанныеДляПечати.вставить("ДанныеСФ", ДанныеСФ);
				КонецЕсли;
			КонецЕсли;
			
			Возврат  ДанныеДляПечати;
			
		конецфункции 	
						
	//} ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
	////////////////////////////////////////////////////////////////////////////////
	
	////////////////////////////////////////////////////////////////////////////////
	//{ Get content
		
		////////////////////////////////////////////////////////////////////////////////
		//{ Get XmlAcceptanceCertificate content
		
			Функция ПолучитьXmlAcceptanceCertificateContent(ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт

				XmlAcceptanceCertificateContent=	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_AcceptanceCertificateSellerContent");

				ЗаполнитьКонтентXmlAcceptanceCertificate(XmlAcceptanceCertificateContent, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта);
				
				Возврат XmlAcceptanceCertificateContent;
				
			КонецФункции
			
			
			Функция ЗаполнитьКонтентXmlAcceptanceCertificate(Content, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт
				
				ДанныеШапки =  ПолучитьДанныеШапки(ДокССылка);
				
				Если ДанныеШапки.количество()=0 тогда 
					вызватьисключение("не найден документ")
				иначе 
					ДанныеШапки = ДанныеШапки[0];
				КонецЕсли;	
				
				//поставщик: организация-продавец
				БанковскийСчетОрганизации = ПолучитьБанковскийСчет(ДокССылка);
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Seller, ДокСсылка.Организация,  ДокССылка.Дата,  БанковскийСчетОрганизации, Истина);
				
				ПредставлениеИсполнителя = сформироватьПредставлениеКонтрагентаДляАкта(ДокССылка.Организация, ДокССылка.Дата);
				ПредставлениеЗакзачика   = сформироватьПредставлениеКонтрагентаДляАкта(ДокССылка.Контрагент, ДокССылка.Дата);
				
				СтруктураДоговора 		=  структурированноеПредставлениеОснования(ДокССылка);
				
				НомерДоговора = ?(СтруктураДоговора.GroundNumber="",""," по договору № "+СтруктураДоговора.GroundNumber);
				ДатаДоговора = ?(СтруктураДоговора.GroundDate=Дата(1,1,1),""," от "+Формат(СтруктураДоговора.GroundDate,"ДФ=dd.MM.yyyy"));
				ДатаДоговора = ?((СтруктураДоговора.GroundNumber="" и СтруктураДоговора.GroundDate<>Дата(1,1,1))," по договору "+ДатаДоговора,ДатаДоговора); 
				
				текстАкта = "Мы, нижеподписавшиеся, представитель "+ПредставлениеИсполнителя+" (далее «Исполнитель»), с одной стороны, и представитель "+ПредставлениеЗакзачика+" (далее «Заказчик»), с другой стороны,"+
				" составили настоящий акт о том, что «Исполнитель» выполнил, а  «Заказчик» принял следующие работы (услуги)"+НомерДоговора+ДатаДоговора+":";
				
				content.Number = МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
				content.Date   = ДокСсылка.Дата;
				content.Title  = текстАкта;
				
				ИдКонтрагента = ОбработкаОбъект.Контрагент_2_CounteragentBoxID(ДокССылка.Контрагент);
				Если ОбработкаОбъект.НужноФормироватьДопИнфоПоШаблону(ИдКонтрагента) = Истина Тогда
					content.AdditionalInfo = ОбработкаОбъект.СформироватьСтрокуДопИнфоПоШаблону(ДопСведения);
				Иначе
					content.AdditionalInfo = ДопСведения;
				КонецЕсли;
				
				content.SignatureDate=	content.Date;

				СтруктураItems= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_AcceptanceCertificateItem");
				
				Попытка
					Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
						КолонкаКодаТовара = "Артикул";
					Иначе
						КолонкаКодаТовара = "Код";
					КонецЕсли;
				Исключение
					КолонкаКодаТовара = "Код";
				КонецПопытки;
				
				ТаблицаТоваров =  ПолучитьДанныеТЧ(ДокССылка, , Константы.ВалютаРегламентированногоУчета.Получить(), КолонкаКодаТовара, Ложь);
							
				ВалютаРеглУчета 		= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
				ВалютаВзаиморасчетов	= ДокСсылка.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				РасчетыВУЕ 				= ДокСсылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах;
				НуженПересчетВРубли 	= РасчетыВУЕ И НЕ (ДокСсылка.ВалютаДокумента = ВалютаРеглУчета);
								
				Если НЕ ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
					Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
						
						КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокСсылка.ВалютаДокумента, ДокСсылка.Дата);
												
						Курс      = КурсИКратность.Курс;
						Кратность = КурсИКратность.Кратность;

						Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
														
							Если СтрокаТаблицы.СуществуютЗаписиРублевыхСумм Тогда
								СтрокаТаблицы.СуммаНДС = СтрокаТаблицы.НДСВРублях;
								СуммаБезНДС	= СтрокаТаблицы.ВсегоВРублях - СтрокаТаблицы.НДСВРублях;
							Иначе
								Кратность = ?(Кратность = 0, 1, Кратность);
								СтрокаТаблицы.СуммаНДС 	= СтрокаТаблицы.СуммаНДС * Курс / Кратность;
								СуммаБезНДС  = (СуммаБезНДС + СтрокаТаблицы.СуммаНДС) * Курс / Кратность - СтрокаТаблицы.СуммаНДС;
							КонецЕсли;
															
							СтрокаТаблицы.Сумма = СуммаБезНДС + СтрокаТаблицы.СуммаНДС;
							
							Если НуженПересчетВРубли ИЛИ (СтрокаТаблицы.СуммаВключаетНДС И СтрокаТаблицы.СуммаНДС <> 0) Тогда
								
								СтрокаТаблицы.Цена = ?(СтрокаТаблицы.Количество = 0,
									СуммаБезНДС,
									СуммаБезНДС / СтрокаТаблицы.Количество);
									
							КонецЕсли;
								
						КонецЦикла;
						
					КонецЕсли;						
				КонецЕсли;
								
				Для каждого СтрокаТаблицы из ТаблицаТоваров Цикл 
					
					Item= СкопироватьСтруктуру(СтруктураItems);
					Если ЗначениеЗаполнено(СтрокаТаблицы.Количество) = Ложь ИЛИ ЗначениеЗаполнено(СтрокаТаблицы.КодЕдиницыИзмерения) = Ложь Тогда 
						Item.Description= СтрокаТаблицы.Номенклатура;	  
					Иначе 
						Item.Name= СтрокаТаблицы.Номенклатура;
					КонецЕсли;	 
					
					Если ЗначениеЗаполнено(СтрокаТаблицы.ЕдиницаИзмерения) Тогда
						Item.UnitCode= МетодСервера(, "Item_UnitCode", СтрокаТаблицы.ЕдиницаИзмерения, СокрЛП(СтрокаТаблицы.КодЕдиницыИзмерения));
						Если Item.UnitCode = "" И ЗначениеЗаполнено(Item.Name) Тогда
							Item.Description= 	Item.Name;
							Item.Name= 			Неопределено;
						КонецЕсли;
					Иначе
						Item.UnitCode= "";
					КонецЕсли;
										
					Item.UnitName=	Строка(СтрокаТаблицы.ЕдиницаИзмерения);
					Если ЗначениеЗаполнено(Item.Name) Тогда
						Item.Quantity= СтрокаТаблицы.Количество;
					КонецЕсли;
					
					Item.Vat=			СтрокаТаблицы.СуммаНДС;
					Item.Total=			СтрокаТаблицы.Сумма + ?(СтрокаТаблицы.СуммаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
					Item.TotalWithVatExcluded= Item.Total - Item.Vat;
					Item.Price=			?(НЕ ЗначениеЗаполнено(item.Quantity), Неопределено, Окр(item.TotalWithVatExcluded/item.Quantity,2));
					Item.СсылкаНаЕИ=	СтрокаТаблицы.ЕдиницаИзмерения;
					
					Если НуженПересчетВРубли И ДокССылка.Проведен Тогда
						Если СтрокаТаблицы.СуществуютЗаписиРублевыхСумм Тогда
							Item.Vat= СтрокаТаблицы.НДСВРублях;
							Item.TotalWithVatExcluded= СтрокаТаблицы.ВсегоВРублях - СтрокаТаблицы.НДСВРублях;
						Иначе
							Кратность= ?(Кратность = 0, 1, Кратность);
													
							Item.Vat= СтрокаТаблицы.СуммаНДС * Курс / Кратность;
							Item.TotalWithVatExcluded= (СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.СуммаНДС) * Курс / Кратность - СтрокаТаблицы.СуммаНДС;
						КонецЕсли;
						
						Item.Total= Item.TotalWithVatExcluded + Item.Vat;
												
					КонецЕсли;
					
					Если (НуженПересчетВРубли ИЛИ (СтрокаТаблицы.СуммаВключаетНДС И СтрокаТаблицы.СуммаНДС <> 0)) И ДокСсылка.Проведен И Item.Quantity <> Неопределено Тогда
						
						Item.Price= ?(Item.Quantity = 0, Item.TotalWithVatExcluded, Окр(Item.TotalWithVatExcluded/Item.Quantity, 2));
												
					КонецЕсли;
					
					Item.Vat= ?(СтрокаТаблицы.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"), Неопределено, Item.Vat);

					Content.items.Добавить(Item);
					
				КонецЦикла;
				
				ПараметрыПодписания = ОбработкаОбъект.ПолучитьПараметрыПодписанияТ12вДиадок(ДокСсылка.Организация);
				
				Если НЕ ПараметрыОтправкиНаСогласование = Неопределено Тогда
					Если ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПодписанта) Тогда
						ПараметрыПодписания.ФИОПодписанта 		= ПараметрыОтправкиНаСогласование.ФИОПодписанта;
						ПараметрыПодписания.ДолжностьПодписанта = ПараметрыОтправкиНаСогласование.ДолжностьПодписанта;
					Иначе
						ФИОПолучателя =	ПараметрыОтправкиНаСогласование.ФИОПолучателя;
						ПараметрыПодписания.ФИОПодписанта 		= ПараметрыОтправкиНаСогласование.ФИОПолучателя;
						ПараметрыПодписания.ДолжностьПодписанта = ПараметрыОтправкиНаСогласование.ДолжностьПолучателя;
					КонецЕсли;
				КонецЕсли;
								
				ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(content.Official,  ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(параметрыПодписания));
				
			КонецФункции
			
		//} Get XmlAcceptanceCertificate content
		////////////////////////////////////////////////////////////////////////////////
		
		////////////////////////////////////////////////////////////////////////////////
		//{ Get InvoiceCorrection content
			
			Функция ПолучитьInvoiceCorrectionContent(ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт

				InvoiceCorrectionContent= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceCorrectionContent");

				ЗаполнитьКонтентInvoiceCorrection(InvoiceCorrectionContent, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта);
				
				Возврат InvoiceCorrectionContent;
				
			КонецФункции
			
			Функция ЗаполнитьКонтентInvoiceCorrection(Content, ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт
				
				ДанныеДляПечати 	= СформироватьДанныеДляПечати(ДокСсылка, Истина);
				Точность 			= ОбработкаОбъект.ТочностьЦеныСФ();

				OriginalInvoices 	= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_OriginalInvoice");

				Number= Строка(ДанныеДляПечати.ДанныеКСФ.НомерСчФ);
				Если ЗначениеЗаполнено(ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
					OriginalInvoices.Number= Number + "/" + ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения;
				Иначе
					OriginalInvoices.Number= Number;
				КонецЕсли;
							
				OriginalInvoices.Date 	= ДанныеДляПечати.ДанныеКСФ.ДатаСчФ;
				Если ДанныеДляПечати.ДанныеКСФ.УчитыватьИсправлениеИсходногоДокумента тогда 
					OriginalInvoices.InvoiceRevisionNumber = Строка(ДанныеДляПечати.ДанныеКСФ.НомИспрСчФ);
					OriginalInvoices.InvoiceRevisionDate = ДанныеДляПечати.ДанныеКСФ.ДатаИспрСчФ;
				КонецЕсли;	
				Content.OriginalInvoices.Добавить(OriginalInvoices);
				
				Если ДанныеДляПечати.ДанныеКСФ.ЭтоИКСФ Тогда
					
					InvoiceCorrectionNumber= Строка(ДанныеДляПечати.ДанныеКСФ.НомерКСчФ);
					Если ЗначениеЗаполнено(ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.InvoiceCorrectionNumber= InvoiceCorrectionNumber + "/" + ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.InvoiceCorrectionNumber= InvoiceCorrectionNumber;
					КонецЕсли;
										
					Content.InvoiceCorrectionDate=				ДанныеДляПечати.ДанныеКСФ.ДатаКСчФ;
					Content.InvoiceCorrectionRevisionNumber= 	Строка(ДанныеДляПечати.ДанныеКСФ.НомИспрКСчФ);
					Content.InvoiceCorrectionRevisionDate= 		ДанныеДляПечати.ДанныеКСФ.ДатаИспрКСчФ;
				Иначе 
					
					InvoiceCorrectionNumber= МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
					Если ЗначениеЗаполнено(ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.InvoiceCorrectionNumber= InvoiceCorrectionNumber + "/" + ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.InvoiceCorrectionNumber= InvoiceCorrectionNumber;
					КонецЕсли;
					
					Content.InvoiceCorrectionDate= ДокСсылка.Дата;
				КонецЕсли;
				
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Buyer, ДанныеДляПечати.Покупатель,  ДокСсылка.Дата, , истина, истина);
				
				Если НЕ ДокСсылка.Метаданные().Реквизиты.Найти("КППКонтрагента") = Неопределено Тогда
					КПППокупателя=	ДокСсылка.КППКонтрагента;
					Если ЗначениеЗаполнено(КПППокупателя) Тогда
						Content.Buyer.kpp =  КПППокупателя
					КонецЕсли
				КонецЕсли;	
				
				КППГрузоотправителя=	"";
				Если ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель) И НЕ ТипЗнч(ДанныеДляПечати.Грузоотправитель) = Тип("Строка") Тогда
					ПодставлятьКППГрузоотправителя=	ОбработкаОбъект.ПолучитьЗначениеСвойства(ДокСсылка.Организация, ОбработкаОбъект.ИдентификаторСвойстваПодставлятьКППГрузоотправителя());
					Если (НЕ ПодставлятьКППГрузоотправителя = Неопределено И ПодставлятьКППГрузоотправителя) Тогда
						КППГрузоотправителя=	?(ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель.КПП), ДанныеДляПечати.Грузоотправитель.КПП, "");
					КонецЕсли;
				КонецЕсли;
				
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Seller,  ДанныеДляПечати.Поставщик, ДокСсылка.Дата, ,истина, истина, КППГрузоотправителя);
				
				content.currency = ?(ПустаяСтрока(ДанныеДляПечати.Валюта), "", Строка(ДанныеДляПечати.Валюта.Код));
				content.ВалютаСсылка =   ДанныеДляПечати.Валюта;
				
				ОбработкаОбъект.ЗаполнитьStructedAdditionalInfos(Content.StructedAdditionalInfos, ДопСведения);

				СтруктураItemInvoiceCorrection= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceCorrectionItem");

				РасчетыВУЕ 		= ДокСсылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах;
				ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
								
				НуженПересчетВРубли = (РасчетыВУЕ И ДокСсылка.ВалютаДокумента <> ВалютаРеглУчета)
										ИЛИ СчетФактуранаАванс(ДокСсылка);
								
							
				Если НуженПересчетВРубли = Истина Тогда
					Если НЕ ДокСсылка.ВалютаДокумента = ВалютаРеглУчета Тогда // Документ оформлен в валюте расчетов 
						
						Если ДокСсылка.Проведен Тогда
							КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокСсылка.ВалютаДокумента, ДокСсылка.Дата);
													
							Курс      = КурсИКратность.Курс;
							Кратность = КурсИКратность.Кратность;
													
							Для каждого СтрМассива из ДанныеДляПечати.ТабличнаяЧасть Цикл
					        								
								Если СтрМассива.СуществуютЗаписиРублевыхСумм Тогда
									
									СтрМассива.СуммаНДС	= СтрМассива.НДСВРублях;
									СуммаБезНДС 		= СтрМассива.ВсегоВРублях - СтрМассива.НДСВРублях;
									
									СтрМассива.СуммаНДСДоИзменения = СтрМассива.НДСВРубляхДоИзменения;
									СуммаБезНДСДоИзменения = СтрМассива.ВсегоВРубляхДоИзменения - СтрМассива.НДСВРубляхДоИзменения;
								Иначе
									Кратность = ?(Кратность = 0, 1, Кратность);
									
									СтрМассива.СуммаНДС = СтрМассива.СуммаНДС * Курс / Кратность;
									СуммаБезНДС 		= (СуммаБезНДС + СтрМассива.СуммаНДС) * Курс / Кратность - СтрМассива.СуммаНДС;
									
									СтрМассива.СуммаНДСДоИзменения = СтрМассива.СуммаНДСДоИзменения * Курс / Кратность;
									СуммаБезНДСДоИзменения = (СуммаБезНДСДоИзменения + СтрМассива.СуммаНДСДоИзменеия) * Курс / Кратность - СтрМассива.СуммаНДСДоИзменения;
								КонецЕсли;
															
								СтрМассива.Сумма = СуммаБезНДС + СтрМассива.СуммаНДС;
								СтрМассива.СуммаДоИзменения = СуммаБезНДСДоИзменения + СтрМассива.СуммаНДСДоИзменения;
								
								Если НуженПересчетВРубли 
									ИЛИ (СтрМассива.СуммаВключаетНДС И СтрМассива.СуммаНДС <> 0) 
									ИЛИ (СтрМассива.СуммаВключаетНДСДоИзменения И СтрМассива.СуммаНДСДоИзменения <> 0) Тогда
									
									СтрМассива.Цена = ?(СтрМассива.Количество = 0,
										СуммаБезНДС,
										СуммаБезНДС / СтрМассива.Количество);
										
									СтрМассива.ЦенаДоИзменения = ?(СтрМассива.КоличествоДоИзменения = 0,
										СуммаБезНДСДоИзменения,
										СуммаБезНДСДоИзменения / СтрМассива.КоличествоДоИзменения);
										
								КонецЕсли;
																
							КонецЦикла;
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;				
								
				Для каждого СтрокаДанных из ДанныеДляпечати.ТабличнаяЧасть цикл 
									
					Item= СкопироватьСтруктуру(СтруктураItemInvoiceCorrection);
					Item.AmountsDec= 		МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_AmountsDiff");
					Item.AmountsInc= 		МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_AmountsDiff");
					Item.OriginalValues= 	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceItemFields");
					Item.CorrectedValues=	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceItemFields");
					
					Item.Product=	СтрокаДанных.Номенклатура;
					
					Если ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмеренияДоИзменения) Тогда
						Item.OriginalValues.UnitCode= МетодСервера(, "Item_UnitCode", СтрокаДанных.ЕдиницаИзмеренияДоИзменения, СокрЛП(СтрокаДанных.ЕдиницаИзмеренияДоИзменения.Код));
						Item.OriginalValues.ЕдиницаИзмеренияСсылка= СтрокаДанных.ЕдиницаИзмеренияДоИзменения;
					Иначе
						Item.OriginalValues.UnitCode= "";
					КонецЕсли;
					
					Если ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмерения) Тогда
						Item.CorrectedValues.UnitCode= МетодСервера(, "Item_UnitCode", СтрокаДанных.ЕдиницаИзмерения, СокрЛП(СтрокаДанных.ЕдиницаИзмерения.Код));
						Item.CorrectedValues.ЕдиницаИзмеренияСсылка= СтрокаДанных.ЕдиницаИзмерения;
					Иначе
						Item.CorrectedValues.UnitCode= "";	
					КонецЕсли;
										
					Item.OriginalValues.TotalWithVatExcluded=	СтрокаДанных.СуммаДоИзменения - ?(СтрокаДанных.СуммаВключаетНДС, СтрокаДанных.СуммаНДСДоИзменения, 0);
					Item.CorrectedValues.TotalWithVatExcluded= 	СтрокаДанных.Сумма - ?(СтрокаДанных.СуммаВключаетНДС, СтрокаДанных.СуммаНДС, 0);
					
					Если ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмеренияДоИзменения) И ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмеренияДоИзменения.Код) Тогда
						Item.OriginalValues.Quantity=	СтрокаДанных.КоличествоДоИзменения;
						Item.CorrectedValues.Quantity= 	СтрокаДанных.Количество;
						
						Если ВРег(СтрокаДанных.СтавкаНДСДоИзменения) = ВРег(Перечисления.СтавкиНДС.БезНДС) Тогда
							Item.OriginalValues.Price= СтрокаДанных.ЦенаДоИзменения;
						Иначе	
							Item.OriginalValues.Price= Строка(?(Item.OriginalValues.Quantity = 0, 0, Окр(Item.OriginalValues.TotalWithVatExcluded / Item.OriginalValues.Quantity,Точность)));
						КонецЕсли;
						Если ВРег(СтрокаДанных.СтавкаНДС) = ВРег(Перечисления.СтавкиНДС.БезНДС) Тогда
							Item.CorrectedValues.Price= СтрокаДанных.Цена;
						Иначе	
							Item.CorrectedValues.Price= Строка(?(Item.CorrectedValues.Quantity = 0, 0, Окр(Item.CorrectedValues.TotalWithVatExcluded / Item.CorrectedValues.Quantity,Точность)));
						КонецЕсли;
						
					Иначе 
						Item.OriginalValues.Quantity=  0;
						Item.CorrectedValues.Quantity= 0;
					
						Item.OriginalValues.Price=	 0;
						Item.CorrectedValues.Price=  0;
					КонецЕсли;	
					Item.OriginalValues.TaxRate= 	?(ЗначениеЗаполнено(СтрокаДанных.СтавкаНДСДоИзменения) = Истина, ПредставлениеСтавкиНДС(СтрокаДанных.СтавкаНДСДоИзменения, Истина), ПредставлениеСтавкиНДС(СтрокаДанных.СтавкаНДС, Истина));
					Item.CorrectedValues.TaxRate= 	ПредставлениеСтавкиНДС(СтрокаДанных.СтавкаНДС, Истина);
					
					
					Item.OriginalValues.Vat=	СтрокаДанных.СуммаНДСДоИзменения;
					Item.CorrectedValues.Vat=	СтрокаДанных.СуммаНДС;
					
					Item.OriginalValues.Total=	СтрокаДанных.СуммаДоИзменения + ?(СтрокаДанных.СуммаВключаетНДС, 0, СтрокаДанных.СуммаНДСДоИзменения);
					Item.CorrectedValues.Total= СтрокаДанных.Сумма + ?(СтрокаДанных.СуммаВключаетНДС, 0, СтрокаДанных.СуммаНДС);
					
					Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
												
						Item.OriginalValues.TotalWithVatExcluded= СтрокаДанных.СуммаДоИзменения - СтрокаДанных.СуммаНДСДоИзменения;
											
						Item.CorrectedValues.TotalWithVatExcluded= СтрокаДанных.Сумма - СтрокаДанных.СуммаНДС;
												
						Если ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмеренияДоИзменения) И ЗначениеЗаполнено(СтрокаДанных.ЕдиницаИзмеренияДоИзменения.Код) Тогда
							Item.OriginalValues.Price=	Строка(?(Item.OriginalValues.Quantity = 0, 0, Окр(Item.OriginalValues.TotalWithVatExcluded / Item.OriginalValues.Quantity, Точность)));
							Item.CorrectedValues.Price=	Строка(?(Item.CorrectedValues.Quantity = 0, 0, Окр(Item.CorrectedValues.TotalWithVatExcluded / Item.CorrectedValues.Quantity, Точность)));
						КонецЕсли;
						
						Item.OriginalValues.Vat=	СтрокаДанных.СуммаНДСДоИзменения;
						Item.CorrectedValues.Vat= 	СтрокаДанных.СуммаНДС;
						
					    Item.OriginalValues.Total= 	СтрокаДанных.СуммаДоИзменения;
						Item.CorrectedValues.Total= СтрокаДанных.Сумма;
						
					КонецЕсли;
															
					Content.items.Добавить(Item);
					
				КонецЦикла;	  

				стПодписант = МетодСервера(, "СформироватьПараметрыПодписанта", ФИОПодписанта);

				Если НЕ ПараметрыОтправкиНаСогласование = Неопределено тогда 
					
					Если ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПодписанта) Тогда
						ФИОПолучателя =	ПараметрыОтправкиНаСогласование.ФИОПодписанта;
					Иначе
						ФИОПолучателя =	ПараметрыОтправкиНаСогласование.ФИОПолучателя;
					КонецЕсли;
					
					ПодписантФамилия=				ВыделитьСлово(ФИОПолучателя);
					ПодписантИмя= 					ВыделитьСлово(ФИОПолучателя);
					ПодписантОтчество= 				ВыделитьСлово(ФИОПолучателя);
					стПодписант.ПодписантФамилия=	?(НЕ ПустаяСтрока(ПодписантФамилия), ПодписантФамилия, " ");
					стПодписант.ПодписантИмя= 		?(НЕ ПустаяСтрока(ПодписантИмя), ПодписантИмя, " ");
					стПодписант.ПодписантОтчество= 	?(НЕ ПустаяСтрока(ПодписантОтчество), ПодписантОтчество, "");
					
				КонецЕсли;	
								
				Content.Signer.Surname 		= стПодписант.ПодписантФамилия;
				Content.Signer.FirstName 	= стПодписант.ПодписантИмя;
				Content.Signer.Patronymic 	= стПодписант.ПодписантОтчество;
				Content.Signer.Inn 			= Content.seller.inn;
				Content.Signer.IsSoleProprietor	= Content.seller.IsSoleProprietor;
				Content.Signer.SoleProprietorRegistrationCertificate = ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(ДокСсылка.Организация);	
				
			КонецФункции
			
		//} Get InvoiceCorrection content
		////////////////////////////////////////////////////////////////////////////////
		
		////////////////////////////////////////////////////////////////////////////////
		//{ Get Invoice content
			
			Функция ПолучитьInvoiceContent(ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт

				InvoiceContent=	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceContent");

				ЗаполнитьКонтентInvoice(InvoiceContent, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта);
				
				Возврат InvoiceContent;
				
			КонецФункции
			
			Функция ЗаполнитьКонтентInvoice(Content, ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта) Экспорт 
				
				ДанныеДляПечати= 	СформироватьДанныеДляПечати(ДокСсылка, Ложь);
				Точность= 			ОбработкаОбъект.ТочностьЦеныСФ();
				
				Если ЭтоИсправление(ДокСсылка) Тогда
					
					Number= Строка(ДанныеДляПечати.ДанныеСФ.НомерСчФ);
					Если ЗначениеЗаполнено(ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.Number=	Number + "/" + ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.Number=	Number;
					КонецЕсли; 
					
					Content.Date= 					ДанныеДляПечати.ДанныеСФ.ДатаСчФ;
					Content.InvoiceRevisionNumber= 	Строка(ДанныеДляПечати.ДанныеСФ.ИспрСчФ.НомИспрСчФ);
					Content.InvoiceRevisionDate= 	ДанныеДляПечати.ДанныеСФ.ИспрСчФ.ДатаИспрСчФ;
				Иначе
					
					Number=	МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
					
					Если ЗначениеЗаполнено(ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.Number=	Number + "/" + ДанныеДляПечати.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.Number=	Number;
					КонецЕсли;
					
					Content.Date= ДокСсылка.Дата;
				КонецЕсли;	

				СтруктураPaymentDocuments= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_PaymentDocument");

				Для Каждого ПРД Из ДанныеДляПечати.ДатаНомерДокументовОплаты Цикл
					
					PaymentDocumentContent=	СкопироватьСтруктуру(СтруктураPaymentDocuments);
					
					PaymentDocumentContent.Number = ПРД.НомерПлатежноРасчетногоДокумента;
					PaymentDocumentContent.date   = ПРД.ДатаПлатежноРасчетногоДокумента;
					
					Content.PaymentDocuments.Добавить(PaymentDocumentContent);
					
				КонецЦикла;	
				
				Content.currency = ?(ПустаяСтрока(ДанныеДляПечати.Валюта), "", Строка(ДанныеДляПечати.Валюта.Код));
				Content.ВалютаСсылка =   ДанныеДляПечати.Валюта;
				
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Buyer, ДанныеДляПечати.Покупатель, ДокСсылка.Дата, , истина, истина);
				Если НЕ ДокСсылка.Метаданные().Реквизиты.Найти("КППКонтрагента") = Неопределено Тогда
					КПППокупателя=	ДокСсылка.КППКонтрагента;
					Если ЗначениеЗаполнено(КПППокупателя) Тогда
						Content.Buyer.kpp =  КПППокупателя
					КонецЕсли
				КонецЕсли;	
				
				КППГрузоотправителя=	"";
				Если ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель) И НЕ ТипЗнч(ДанныеДляПечати.Грузоотправитель) = Тип("Строка") Тогда
					ПодставлятьКППГрузоотправителя=	ОбработкаОбъект.ПолучитьЗначениеСвойства(ДокСсылка.Организация, ОбработкаОбъект.ИдентификаторСвойстваПодставлятьКППГрузоотправителя());
					Если (НЕ ПодставлятьКППГрузоотправителя = Неопределено И ПодставлятьКППГрузоотправителя) Тогда
						КППГрузоотправителя=	?(ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель.КПП), ДанныеДляПечати.Грузоотправитель.КПП, "");
					КонецЕсли;
				КонецЕсли;

				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Seller, ДанныеДляПечати.Поставщик, ДокСсылка.Дата, , истина, истина, КППГрузоотправителя);
				
				Попытка
					Если ДанныеДляПечати.Поставщик.ОбособленноеПодразделение = Истина Тогда
						//значит поставщик - подразделение и в СФ нужно выводить его адрес, а не головной организации
						ДанныеДляПечати.Грузоотправитель = ДанныеДляПечати.Поставщик;
					КонецЕсли;
				Исключение
				КонецПопытки;
				
				Если ДанныеДляПечати.Грузоотправитель = "он же" тогда 
					Content.Shipper.SameAsSellerOrBuyer =истина;
				ИначеЕсли ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель) тогда  
					ЗаполнитьСтруктурированноеОписаниеГрузоотправителяГрузополучателя(Content.Shipper, ДанныеДляПечати.Грузоотправитель, ДокСсылка.Дата); 
				Иначе 
					Content.Shipper.SameAsSellerOrBuyer =ложь;
				КонецЕсли;
				
				КастомноеХранениеАдресаГрузополучателя = ОбработкаОбъект.ИспользоватьКастомныйАдресГрузополучателя();
				Если КастомноеХранениеАдресаГрузополучателя = Истина Тогда
					КастомныйАдрес = ОбработкаОбъект.ПолучитьКастомныйАдресГрузополучателя();
				КонецЕсли;
				Если ЗначениеЗаполнено(КастомныйАдрес) = Истина Тогда
					ЗаполнитьСтруктурированноеОписаниеГрузоотправителяГрузополучателя(Content.Consignee, ДанныеДляПечати.Грузополучатель, ДокСсылка.Дата, КастомныйАдрес);
				Иначе
					Если ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель) Тогда
						ЗаполнитьСтруктурированноеОписаниеГрузоотправителяГрузополучателя(Content.Consignee, ДанныеДляПечати.Грузополучатель, ДокСсылка.Дата); 
					Иначе 
						Content.Consignee.SameAsSellerOrBuyer = ложь;
					КонецЕсли;	
				КонецЕсли;
								
				ОбработкаОбъект.ЗаполнитьStructedAdditionalInfos(Content.StructedAdditionalInfos, ДопСведения);

				СтруктураItemInvoice=	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_InvoiceItem");
				
				РасчетыВУЕ 		= ДокСсылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах;
				ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
								
				НуженПересчетВРубли = (РасчетыВУЕ И ДокСсылка.ВалютаДокумента <> ВалютаРеглУчета);				
				
				Если НуженПересчетВРубли = Истина И ДокСсылка.Проведен Тогда
										
					КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокСсылка.ВалютаДокумента, ДокСсылка.Дата);
											
					Курс      = КурсИКратность.Курс;
					Кратность = КурсИКратность.Кратность;
													
					Для каждого СтрМассива из ДанныеДляПечати.ТабличнаяЧасть Цикл
			        								
						Если СтрМассива.СуществуютЗаписиРублевыхСумм Тогда
							СтрМассива.СуммаНДС	= СтрМассива.НДСВРублях;
							СуммаБезНДС 		= СтрМассива.ВсегоВРублях - СтрМассива.НДСВРублях;
						Иначе
							Кратность = ?(Кратность = 0, 1, Кратность);
							СтрМассива.СуммаНДС = СтрМассива.СуммаНДС * Курс / Кратность;
							СуммаБезНДС 		= (СуммаБезНДС + СтрМассива.СуммаНДС) * Курс / Кратность - СтрМассива.СуммаНДС;
						КонецЕсли;
													
						СтрМассива.Сумма = СуммаБезНДС + СтрМассива.СуммаНДС;
						
						Если НуженПересчетВРубли ИЛИ (СтрМассива.СуммаВключаетНДС И СтрМассива.СуммаНДС <> 0) Тогда
							
							СтрМассива.Цена = ?(СтрМассива.Количество = 0,
								СуммаБезНДС,
								СуммаБезНДС / СтрМассива.Количество);
								
						КонецЕсли;
					КонецЦикла;
										
				КонецЕсли;				
											
				Vat= 0;
				TotalWithVatExcluded= 0;
				Total= 0;
				Для каждого Стр из ДанныеДляПечати.ТабличнаяЧасть Цикл
					
					Item= СкопироватьСтруктуру(СтруктураItemInvoice);
					
					Item.Product= 	Стр.Номенклатура;
					
					Если ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда
						Item.UnitCode= МетодСервера(, "Item_UnitCode", Стр.ЕдиницаИзмерения, СокрЛП(Стр.КодЕдиницыИзмерения));
					Иначе
						Item.UnitCode= "";
					КонецЕсли;
										
					Item.ЕдиницаИзмеренияСсылка= Стр.ЕдиницаИзмерения;
					
					Если СчетФактуранаАванс(ДокСсылка) = Ложь Тогда 
						Item.TotalWithVatExcluded= Стр.Сумма - ?(Стр.СуммаВключаетНДС, Стр.СуммаНДС, 0);
					КонецЕсли;	
					
					Если СчетФактуранаАванс(ДокСсылка) = Ложь И ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) И ЗначениеЗаполнено(Стр.КодЕдиницыИзмерения) Тогда 
						Item.Quantity= Стр.Количество;
						Если ВРег(Стр.СтавкаНДС) = ВРег(Перечисления.СтавкиНДС.БезНДС) Тогда
							Item.price= Строка(Стр.Цена);
						Иначе	
							Item.price= Строка(?(Item.Quantity = 0, Неопределено, Окр(Item.TotalWithVatExcluded/Item.Quantity,Точность)));
						КонецЕсли;
					Иначе 
						//Item.Quantity = 0;
						//Item.price =  0;
					КонецЕсли;
										
					Item.Vat= 		Стр.СуммаНДС;
					Item.Total= 	Стр.Сумма + ?(Стр.СуммаВключаетНДС, 0, Стр.СуммаНДС);
					Item.TaxRate= 	ПредставлениеСтавкиНДС(Стр.СтавкаНДС, Истина);
					Item.CountriesOfOrigin= 		?(ЗначениеЗаполнено(Стр.СтранаПроисхождения), Стр.СтранаПроисхождения.Код, "");
					Item.СтранаПроисхожденияСсылка= ?(ЗначениеЗаполнено(Стр.СтранаПроисхождения), Стр.СтранаПроисхождения, Справочники.СтраныМира.ПустаяСсылка());
					Item.CustomsDeclarationNumbers= ?(ЗначениеЗаполнено(Стр.НомерГТД), ?(ТипЗнч(Стр.НомерГТД) = Тип("Строка"), СокрЛП(Стр.НомерГТД), СокрЛП(Стр.НомерГТД.Код)), "");
										
					Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
						Если Стр.СуществуютЗаписиРублевыхСумм Тогда
							Item.Vat= Стр.НДСВРублях;
							Item.TotalWithVatExcluded= Стр.ВсегоВРублях - Стр.НДСВРублях;
						Иначе
							Кратность= ?(Кратность = 0, 1, Кратность);
							
							Item.Vat= Стр.СуммаНДС * Курс / Кратность;
							Item.TotalWithVatExcluded= (Стр.СуммаБезНДС + Стр.СуммаНДС) * Курс / Кратность - Стр.СуммаНДС;
						КонецЕсли;
						
						Item.Total= Item.TotalWithVatExcluded + Item.Vat;
												
					КонецЕсли;
					
					Если (НуженПересчетВРубли ИЛИ (Стр.СуммаВключаетНДС И Стр.СуммаНДС <> 0)) И ДокСсылка.Проведен Тогда
						
						Если НЕ Item.Price = Неопределено Тогда 
							Item.Price= Строка(?(Item.Quantity = 0, Item.TotalWithVatExcluded, Окр(Item.TotalWithVatExcluded/Item.Quantity, Точность)));
						КонецЕсли;
						
					КонецЕсли;
														
					Content.items.Добавить(Item);
					
					Vat= 					Vat 					+ Item.Vat;
					TotalWithVatExcluded= 	TotalWithVatExcluded	+ ?(Item.TotalWithVatExcluded = Неопределено, 0, Item.TotalWithVatExcluded);
					Total=					Total					+ Item.Total;
					
					Item.Vat= ?(Item.TaxRate = "без НДС", Неопределено, Item.Vat);
					
				КонецЦикла;	
				
				Content.Totals.Vat 					= Vat;
				Content.Totals.TotalWithVatExcluded = TotalWithVatExcluded;
				Content.Totals.Total 				= Total;

				стПодписант = МетодСервера(, "СформироватьПараметрыПодписанта", ФИОПодписанта);

				Если НЕ ПараметрыОтправкиНаСогласование = Неопределено тогда 
					
					Если ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПодписанта) Тогда
						ФИОПолучателя =	ПараметрыОтправкиНаСогласование.ФИОПодписанта;
					Иначе	
						ФИОПолучателя =	ПараметрыОтправкиНаСогласование.ФИОПолучателя;
					КонецЕсли;
					
					ПодписантФамилия=				ВыделитьСлово(ФИОПолучателя);
					ПодписантИмя= 					ВыделитьСлово(ФИОПолучателя);
					ПодписантОтчество= 				ВыделитьСлово(ФИОПолучателя);
					
					стПодписант.ПодписантФамилия=	?(НЕ ПустаяСтрока(ПодписантФамилия), ПодписантФамилия, " ");
					стПодписант.ПодписантИмя= 		?(НЕ ПустаяСтрока(ПодписантИмя), ПодписантИмя, " ");
					стПодписант.ПодписантОтчество= 	?(НЕ ПустаяСтрока(ПодписантОтчество), ПодписантОтчество, "");
					
				КонецЕсли;
								
				Content.Signer.Surname 		= стПодписант.ПодписантФамилия;
				Content.Signer.FirstName 	= стПодписант.ПодписантИмя;
				Content.Signer.Patronymic 	= стПодписант.ПодписантОтчество;
				Content.Signer.Inn 			= Content.seller.inn;
				Content.Signer.IsSoleProprietor	= Content.seller.IsSoleProprietor;
				Content.Signer.SoleProprietorRegistrationCertificate = ПолучитьДатуНомерСвидетельстваОГосРегистрацииИП(ДокСсылка.Организация);	
				
			КонецФункции
			
		//} Get Invoice content
		////////////////////////////////////////////////////////////////////////////////
		
		////////////////////////////////////////////////////////////////////////////////
		//{ Get Torg-12 content
			
			Функция ПолучитьXmlTorg12Content(ДокСсылка, ПараметрыОтправкиНаСогласование, НомерЗаказа, ДопСведения, ФИОПодписанта) Экспорт

				XmlTorg12Content=	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_Torg12SellerContent");

				ЗаполнитьКонтентXmlTorg12(XmlTorg12Content, ДокССылка, ПараметрыОтправкиНаСогласование, НомерЗаказа, ДопСведения, ФИОПодписанта);
				
				Возврат XmlTorg12Content;
				
			КонецФункции
			
			Процедура ЗаполнитьКонтентXmlTorg12(Content, ДокССылка, ПараметрыОтправкиНаСогласование, НомерЗаказа, ДопСведения, ФИОПодписанта) Экспорт
				
				ДокССылка=		?(ТипЗнч(ДокССылка) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров"), ДокССылка.ДокументОтгрузки, ДокССылка);
				
				ДанныеШапки=	ПолучитьДанныеШапки(ДокССылка, Неопределено);
				
				Если ДанныеШапки.количество() = 0 Тогда
					вызватьисключение("не найден документ")
				иначе 
					ДанныеШапки = ДанныеШапки[0];
				КонецЕсли;	
				
				БанковскийСчетОрганизации = ПолучитьБанковскийСчет(ДокССылка);
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Seller, ДокСсылка.Организация, ДокССылка.Дата, БанковскийСчетОрганизации, Истина);
				
				ГрузоотправительССылка = ?((ЗначениеЗаполнено(ДанныеШапки.Грузоотправитель) = Ложь) ИЛИ (ДанныеШапки.Грузоотправитель = "он же"), ДанныеШапки.Организация, ДанныеШапки.Грузоотправитель);
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Shipper, ГрузоотправительССылка, ДокССылка.Дата, , Ложь);
				
				Content.ShipperDepartment = ПолучитьПодразделениеИзДокумента(ДокССылка);
				
				ГрузополучательСсылка = ?(ЗначениеЗаполнено(ДанныеШапки.Грузополучатель), ДанныеШапки.Грузополучатель, ДокСсылка.Контрагент);
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Consignee,  ГрузополучательСсылка, ДокССылка.Дата, , ложь);
				
				ЗаполнитьСтруктурированоеОписаниеЮрФизЛица(Content.Buyer, ДокСсылка.Контрагент, ДокССылка.Дата, , истина);
				
				Если ЗначениеЗаполнено(НомерЗаказа) тогда 
					Content.GroundName=	"Заказ";
					Content.GroundNumber=	СокрЛП(НомерЗаказа);
				Иначе	
					СтруктураДоговора=		СтруктурированноеПредставлениеОснования(ДокССылка);
					Content.GroundName=		СтруктураДоговора.GroundName;
					Content.GroundDate=		СтруктураДоговора.GroundDate;
					Content.GroundNumber=	СтруктураДоговора.GroundNumber;
				КонецЕсли;	
				
				Content.Number = МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
				Content.Date   = ДокСсылка.Дата;
				
				ИдКонтрагента = ОбработкаОбъект.Контрагент_2_CounteragentBoxID(ДокССылка.Контрагент);
				Если ОбработкаОбъект.НужноФормироватьДопИнфоПоШаблону(ИдКонтрагента) = Истина Тогда
					content.AdditionalInfo = ОбработкаОбъект.СформироватьСтрокуДопИнфоПоШаблону(ДопСведения);
				Иначе
					content.AdditionalInfo = ДопСведения;
				КонецЕсли;
				
				Попытка
					Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
						КолонкаКодаТовара = "Артикул";
					Иначе
						КолонкаКодаТовара = "Код";
					КонецЕсли;
				Исключение
					КолонкаКодаТовара = "Код";
				КонецПопытки;
				
				ТаблицаТоваров= ПолучитьДанныеТЧ(ДокСсылка, , Константы.ВалютаРегламентированногоУчета.Получить(), КолонкаКодаТовара, Ложь);
							
				ВалютаРеглУчета= 		ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
				ВалютаВзаиморасчетов= 	ДокСсылка.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				НуженПересчетВРубли= 	НЕ (ДокСсылка.ВалютаДокумента = ВалютаРеглУчета);
				
				Если НЕ ВалютаВзаиморасчетов = ВалютаРеглУчета И НуженПересчетВРубли И ДокССылка.Проведен Тогда
					
					КурсИКратность= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокСсылка.ВалютаДокумента, ДокСсылка.Дата);
													
					Курс= 		КурсИКратность.Курс;
					Кратность= 	КурсИКратность.Кратность;
					
					Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
															
						Если СтрокаТаблицы.СуществуютЗаписиРублевыхСумм Тогда
							СтрокаТаблицы.СуммаНДС= СтрокаТаблицы.НДСВРублях;
							СуммаБезНДС= 			СтрокаТаблицы.ВсегоВРублях - СтрокаТаблицы.НДСВРублях;
						Иначе
							Кратность= ?(Кратность = 0, 1, Кратность);
							СтрокаТаблицы.СуммаНДС= СтрокаТаблицы.СуммаНДС * Курс / Кратность;
							СуммаБезНДС= 			(СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.СуммаНДС) * Курс / Кратность - СтрокаТаблицы.СуммаНДС;
						КонецЕсли;
														
						СтрокаТаблицы.Сумма= СуммаБезНДС + СтрокаТаблицы.СуммаНДС;
						
						Если СтрокаТаблицы.СуммаВключаетНДС И СтрокаТаблицы.СуммаНДС <> 0 Тогда
							СтрокаТаблицы.Цена= ?(СтрокаТаблицы.Количество = 0, СуммаБезНДС, СуммаБезНДС / СтрокаТаблицы.Количество);
						КонецЕсли;
							
					КонецЦикла;
					
				КонецЕсли;
								
				TotalParcelsQuantity 	= 0;
				TotalGrossQuantity 		= 0;
				TotalMassQuantity		= 0;
				TotalWithVatExcluded 	= 0;
				Total 					= 0;
				Vat 					= 0;

				СтруктураItems= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_Torg12Item");

				Для каждого СтрокаТаблицы из ТаблицаТоваров Цикл 
					
					Item= СкопироватьСтруктуру(СтруктураItems);
					
					Item.Product=		СтрокаТаблицы.Номенклатура;
					Item.ProductCode=	СтрокаТаблицы.КодНоменклатуры;
					Item.UnitCode= 		МетодСервера(, "Item_UnitCode", СтрокаТаблицы.ЕдиницаИзмерения, СокрЛП(СтрокаТаблицы.КодЕдиницыИзмерения));
					Item.UnitName=		Строка(СтрокаТаблицы.ЕдиницаИзмерения);
					Item.Quantity=		СтрокаТаблицы.Количество;
					Item.TaxRate=		ПредставлениеСтавкиНДС(СтрокаТаблицы.СтавкаНДС);
					Item.Vat=			СтрокаТаблицы.СуммаНДС;
					Item.Total=			СтрокаТаблицы.Сумма + ?(СтрокаТаблицы.СуммаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
					Item.TotalWithVatExcluded= Item.Total - Item.Vat;
					Item.Price=			Окр(Item.TotalWithVatExcluded / ?(Item.Quantity = 0, 1, Item.Quantity), 2);
					
					Item.СсылкаНаЕИ= 	СтрокаТаблицы.ЕдиницаИзмерения;
					
					Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
						Если СтрокаТаблицы.СуществуютЗаписиРублевыхСумм Тогда
							Item.Vat= СтрокаТаблицы.НДСВРублях;
							Item.TotalWithVatExcluded= СтрокаТаблицы.ВсегоВРублях - СтрокаТаблицы.НДСВРублях;
						Иначе
							Кратность= ?(Кратность = 0, 1, Кратность);
													
							Item.Vat= СтрокаТаблицы.СуммаНДС * Курс / Кратность;
							Item.TotalWithVatExcluded= (СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.СуммаНДС) * Курс / Кратность - СтрокаТаблицы.СуммаНДС;
						КонецЕсли;
						
						Item.Total= Item.TotalWithVatExcluded + Item.Vat;
												
					КонецЕсли;
					
					Если (НуженПересчетВРубли ИЛИ (СтрокаТаблицы.СуммаВключаетНДС И СтрокаТаблицы.СуммаНДС <> 0)) И ДокСсылка.Проведен Тогда
						
						Item.Price= ?(Item.Quantity = 0, Item.TotalWithVatExcluded, Окр(Item.TotalWithVatExcluded/Item.Quantity, 2));
												
					КонецЕсли;
										
					Если ЗначениеЗаполнено(строкаТаблицы.КоличествоМест) Тогда
						Item.ParcelsQuantity= 	СтрокаТаблицы.КоличествоМест;
						Item.ParcelCapacity= 	СтрокаТаблицы.КоличествоВОдномМесте;
						Item.ParcelType=		?(ЗначениеЗаполнено(строкаТаблицы.ВидУпаковки), строкаТаблицы.ВидУпаковки.Наименование, "");
						Item.GrossQuantity=		СтрокаТаблицы.Масса;
						TotalGrossQuantity=		TotalGrossQuantity + ?(ЗначениеЗаполнено(Item.GrossQuantity), Item.GrossQuantity, 0);
						TotalParcelsQuantity=	TotalParcelsQuantity + Item.ParcelsQuantity;
					КонецЕсли;	
					
					Content.items.Добавить(Item);
					
					TotalMassQuantity=		TotalMassQuantity+Item.Quantity;
					TotalWithVatExcluded=	TotalWithVatExcluded+Item.TotalWithVatExcluded;
					Total= 					Total 	+ Item.Total;
					Vat=					Vat 	+ Item.Vat;
					
					Item.Vat= ?(Item.TaxRate = "без НДС", Неопределено, Item.Vat);
					
				КонецЦикла;
				
				Content.Totals.ParcelsQuantity 		= TotalParcelsQuantity;
				Content.Totals.GrossQuantity 		= TotalGrossQuantity;
				Content.Totals.Quantity 			= TotalMassQuantity;
				Content.Totals.TotalWithVatExcluded = TotalWithVatExcluded;
				Content.Totals.Total 				= Total;
				Content.Totals.Vat 					= Vat;
				
				Content.SupplyDate 					= Content.Date; 
				
				Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
					Content.commons.TotalSumInWords = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Content.Totals.Total, ВалютаРеглУчета);	
				Иначе	
					Content.commons.TotalSumInWords = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДокССылка.СуммаДокумента, ДокССылка.ВалютаДокумента);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(TotalParcelsQuantity) тогда
					Content.commons.TotalParcelsQuantityInWords = стрзаменить(ЧислоПрописью(TotalParcelsQuantity, "ДП = ложь"), "  00", "");
				КонецЕсли;	
				
				ФИОСогласователя = "";
								
				ДолжностьСогласователя = "";
				
				Если НЕ ПараметрыОтправкиНаСогласование = Неопределено Тогда
					Если ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПодписанта) Тогда
						ФИОСогласователя 		= ПараметрыОтправкиНаСогласование.ФИОПодписанта;
						ДолжностьСогласователя 	= ПараметрыОтправкиНаСогласование.ДолжностьПодписанта;
					Иначе
						Если ЗначениеЗаполнено(ПараметрыОтправкиНаСогласование.ФИОПолучателя) Тогда 
							ФИОСогласователя 	= ПараметрыОтправкиНаСогласование.ФИОПолучателя;
						КонецЕсли;
						ДолжностьСогласователя 	= ПараметрыОтправкиНаСогласование.ДолжностьПолучателя;
					КонецЕсли;
				КонецЕсли;	
								
				Если ФИОСогласователя = "" Тогда
					ПараметрыПодписания = ОбработкаОбъект.ПолучитьПараметрыПодписанияТ12вДиадок(ДокСсылка.Организация);
					
					Если ПараметрыПодписания.СпособПодписания = "4" Тогда
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.SupplyPerformedBy,	ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.SupplyAllowedBy, 	ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
						
						ПараметрыПодписания.ДолжностьПодписанта = "Главный (старший) бухгалтер";
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.ChiefAccountant,	ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
						
					ИначеЕсли параметрыПодписания.СпособПодписания="2" тогда 
						ПараметрыПодписания.ДолжностьПодписанта = "Главный (старший) бухгалтер";
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.ChiefAccountant,  ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
					ИначеЕсли параметрыПодписания.СпособПодписания="3" тогда
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.SupplyPerformedBy,  ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
					Иначе	
						ОбработкаОбъект.ЗаполнитьПодписантаДляXmlTorg12(Content.SupplyAllowedBy,  ОбработкаОбъект.ПредставлениеВизирующегоСтруктурой(ПараметрыПодписания));
					КонецЕсли;
					
				Иначе 
					ОбработкаОбъект.ЗаполнитьФИОПодписанта(Content.SupplyAllowedBy, ФИОСогласователя);
					Content.SupplyAllowedBy.JobTitle = СокрЛП(?(НЕ ПустаяСтрока(ДолжностьСогласователя), ДолжностьСогласователя, "_"));
				КонецЕсли;
				
			КонецПроцедуры
		
			Функция ЭтоКонтактнаяИнформацияВXML(Текст)
				
				Возврат ТипЗнч(Текст) = Тип("Строка") И ЛЕВ(СокрЛ(Текст), 1) = "<";
				
			КонецФункции
			
		//} Get Torg-12 content
		////////////////////////////////////////////////////////////////////////////////

		////////////////////////////////////////////////////////////////////////////////
		//{ Get UniversalTransferDocument content
			
			Функция ПолучитьXmlUTDContent(ДокСсылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта, ТипДокумента) Экспорт
				
				XmlUTDContent =	МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_UtdSellerContent");
				ЗаполнитьКонтентXmlUTD(XmlUTDContent, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта, ТипДокумента);
				
				Возврат XmlUTDContent;
				
			КонецФункции
			
			Процедура ЗаполнитьКонтентXmlUTD(Content, ДокССылка, ПараметрыОтправкиНаСогласование, ДопСведения, ФИОПодписанта, ТипДокумента) Экспорт
				
				Точность 		= МетодСервера(, "ТочностьЦеныСФ");
				ДанныеДляПечати = ПолучитьДанныеДляФормированияУПД(ДокССылка, ТипДокумента);
				ДанныеШапки     = ДанныеДляПечати.ДанныеШапки;
				ТаблицаТоваров  = ДанныеДляПечати.ТаблицаТоваров;
				
				Если ДанныеШапки.Свойство("СчетФактураСсылка") Тогда
					content.СчетФактураСсылка = ДанныеШапки.СчетФактураСсылка;
				КонецЕсли;
				
				Заполнить_ExtendedOrganizationInfo(Content.Buyer, ДанныеШапки.Покупатель, ДокСсылка.Дата, Истина);
				Если НЕ ДокСсылка.Метаданные().Реквизиты.Найти("КППКонтрагента") = Неопределено Тогда
					КПППокупателя =	ДокСсылка.КППКонтрагента;
					Если ЗначениеЗаполнено(КПППокупателя) Тогда
						Content.Buyer.kpp =  КПППокупателя
					КонецЕсли
				КонецЕсли;	
				
				КППГрузоотправителя = "";
				
				Если ДанныеШапки.СодержитТовары Тогда
					
					Если ЗначениеЗаполнено(ДанныеШапки.Грузоотправитель) И НЕ ТипЗнч(ДанныеШапки.Грузоотправитель) = Тип("Строка") Тогда
						ПодставлятьКППГрузоотправителя = МетодСервера(,"ПолучитьЗначениеСвойства", ДанныеШапки.Поставщик, МетодСервера(,"ИдентификаторСвойстваПодставлятьКППГрузоотправителя"));
						Если (НЕ ПодставлятьКППГрузоотправителя = Неопределено И ПодставлятьКППГрузоотправителя) Тогда
							КППГрузоотправителя = ?(ЗначениеЗаполнено(ДанныеШапки.Грузоотправитель.КПП), ДанныеШапки.Грузоотправитель.КПП, "");
						КонецЕсли;
					КонецЕсли;

					Попытка
						Если ДанныеШапки.Поставщик.ОбособленноеПодразделение = Истина Тогда
							//значит поставщик - подразделение и в СФ нужно выводить его адрес, а не головной организации
							ДанныеШапки.Грузоотправитель = ДанныеШапки.Поставщик;
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					ГрузоотправительОнЖе = Не ЗначениеЗаполнено(ДанныеШапки.Грузоотправитель) или ДанныеШапки.Грузоотправитель="он же";
					ГрузоотправительССылка = ?(ГрузоотправительОнЖе,  ДанныеШапки.Поставщик, ДанныеШапки.Грузоотправитель);
					Заполнить_ExtendedOrganizationInfo(Content.Shipper.OrganizationInfo, ГрузоотправительССылка, ДокСсылка.Дата, Ложь); 
					Content.Shipper.SameAsSeller = ГрузоотправительОнЖе;
					
					ГрузополучательСсылка = ?(ЗначениеЗаполнено(ДанныеШапки.Грузополучатель), ДанныеШапки.Грузополучатель, ДанныеШапки.Покупатель);
					Заполнить_ExtendedOrganizationInfo(Content.Consignee, ГрузополучательСсылка, ДокСсылка.Дата, Ложь); 
					
				КонецЕсли;
				
				Заполнить_ExtendedOrganizationInfo(Content.Seller, ДанныеШапки.Поставщик, ДокСсылка.Дата, Истина,, КППГрузоотправителя);
				
				Content.Creator  = Content.seller.name + ", ИНН/КПП " + МетодСервера(, "ПредставлениеИННКПП", Content.seller);
				Content.Function = ДанныеШапки.Функция;
				
				Если ДанныеШапки.Свойство("ДанныеСФ") И ДанныеШапки.ДанныеСФ.Свойство("ИспрСчФ") Тогда
					Content.RevisionNumber = Строка(ДанныеШапки.ДанныеСФ.ИспрСчФ.НомИспрСчФ);
					Content.RevisionDate   = ДанныеШапки.ДанныеСФ.ИспрСчФ.ДатаИспрСчФ;
					Number = Строка(ДанныеШапки.ДанныеСФ.НомерСчФ);
					Если ЗначениеЗаполнено(ДанныеШапки.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.Number = Number + "/" + ДанныеШапки.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.Number = Number;
					КонецЕсли;
					Content.Date = ДанныеШапки.ДанныеСФ.ДатаСчФ;
				Иначе
					Number = МетодСервера("Модуль_ИнтеграцияБП30","ддПолучитьНомерНаПечать", ДокСсылка);
					Если ЗначениеЗаполнено(ДанныеШапки.ЦифровойИндексОбособленногоПодразделения) = Истина Тогда
						Content.Number = Number + "/" + ДанныеШапки.ЦифровойИндексОбособленногоПодразделения;
					Иначе
						Content.Number = Number;
					КонецЕсли;
					Content.Date= ДокСсылка.Дата;
				КонецЕсли;
				Если ДанныеШапки.Свойство("ДатаНомерДокументовОплаты") Тогда
					СтруктураPaymentDocuments= МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_PaymentDocument");
					для каждого ПРД из ДанныеШапки.ДатаНомерДокументовОплаты цикл
						ЗаполненнаяСтруктураPaymentDocuments = СкопироватьСтруктуру(СтруктураPaymentDocuments);
						ЗаполненнаяСтруктураPaymentDocuments.Number = ПРД.НомерПлатежноРасчетногоДокумента;
						ЗаполненнаяСтруктураPaymentDocuments.Date   = ПРД.ДатаПлатежноРасчетногоДокумента;
						content.PaymentDocuments.Добавить(ЗаполненнаяСтруктураPaymentDocuments);
					КонецЦикла;	
				КонецЕсли;
				
				Content.currency = ?(ПустаяСтрока(ДанныеШапки.Валюта), "", Строка(ДанныеШапки.Валюта.Код));
				Content.ВалютаСсылка = ДанныеШапки.Валюта;
				
				МетодСервера(,"ЗаполнитьStructedAdditionalInfos", Content.AdditionalInfoId.StructedAdditionalInfos, ДопСведения);
				
				РасчетыВУЕ 		= ДокСсылка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах;
				ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
				Курс      = 1;				
				Кратность = 1;
				НуженПересчетВРубли = (РасчетыВУЕ И ДокСсылка.ВалютаДокумента <> ВалютаРеглУчета);
				НужноПересчитатьСуммыВСтроке = Ложь;
				
				Если НуженПересчетВРубли И ДокСсылка.Проведен Тогда
					КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокСсылка.ВалютаДокумента, ДокСсылка.Дата);
					Курс      = КурсИКратность.Курс;
					Кратность = ?(КурсИКратность.Кратность = 0, 1, КурсИКратность.Кратность);
					НужноПересчитатьСуммыВСтроке = Истина;
				КонецЕсли;				
											
				СтруктураItems = МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_ExtendedInvoiceItem");
				СтруктураГТД = МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_CustomDeclaration");
				
				TotalNet = 0;
				Total 	 = 0;
				Vat 	 = 0;
				TotalWithVatExcluded = 0;
				
				Для каждого строкаТаблицы из ТаблицаТоваров цикл 
					
					ЗаполненнаяСтруктураItems = СкопироватьСтруктуру(СтруктураItems);
					
					ЗаполненнаяСтруктураItems.Product 	 =  строкаТаблицы.Номенклатура;
					ЗаполненнаяСтруктураItems.VendorCode =  строкаТаблицы.КодНоменклатуры;
					ЗаполненнаяСтруктураItems.ItemMark   =  строкаТаблицы.ПризнакТоварРаботаУслуга;
					
					ЗаполненнаяСтруктураItems.TaxRate 	 =  ПредставлениеСтавкиНДС(строкаТаблицы.СтавкаНДС, Истина);
					
					ЗаполненнаяСтруктураItems.Subtotal 	 				=  строкаТаблицы.Сумма + ?(строкаТаблицы.СуммаВключаетНДС, 0, строкаТаблицы.СуммаНДС);
					ЗаполненнаяСтруктураItems.SubtotalWithVatExcluded	=  строкаТаблицы.Сумма - ?(строкаТаблицы.СуммаВключаетНДС, строкаТаблицы.СуммаНДС, 0);
										
					Если нрег(строкаТаблицы.СтавкаНДС) <> "без ндс" Тогда
						ЗаполненнаяСтруктураItems.Vat = строкаТаблицы.СуммаНДС;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(строкаТаблицы.ЕдиницаИзмерения) Тогда
						ЗаполненнаяСтруктураItems.Quantity = ?(ЗначениеЗаполнено(строкаТаблицы.ЕдиницаИзмерения), строкаТаблицы.Количество, 0);
						Если строкаТаблицы.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
							ЗаполненнаяСтруктураItems.Price = строкаТаблицы.Цена;
						Иначе	
							ЗаполненнаяСтруктураItems.Price = ?(ЗаполненнаяСтруктураItems.Quantity = 0, Неопределено, Окр(ЗаполненнаяСтруктураItems.SubtotalWithVatExcluded / ЗаполненнаяСтруктураItems.Quantity, Точность));	
						КонецЕсли;
					КонецЕсли;
					
					Если НужноПересчитатьСуммыВСтроке Тогда
						
						Если строкаТаблицы.СуществуютЗаписиРублевыхСумм Тогда
							СуммаБезНДС 		   = строкаТаблицы.ВсегоВРублях - строкаТаблицы.НДСВРублях;
							строкаТаблицы.СуммаНДС = строкаТаблицы.НДСВРублях;
						Иначе
							СуммаБезНДС            = (?(строкаТаблицы.СуммаВключаетНДС, строкаТаблицы.Сумма - строкаТаблицы.СуммаНДС, строкаТаблицы.Сумма)) * Курс / Кратность;
							строкаТаблицы.СуммаНДС = строкаТаблицы.СуммаНДС * Курс / Кратность;
						КонецЕсли;
						строкаТаблицы.Цена  = ?(строкаТаблицы.Количество = 0, СуммаБезНДС, СуммаБезНДС / строкаТаблицы.Количество);
						строкаТаблицы.Сумма = СуммаБезНДС + строкаТаблицы.СуммаНДС;
						
						Если ЗаполненнаяСтруктураItems.Price <> Неопределено Тогда 
							ЗаполненнаяСтруктураItems.Price = Окр(строкаТаблицы.Цена, Точность);
						КонецЕсли;
						ЗаполненнаяСтруктураItems.Vat 					  = строкаТаблицы.СуммаНДС;
						ЗаполненнаяСтруктураItems.Subtotal				  = строкаТаблицы.Сумма;
						ЗаполненнаяСтруктураItems.SubtotalWithVatExcluded = СуммаБезНДС;
						
					КонецЕсли;
					
					Если ТипЗнч(строкаТаблицы.ЕдиницаИзмерения) <> Тип("Строка") Тогда
						ОшибкаЕИНеНайдена = Ложь;
						ОшибкаЕИНеТотКод = Ложь;
						МетодСервера(, "ПроверитьЕИ", строкаТаблицы.ЕдиницаИзмерения, строкаТаблицы.КодЕдиницыИзмерения, Новый СписокЗначений, ОшибкаЕИНеНайдена, ОшибкаЕИНеТотКод);
						Если ОшибкаЕИНеНайдена Тогда
							ЗаполненнаяСтруктураItems.UnitCode = "0000";
						Иначе
							ЗаполненнаяСтруктураItems.UnitCode = строкаТаблицы.КодЕдиницыИзмерения;
						КонецЕсли;
						ЗаполненнаяСтруктураItems.UnitName = Строка(строкаТаблицы.ЕдиницаИзмерения);
						ЗаполненнаяСтруктураItems.ЕдиницаИзмеренияССылка  = строкаТаблицы.ЕдиницаИзмерения;
					КонецЕсли;
					
					TotalNet = TotalNet + ?(ЗначениеЗаполнено(строкаТаблицы.Масса), строкаТаблицы.Масса, 0);
					Total 	 = Total + ЗаполненнаяСтруктураItems.Subtotal;
					Vat 	 = Vat + строкаТаблицы.СуммаНДС;
					TotalWithVatExcluded = TotalWithVatExcluded+ЗаполненнаяСтруктураItems.SubtotalWithVatExcluded;
					
					ТипДокументаИзШапки = МетодСервера(, "ТипДокументаУПД", ДанныеШапки.Функция);
					Если  ТипДокументаИзШапки = МетодСервера(, "ТипДокументаУПД", "СЧФДОП") 
					  ИЛИ ТипДокументаИзШапки = МетодСервера(, "ТипДокументаУПД", "СЧФ") Тогда
						Если ЗначениеЗаполнено(строкаТаблицы.СтранаПроисхождения) Или ЗначениеЗаполнено(строкаТаблицы.НомерГТД) И Не ПустаяСтрока(строкаТаблицы.НомерГТД.Код) Тогда
							ЗаполненнаяСтруктураГТД = СкопироватьСтруктуру(СтруктураГТД);
							ЗаполненнаяСтруктураГТД.CountryCode       = строкаТаблицы.СтранаПроисхождения.код;
							ЗаполненнаяСтруктураГТД.DeclarationNumber = ?(значениеЗаполнено(строкаТаблицы.НомерГТД), ?(типЗнч(строкаТаблицы.НомерГТД)=тип("Строка"), СокрЛП(строкаТаблицы.НомерГТД), сокрЛП(строкаТаблицы.НомерГТД.Код)), "");
							Если Не (Не ЗначениеЗаполнено(строкаТаблицы.НомерГТД) И МетодСервера(, "СтранаЧленТС", строкаТаблицы.СтранаПроисхождения.Код)) Тогда
								ЗаполненнаяСтруктураГТД.СтранаПроисхожденияСсылка = строкаТаблицы.СтранаПроисхождения;
							Иначе
								ЗаполненнаяСтруктураГТД.СтранаПроисхожденияСсылка = Справочники.СтраныМира.ПустаяСсылка();
							КонецЕсли;
							ЗаполненнаяСтруктураItems.CustomDeclarations.Добавить(ЗаполненнаяСтруктураГТД);
						КонецЕсли;
					КонецЕсли;
					
					Content.InvoiceTable.items.добавить(ЗаполненнаяСтруктураItems);
					
				КонецЦикла;
				content.InvoiceTable.TotalNet = TotalNet;
				content.InvoiceTable.Total 	  = Total;
				content.InvoiceTable.Vat 	  = Vat;
				content.InvoiceTable.TotalWithVatExcluded = TotalWithVatExcluded;
				
				content.TransferInfo.OperationInfo = "Товары переданы, работы сданы, услуги оказаны";
				ДанныеШапки.Свойство("СведенияОТранспортировкеИГрузе", content.TransferInfo.TransferTextInfo);
				
				СтруктураTransferBases = МетодСервера("Модуль_ИнтеграцияУниверсальный", "Новый_TransferBase");
								
				КоллекцияОснованияДляОтгрузки= СтруктурированноеПредставлениеОснования_УПД(ДокССылка, ТипДокумента);
				
				Если КоллекцияОснованияДляОтгрузки.Количество()>0 Тогда
										
					ДобавленоСтрок= 0;
										
					Для каждого ЭлементКоллекции из КоллекцияОснованияДляОтгрузки Цикл
						
						Если  ЗначениеЗаполнено(ЭлементКоллекции.DocumentDate)
							И ЗначениеЗаполнено(ЭлементКоллекции.DocumentName) Тогда
							
							ЗаполненнаяСтруктураTransferBases= СкопироватьСтруктуру(СтруктураTransferBases);
					
							ЗаполненнаяСтруктураTransferBases.DocumentName= 	ЭлементКоллекции.DocumentName;
							ЗаполненнаяСтруктураTransferBases.DocumentNumber=	ЭлементКоллекции.DocumentNumber;
							ЗаполненнаяСтруктураTransferBases.DocumentDate= 	ЭлементКоллекции.DocumentDate;
							ЗаполненнаяСтруктураTransferBases.DocumentInfo= 	ЭлементКоллекции.DocumentInfo;
																	
							content.TransferInfo.TransferBases.Добавить(ЗаполненнаяСтруктураTransferBases);
							
							ДобавленоСтрок= ДобавленоСтрок + 1;
						КонецЕсли;
						
					КонецЦикла;
										
					Если ДобавленоСтрок = 0 Тогда
						ЗаполненнаяСтруктураTransferBases= СкопироватьСтруктуру(СтруктураTransferBases);
						ЗаполненнаяСтруктураTransferBases.DocumentName= "Отсутствует";
						content.TransferInfo.TransferBases.Добавить(ЗаполненнаяСтруктураTransferBases);
					КонецЕсли;
										
				Иначе
					ЗаполненнаяСтруктураTransferBases= СкопироватьСтруктуру(СтруктураTransferBases);
					ЗаполненнаяСтруктураTransferBases.DocumentName= "Отсутствует";
					content.TransferInfo.TransferBases.Добавить(ЗаполненнаяСтруктураTransferBases);
				КонецЕсли;
											
			КонецПроцедуры
	
		//} Get UniversalTransferDocument content
		////////////////////////////////////////////////////////////////////////////////

	//} Get content
	////////////////////////////////////////////////////////////////////////////////
	
//} РАБОТА С КОНТЕНТОМ
////////////////////////////////////////////////////////////////////////////////
