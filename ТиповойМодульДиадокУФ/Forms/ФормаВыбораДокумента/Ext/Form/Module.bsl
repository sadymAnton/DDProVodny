&НаКлиенте
Перем Document Экспорт;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбновитьСписокДокументов()
	
	ТабДокументов.Очистить();
	
	Запрос= Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивКонтрагентов", МетодСервера(,"CounteragentBoxID_2_МассивКонтрагентов", Параметры.CounteragentBoxID));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ДатаНачала", 		ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 		КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("ТипКСФ",				Параметры.Type);
	
	Запрос.МенеджерВременныхТаблиц= Новый МенеджерВременныхТаблиц;

	Если Параметры.Режим = "Сопоставление" И (Параметры.Type = "Invoice" ИЛИ Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceRevision" ИЛИ Параметры.Type = "InvoiceCorrectionRevision"
	  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодСервера(, "ТипДокументаУПД", "СЧФ"))) Тогда
		
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			
			Если Метаданные.Документы.СчетФактураПолученный.ТабличныеЧасти.Найти("ВсегоПоДокументу") <> Неопределено Тогда
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.Дата КАК ДатаВходящегоДокумента,
				|	Т.Номер КАК НомерВходящегоДокумента
				|ПОМЕСТИТЬ ДанныеДокумента
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Т
				|ГДЕ
				|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДанныеДокумента.ДокументСсылка,
				|	СУММА(ВсегоПоДокументу.СуммаСНДС) КАК Сумма
				|ПОМЕСТИТЬ ИтогСумма
				|ИЗ
				|	ДанныеДокумента КАК ДанныеДокумента
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ВсегоПоДокументу КАК ВсегоПоДокументу
				|		ПО ДанныеДокумента.ДокументСсылка = ВсегоПоДокументу.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ДанныеДокумента.ДокументСсылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДанныеДокумента.Контрагент,
				|	ДанныеДокумента.Организация,
				|	ДанныеДокумента.ДокументСсылка,
				|	ДанныеДокумента.Дата,
				|	ДанныеДокумента.Номер,
				|	ДанныеДокумента.ДатаВходящегоДокумента,
				|	ДанныеДокумента.НомерВходящегоДокумента,
				|	ЕСТЬNULL(ИтогСумма.Сумма, 0) КАК Сумма,
				|	0 КАК СуммаУвеличение,
				|	0 КАК СуммаУменьшение
				|ПОМЕСТИТЬ ПодЗапрос
				|ИЗ
				|	ДанныеДокумента КАК ДанныеДокумента
				|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогСумма КАК ИтогСумма
				|		ПО ДанныеДокумента.ДокументСсылка = ИтогСумма.ДокументСсылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ДанныеДокумента
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ИтогСумма";
				
			Иначе 
				
				Запрос.Текст= 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.Дата КАК ДатаВходящегоДокумента,
				|	Т.Номер КАК НомерВходящегоДокумента
				|ПОМЕСТИТЬ ДанныеДокумента
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Т
				|ГДЕ
				|	(&ТипКСФ = ""Invoice"" ИЛИ &ТипКСФ = ""UniversalTransferDocument"")
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаСоставления,
				|	Т.Номер
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceCorrection""
				|	И Т.Корректировочный
				|	И НЕ Т.Исправление
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаСоставления,
				|	Т.Номер
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceRevision""
				|	И НЕ Т.Корректировочный
				|	И Т.Исправление
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаСоставления,
				|	Т.Номер
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceCorrectionRevision""
				|	И Т.Корректировочный
				|	И Т.Исправление
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ДанныеДокумента.ДокументСсылка,
				|	ДокументыОснования.ДокументОснование
				|ПОМЕСТИТЬ ДокументыОснования
				|ИЗ
				|	ДанныеДокумента КАК ДанныеДокумента
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
				|		ПО ДанныеДокумента.ДокументСсылка = ДокументыОснования.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование) КАК ДокументОснованиеТип
				|ИЗ
				|	ДокументыОснования КАК ДокументыОснования";
				
				Если Параметры.Direction = "Outbound" Тогда
					Запрос.Текст= стрЗаменить(Запрос.Текст, "СчетФактураПолученный", Объект.ПараметрыКлиентСервер.ПредставлениеДокументов.СчетФактураВыданный);
					Запрос.Текст= стрЗаменить(Запрос.Текст, "ДатаСоставления", "ДатаВыставления");
				КонецЕсли;
				
				ТекстВложенногоЗапроса= "";
				РезультатЗапроса= Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					
					Выборка= РезультатЗапроса.Выбрать();
					РезультатЗапроса= Неопределено;
					
					Пока Выборка.Следующий() Цикл
						
						МетаданныеДокумента= Метаданные.НайтиПоТипу(Выборка.ДокументОснованиеТип);
						
						Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено Тогда
							
							ТекстВложенногоЗапроса= ТекстВложенногоЗапроса + "
							|	
							|	ОБЪЕДИНИТЬ
							|	
							|ВЫБРАТЬ
							|	ДокументыОснования.ДокументСсылка,
							|	ДанныеДокументаОснования.СуммаДокумента
							|ИЗ
							|	ДокументыОснования КАК ДокументыОснования
							|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+МетаданныеДокумента.ПолноеИмя()+" КАК ДанныеДокументаОснования
							|		ПО ДокументыОснования.ДокументОснование = ДанныеДокументаОснования.Ссылка";
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	ВложенныйЗапрос.ДокументСсылка,
				|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
				|ПОМЕСТИТЬ ИтогСумма
				|ИЗ
				|	(ВЫБРАТЬ
				|		NULL КАК ДокументСсылка,
				|		0 КАК Сумма
				|	ГДЕ
				|		ЛОЖЬ "+ТекстВложенногоЗапроса+") КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.ДокументСсылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ДокументыОснования
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДанныеДокумента.Контрагент,
				|	ДанныеДокумента.Организация,
				|	ДанныеДокумента.ДокументСсылка,
				|	ДанныеДокумента.Дата,
				|	ДанныеДокумента.Номер,
				|	ДанныеДокумента.ДатаВходящегоДокумента,
				|	ДанныеДокумента.НомерВходящегоДокумента,
				|	ЕСТЬNULL(ИтогСумма.Сумма, 0) КАК Сумма,
				|	0 КАК СуммаУвеличение,
				|	0 КАК СуммаУменьшение
				|ПОМЕСТИТЬ ПодЗапрос
				|ИЗ
				|	ДанныеДокумента КАК ДанныеДокумента
				|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогСумма КАК ИтогСумма
				|		ПО ДанныеДокумента.ДокументСсылка = ИтогСумма.ДокументСсылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ДанныеДокумента
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ИтогСумма";
				
			КонецЕсли;
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
			
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент КАК Контрагент,
			|	Т.Организация КАК Организация,
			|	Т.Ссылка КАК ДокументСсылка,
			|	Т.Дата КАК Дата,
			|	Т.Номер КАК Номер,
			|	Т.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента КАК Сумма,
			|	Т.СуммаУвеличение,
			|	Т.СуммаУменьшение
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.СчетФактураПолученный КАК Т
			|ГДЕ
			|	(&ТипКСФ = ""Invoice"" ИЛИ &ТипКСФ = ""UniversalTransferDocument"")
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка.Контрагент,
			|	Т.Ссылка.Организация,
			|	Т.Ссылка,
			|	Т.Ссылка.Дата,
			|	Т.Ссылка.Номер,
			|	Т.Ссылка.ДатаВходящегоДокумента,
			|	Т.Ссылка.НомерВходящегоДокумента,
			|	Т.Ссылка.СуммаДокумента,
			|	Т.Ссылка.СуммаУвеличение,
			|	Т.Ссылка.СуммаУменьшение
			|ИЗ
			|	Документ.СчетФактураПолученный.ДокументыОснования КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceCorrection""
			|   И ТИПЗНАЧЕНИЯ(Т.ДокументОснование) = ТИП(Документ.КорректировкаПоступления)
			|	И Т.НомерИсправленияИсходногоДокумента = 0
			|	И Т.Ссылка.НомерИсправления = 0
			|	И Т.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Ссылка.Организация = &Организация
			|	И Т.Ссылка.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка.Контрагент,
			|	Т.Ссылка.Организация,
			|	Т.Ссылка,
			|	Т.Ссылка.Дата,
			|	Т.Ссылка.Номер,
			|	Т.Ссылка.ДатаВходящегоДокумента,
			|	Т.Ссылка.НомерВходящегоДокумента,
			|	Т.Ссылка.СуммаДокумента,
			|	Т.Ссылка.СуммаУвеличение,
			|	Т.Ссылка.СуммаУменьшение
			|ИЗ
			|	Документ.СчетФактураПолученный.ДокументыОснования КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceRevision""
			|   И ТИПЗНАЧЕНИЯ(Т.ДокументОснование) = ТИП(Документ.КорректировкаПоступления)
			|	И Т.НомерИсправленияИсходногоДокумента = 0
			|	И Т.Ссылка.НомерИсправления <> 0
			|	И Т.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Ссылка.Организация = &Организация
			|	И Т.Ссылка.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка.Контрагент,
			|	Т.Ссылка.Организация,
			|	Т.Ссылка,
			|	Т.Ссылка.Дата,
			|	Т.Ссылка.Номер,
			|	Т.Ссылка.ДатаВходящегоДокумента,
			|	Т.Ссылка.НомерВходящегоДокумента,
			|	Т.Ссылка.СуммаДокумента,
			|	Т.Ссылка.СуммаУвеличение,
			|	Т.Ссылка.СуммаУменьшение
			|ИЗ
			|	Документ.СчетФактураПолученный.ДокументыОснования КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceCorrectionRevision""
			|   И ТИПЗНАЧЕНИЯ(Т.ДокументОснование) = ТИП(Документ.КорректировкаПоступления)
			|	И Т.НомерИсправленияИсходногоДокумента <> 0
			|	И Т.Ссылка.НомерИсправления <> 0
			|	И Т.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Ссылка.Организация = &Организация
			|	И Т.Ссылка.Контрагент В(&МассивКонтрагентов)";
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда	
			
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент КАК Контрагент,
			|	Т.Организация КАК Организация,
			|	Т.Ссылка КАК ДокументСсылка,
			|	Т.Дата КАК Дата,
			|	Т.Номер КАК Номер,
			|	Т.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
			|	Т.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента КАК Сумма,
			|	0 КАК СуммаУвеличение,
			|	0 КАК СуммаУменьшение
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.СчетФактураПолученный КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)";
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УНФ16" Тогда
						
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент КАК Контрагент,
			|	Т.Организация КАК Организация,
			|	Т.Ссылка КАК ДокументСсылка,
			|	Т.Дата КАК Дата,
			|	Т.Номер КАК Номер,
			|	Т.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента КАК Сумма,
			|	0 КАК СуммаУвеличение,
			|	0 КАК СуммаУменьшение
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.СчетФактураПолученный КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)";
			
		КонецЕсли;
		
	Иначе
		
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент КАК Контрагент,
			|	Т.Организация КАК Организация,
			|	Т.Ссылка КАК ДокументСсылка,
			|	Т.Дата КАК Дата,
			|	Т.Номер КАК Номер,
			|	Т.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента КАК Сумма
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	"""",
			|	"""",
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.ПоступлениеУслугПрочихАктивов КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.КорректировкаПоступления КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceCorrection""
			|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.КорректировкаПоступления КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceRevision""
			|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)";
			
			Если Метаданные.Документы.КорректировкаПоступления.Реквизиты.Найти("ХозяйственнаяОперация") = Неопределено Тогда
				Запрос.Текст= СтрЗаменить(Запрос.Текст,
										  "Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)",
										  "Т.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)");
				Запрос.Текст= СтрЗаменить(Запрос.Текст,
										  "Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)",
										  "Т.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)");
			КонецЕсли;
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
			
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент КАК Контрагент,
			|	Т.Организация КАК Организация,
			|	Т.Ссылка КАК ДокументСсылка,
			|	Т.Дата КАК Дата,
			|	Т.Номер КАК Номер,
			|	Т.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента КАК Сумма
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	"""",
			|	"""",
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.ПоступлениеДопРасходов КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	"""",
			|	"""",
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.СписаниеСРасчетногоСчета КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.КорректировкаПоступления КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceCorrection""
			|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.КорректировкаПоступления КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceRevision""
			|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
			|	И НЕ ТИПЗНАЧЕНИЯ(Т.ДокументПоступления) = ТИП(Документ.КорректировкаПоступления)
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Контрагент,
			|	Т.Организация,
			|	Т.Ссылка,
			|	Т.Дата,
			|	Т.Номер,
			|	Т.ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента,
			|	Т.СуммаДокумента
			|ИЗ
			|	Документ.КорректировкаПоступления КАК Т
			|ГДЕ
			|	&ТипКСФ = ""InvoiceCorrectionRevision""
			|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
			|	И ТИПЗНАЧЕНИЯ(Т.ДокументПоступления) = ТИП(Документ.КорректировкаПоступления)
			|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)";
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
			
			Если Параметры.Type = "XmlAcceptanceCertificate" Тогда
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
				|	Т.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
				|	Т.СуммаДокумента КАК Сумма
				|ПОМЕСТИТЬ ПодЗапрос
				|ИЗ
				|	Документ.ПоступлениеУслугРабот КАК Т
				|ГДЕ
				|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)";
				
			Иначе
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
				|	Т.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
				|	Т.СуммаДокумента КАК Сумма
				|ПОМЕСТИТЬ ПодЗапрос
				|ИЗ
				|	Документ.ПоступлениеМЗ КАК Т
				|ГДЕ
				|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаПервичногоДокумента,
				|	Т.НомерПервичногоДокумента,
				|	Т.СуммаДокумента
				|ИЗ
				|	Документ.ПоступлениеОС КАК Т
				|ГДЕ
				|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)";
				
			КонецЕсли;
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УНФ16" Тогда
			
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Т.Контрагент 				КАК Контрагент,
			|	Т.Организация 				КАК Организация,
			|	Т.Ссылка 					КАК ДокументСсылка,
			|	Т.Дата 						КАК Дата,
			|	Т.Номер 					КАК Номер,
			|	Т.ДатаВходящегоДокумента 	КАК ДатаВходящегоДокумента,
			|	Т.НомерВходящегоДокумента 	КАК НомерВходящегоДокумента,
			|	Т.СуммаДокумента 			КАК Сумма
			|ПОМЕСТИТЬ ПодЗапрос
			|ИЗ
			|	Документ.ПриходнаяНакладная КАК Т
			|ГДЕ
			|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И Т.Организация = &Организация
			|	И Т.Контрагент В(&МассивКонтрагентов)";
			
			Если НЕ Метаданные.Документы.Найти("КорректировкаПоступления") = Неопределено Тогда
				Запрос.Текст= Запрос.Текст + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаВходящегоДокумента,
				|	Т.НомерВходящегоДокумента,
				|	Т.СуммаДокумента
				|ИЗ
				|	Документ.КорректировкаПоступления КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceCorrection""
				|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаВходящегоДокумента,
				|	Т.НомерВходящегоДокумента,
				|	Т.СуммаДокумента
				|ИЗ
				|	Документ.КорректировкаПоступления КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceRevision""
				|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
				|	И НЕ ТИПЗНАЧЕНИЯ(Т.ДокументОснование) = ТИП(Документ.КорректировкаПоступления)
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.ДатаВходящегоДокумента,
				|	Т.НомерВходящегоДокумента,
				|	Т.СуммаДокумента
				|ИЗ
				|	Документ.КорректировкаПоступления КАК Т
				|ГДЕ
				|	&ТипКСФ = ""InvoiceCorrectionRevision""
				|	И Т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
				|	И ТИПЗНАЧЕНИЯ(Т.ДокументОснование) = ТИП(Документ.КорректировкаПоступления)
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Организация = &Организация
				|	И Т.Контрагент В(&МассивКонтрагентов)";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Direction = "Outbound" Тогда
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УНФ16" Тогда
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураПолученный"		, "СчетФактура");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "ПриходнаяНакладная"		, "РасходнаяНакладная");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "КорректировкаПоступления"	, "КорректировкаРеализации");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.ДатаВходящегоДокумента"	, "Т.Дата");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.НомерВходящегоДокумента"	, "Т.Номер");
		Иначе
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураПолученный"		, "СчетФактураВыданный");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг"	, "РеализацияТоваровУслуг");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "ПоступлениеМЗ"				, "НакладнаяНаРеализациюТорг12");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.ДатаВходящегоДокумента"	, "Т.Дата");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.НомерВходящегоДокумента"	, "Т.Номер");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.Ссылка.ДатаВходящегоДокумента" , "Т.Ссылка.Дата");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.Ссылка.НомерВходящегоДокумента", "Т.Ссылка.Номер");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.ДатаПервичногоДокумента"	, "Т.Дата");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "Т.НомерПервичногоДокумента", "Т.Номер");
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "ВозвратТоваровОтПокупателя", "ВозвратТоваровПоставщику");
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Параметры.Очистить();
	
	Запрос.Текст=	
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодЗапрос.ДокументСсылка
		|ПОМЕСТИТЬ ЕстьОснование
		|ИЗ
		|	ПодЗапрос КАК ПодЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ДокиОснования
		|		ПО ПодЗапрос.ДокументСсылка = ДокиОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодЗапрос.*,
		|	ВЫБОР
		|		КОГДА ЕстьОснование.ДокументСсылка ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОснование,
		|	ДополнительныеСведения.Значение КАК ЗначениеСвойства
		|ИЗ
		|	ПодЗапрос КАК ПодЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьОснование КАК ЕстьОснование
		|		ПО ПодЗапрос.ДокументСсылка = ЕстьОснование.ДокументСсылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|		ПО ПодЗапрос.ДокументСсылка = ДополнительныеСведения.Объект
		|			И (ДополнительныеСведения.Свойство.Наименование = &НаименованиеСвойства)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПодЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЕстьОснование";
	
	Запрос.УстановитьПараметр("НаименованиеСвойства", МетодСервера(,"ИдентификаторСвойстваИдентификаторДокументаВДиадок"));
	
	Если Параметры.Direction = "Inbound" Тогда
		
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УНФ16" Тогда
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураПолученный.ДокументыОснования", "СчетФактураПолученный");
		КонецЕсли;
		
	ИначеЕсли Параметры.Direction = "Outbound" Тогда
		
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УНФ16" Тогда
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураПолученный" , "СчетФактура");
		Иначе
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураПолученный" , "СчетФактураВыданный");
		КонецЕсли;
				
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураВыданный.ДокументыОснования" , "СчетФактураВыданный");
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			Запрос.Текст= СтрЗаменить(Запрос.Текст, "СчетФактураВыданный.ДокументыОснования", "СчетФактураВыданный");
		КонецЕсли;
		
	КонецЕсли;
	
	Выборка= Запрос.Выполнить().Выбрать();
	Запрос.МенеджерВременныхТаблиц.Закрыть(); Запрос= Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока= ТабДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Параметры.Режим = "Сопоставление" И (Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceCorrectionRevision") Тогда
			
			Если Выборка.СуммаУвеличение > 0 ИЛИ Выборка.СуммаУменьшение > 0 Тогда
				
				СуммаСтрокой= "";
				Разделитель=  "";
				
				Если Выборка.СуммаУвеличение > 0 Тогда
					СуммаСтрокой= "+" + Выборка.СуммаУвеличение;
					Разделитель= " ";
				КонецЕсли;
				
				Если Выборка.СуммаУменьшение > 0 Тогда
					СуммаСтрокой= СуммаСтрокой + Разделитель + "-" + Выборка.СуммаУменьшение;
				КонецЕсли;
				
				НоваяСтрока.Сумма= СуммаСтрокой;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	Организация=	МетодСервера(,"BoxID_2_Организация", Параметры.BoxID);
	Контрагент=		МетодСервера(,"CounteragentBoxID_2_Контрагент", Параметры.CounteragentBoxID);
	
	ДатаНачала=		НачалоДня(Параметры.DocumentDate);
	ДатаОкончания=	КонецДня(Параметры.DocumentDate);
	
	Параметры.Свойство("Total",    СуммаДокумента);
	Параметры.Свойство("TotalInc", СуммаУвеличение);
	Параметры.Свойство("TotalDec", СуммаУменьшение);
	
	СкрытьВозможностьСоздаватьДокумент= Неопределено;
	Параметры.Свойство("СкрытьВозможностьСоздаватьДокумент", СкрытьВозможностьСоздаватьДокумент); 
	
	ОбновитьСписокДокументов();
	
	АвтоЗаголовок=	Ложь;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		Если Параметры.Type = "Invoice" ИЛИ Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceRevision" ИЛИ Параметры.Type = "InvoiceCorrectionRevision"
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодСервера(, "ТипДокументаУПД", "СЧФ")) Тогда
			Заголовок=											"Укажите документ, который нужно сопоставить со счетом-фактурой";
			Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=	"Ввести новую счет-фактуру в 1С";
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" 
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодСервера(, "ТипДокументаУПД", "ДОП")) Тогда
			Заголовок=											"Укажите документ, который нужно сопоставить с накладной";
			Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=	"Ввести новую накладную в 1С";
		КонецЕсли;
		
		Если СкрытьВозможностьСоздаватьДокумент = Истина Тогда
			Элементы.НадписьВвестиНовыйДокумент1С.Видимость= 	Ложь;
			Элементы.Декорация2.Видимость= 						Ложь;
		КонецЕсли;
		
		Элементы.КнопкаДействия.Заголовок=	"Сопоставить";
		
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		
		Заголовок= "Выбор документа основания";
		Если Параметры.Type = "Invoice" ИЛИ Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceRevision" ИЛИ Параметры.Type = "InvoiceCorrectionRevision"
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодСервера(, "ТипДокументаУПД", "СЧФ")) Тогда
			Заголовок=		"Выберите основание для счета-фактуры";
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" 
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодСервера(, "ТипДокументаУПД", "ДОП")) Тогда
			Заголовок=		"Выберите основание для накладной";
		КонецЕсли;
		
		Элементы.КнопкаДействия.Заголовок=								"Выбрать основания";
		Элементы.ТаблицаДокументовПометка.Видимость=					Истина;
		Элементы.ТаблицаДокументовСнятьУстановитьПометки.Видимость=		Истина;
		Элементы.ТаблицаДокументовСнятьУстановитьПометки.Доступность=	Истина;
		Элементы.Декорация2.Картинка=									БиблиотекаКартинок.Сортировка;
		Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=				"Сопоставить с документом 1С";
		
	КонецЕсли;
	
	ПараметрРежимДляУО=	Параметры.Режим;
	
	Если Параметры.Direction = "Outbound" Тогда
		Элементы.ТаблицаДокументовНомерВходящегоДокумента.Видимость= Ложь;
		Элементы.ТаблицаДокументовДатаВходящегоДокумента.Видимость=  Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовок()
	
	ШапкаЗаголовка=	"";
	Если Лев(Параметры.Type, 7) = "Invoice" Тогда
		Если Параметры.Режим = "Сопоставление" Тогда
			ШапкаЗаголовка=	"Счета-фактуры организации";
		ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
			ШапкаЗаголовка=	"Накладные организации";
		КонецЕсли;
	ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" Тогда
		ШапкаЗаголовка=	"Накладные организации";
	КонецЕсли;

	ПредставлениеПериода= 				МетодКлиента("Модуль_Клиент", "ПредставлениеПериодаДД", ДатаНачала, ДатаОкончания);
	Элементы.НадписьОтбор.Заголовок=	ШапкаЗаголовка + " " + СокрЛП(Организация) + " по контрагенту " + СокрЛП(Контрагент)
										+ ?(ЗначениеЗаполнено(ПредставлениеПериода), "(" + ПредставлениеПериода + ")", ПредставлениеПериода);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	ОбновитьЗаголовок();
	УправлениеВидимостью();
	
	УстановитьТекущуюСтрокуТаблицыДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()
	
	//Если Лев(Параметры.Type, 7) = "Invoice"
	//	И НЕ Параметры.Type = "Invoice" Тогда
	//	Элементы.Декорация2.Видимость=						Ложь;
	//	Элементы.Декорация2.Доступность=					Ложь;
	//	Элементы.НадписьВвестиНовыйДокумент1С.Доступность=	Ложь;
	//	Элементы.НадписьВвестиНовыйДокумент1С.Доступность=	Ложь;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Параметры.Режим = "Сопоставление" Тогда
		ОбработатьДействиеФормы();
	Иначе
		ОткрытьДокумент1С();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("ДатаНачала"   , ДатаНачала);
	ПараметрыФормы.Вставить("ДатаОкончания", ДатаОкончания);
	
	МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыбораИнтервала", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораИнтервала");

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОткрытиеФормыВыбораИнтервала(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда 
		
		Если НЕ НачалоДня(РезультатЗакрытия.ДатаНачала) = НачалоДня(ДатаНачала)
			ИЛИ НЕ НачалоДня(РезультатЗакрытия.ДатаОкончания) = НачалоДня(ДатаОкончания) Тогда
			
			ДатаНачала=		РезультатЗакрытия.ДатаНачала;
			ДатаОкончания=	РезультатЗакрытия.ДатаОкончания;
			
			ОбновитьСписокДокументов();
			
		КонецЕсли;
		
		ОбновитьЗаголовок();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеДокумента(ДокументСсылка, DocumentDate, DocumentNumber)

	Возврат МетодСервера(,"ОбновитьДанныеДокумента", ДокументСсылка, DocumentDate, DocumentNumber);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьДействиеФормы()
	
	ТекДанные= Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ПоказатьПредупреждение(, "Выберите документ", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		Если НЕ ПустаяСтрока(ТекДанные.ЗначениеСвойства) Тогда
			ПоказатьПредупреждение(, "Данный документ сопоставлен с документом в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж, 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		
		ДокСсылка=	ТекДанные.ДокументСсылка;

		СписокРазличающихсяРеквизитов = МетодСервера(, "ПолучитьСписокРазличающихсяРеквизитов", ДокСсылка, Параметры.DocumentNumber, Параметры.DocumentDate);

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументСсылка", 	ДокСсылка);
		ДополнительныеПараметры.Вставить("DocumentNumber", 	Параметры.DocumentNumber);
		ДополнительныеПараметры.Вставить("DocumentDate", 	Параметры.DocumentDate);
		ДополнительныеПараметры.Вставить("СписокРазличающихсяРеквизитов", СписокРазличающихсяРеквизитов);
		
		Если ЗначениеЗаполнено(СписокРазличающихсяРеквизитов) Тогда
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтаФорма, ДополнительныеПараметры),
							"Следующие реквизиты: "+СписокРазличающихсяРеквизитов+"
							|отличаются в электронном документе и документе 1С.
							|Обновить данные в документе 1С?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
						
		Иначе 
			Параметры.Документ1С = ДокСсылка;
			ЭтаФорма.Закрыть(Параметры);
		КонецЕсли;
							
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		
		Для Каждого СтрокаТаблицы Из ТабДокументов Цикл
			Если СтрокаТаблицы.Пометка И НЕ СтрокаТаблицы.ЕстьОснование Тогда
				Параметры.СписокСсылокРНК.Добавить(СтрокаТаблицы.ДокументСсылка);
			КонецЕсли;
		КонецЦикла;
		
		ЭтаФорма.Закрыть(Параметры);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(РезультатЗапроса, ДополнительныеПараметры) Экспорт
	
	ДокСсылка = ДополнительныеПараметры.ДокументСсылка;
	
	Если РезультатЗапроса = КодВозвратаДиалога.Да Тогда
						
		Параметры.Документ1С = ДокСсылка;
		ЭтаФорма.Закрыть(Параметры);
			
	КонецЕсли;
	
КонецПроцедуры

//&НаСервере
//Функция ПолучитьСписокРазличающихсяРеквизитов(ДокументСсылка, DocumentNumber, DocumentDate) Экспорт
//	
//	ВидДокумента= МетодСервера(,"ИмяТипаОбъекта", ДокументСсылка);
//	
//	Если 	ВидДокумента = "ПоступлениеТоваровУслуг"
//		ИЛИ ВидДокумента = "ПоступлениеДопРасходов"
//		ИЛИ ВидДокумента = "ПоступлениеУслугПрочихАктивов"
//	Тогда
//	
//		ИмяПоляДатаВходящегоДокумента=  "ДатаВходящегоДокумента";
//		ИмяПоляНомерВходящегоДокумента= "НомерВходящегоДокумента";
//		
//	ИначеЕсли 	ВидДокумента = "ПоступлениеМЗ" 
//			ИЛИ ВидДокумента = "ПоступлениеУслугРабот"
//			ИЛИ ВидДокумента = "ПоступлениеОС"
//	Тогда
//		
//		ИмяПоляДатаВходящегоДокумента=  "ДатаПервичногоДокумента";
//		ИмяПоляНомерВходящегоДокумента= "НомерПервичногоДокумента";
//		
//	ИначеЕсли ВидДокумента = "СчетФактураПолученный" Тогда
//		
//		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
//			ИмяПоляДатаВходящегоДокумента=  "Дата";
//			ИмяПоляНомерВходящегоДокумента= "Номер";
//		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
//			ИмяПоляДатаВходящегоДокумента=  "ДатаВходящегоДокумента";
//			ИмяПоляНомерВходящегоДокумента= "НомерВходящегоДокумента";
//		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
//			ИмяПоляДатаВходящегоДокумента=  "ДатаПервичногоДокумента";
//			ИмяПоляНомерВходящегоДокумента= "НомерПервичногоДокумента";
//		КонецЕсли;
//		
//	КонецЕсли;
//	
//	Результат=   "";
//	Разделитель= "";
//	
//	Если ИмяПоляДатаВходящегоДокумента <> Неопределено Тогда
//		Если НачалоДня(ДокументСсылка[ИмяПоляДатаВходящегоДокумента]) <> НачалоДня(DocumentDate) Тогда
//			Результат= Результат + Разделитель + """Дата входящего документа""";
//			Разделитель= ", ";
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если ИмяПоляНомерВходящегоДокумента <> Неопределено Тогда
//		Если СокрЛП(ДокументСсылка[ИмяПоляНомерВходящегоДокумента]) <> СокрЛП(DocumentNumber) Тогда
//			Результат = Результат + Разделитель + """Номер входящего документа""";				
//			Разделитель= ", ";
//		КонецЕсли;
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции	

&НаКлиенте
Процедура ОткрытьДокумент1С()

	ТекущиеДанные=	Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МетодКлиента(,"ОткрытьФормуОбъектаИБ", ТекущиеДанные.ДокументСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	ОткрытьДокумент1С();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеФормы(Команда)
	
	ОбработатьДействиеФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкуПользователя(Наименование, Значение)
	
	МетодСервера(,"УстановитьНастройкуПользователя", Наименование, Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВвестиНовыйДокумент1СНажатие(Элемент)
	
	Если Параметры.Режим = "Сопоставление" Тогда
		Если Параметры.Type = "Invoice" ИЛИ Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceRevision" ИЛИ Параметры.Type = "InvoiceCorrectionRevision" 
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодКлиента("Модуль_Клиент", "ТипДокументаУПД", "СЧФ")) Тогда
			УстановитьНастройкуПользователя("ДиадокСоздаватьСопоставлятьСчетаФактуры", "Создавать");
			Параметры.Режим=	"ВводСВыборомОснований";
			Закрыть(Параметры);
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" 
		  ИЛИ (Параметры.Type = "UniversalTransferDocument" И Параметры.Function = МетодКлиента("Модуль_Клиент", "ТипДокументаУПД", "ДОП")) Тогда
			Параметры.Режим=	"Ввод";
			Закрыть(Параметры);
		КонецЕсли;
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		Параметры.Режим=	"Сопоставление";
		Закрыть(Параметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Если Параметры.Режим = "Сопоставление" И ЗначениеЗаполнено(Элементы.ТаблицаДокументов.ТекущиеДанные.ЗначениеСвойства) Тогда
			Элементы.ДекорацияНадписьСопоставлен.Заголовок=	"Данный документ сопоставлен с документом в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж;
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Истина;
		ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" И Элементы.ТаблицаДокументов.ТекущиеДанные.ЕстьОснование Тогда
			Элементы.ДекорацияНадписьСопоставлен.Заголовок=	"На основании данного документа уже есть Счет-Фактура";
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Истина;
		Иначе
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Ложь;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкуИЗаголовокКнопкиПометки(Пометка)
	
	Если Пометка Тогда
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.УстановитьФлажки;
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Заголовок=	"Снять пометку со всех документов";
	Иначе
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.СнятьФлажки;
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Заголовок=	"Пометить все документы";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПометки(СбросПометок = Ложь)
	
	Если Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.СнятьФлажки 
		И НЕ СбросПометок Тогда
		УстановитьКартинкуИЗаголовокКнопкиПометки(Истина);
		СнятьУстановитьПометки(Истина);
	Иначе
		УстановитьКартинкуИЗаголовокКнопкиПометки(Ложь);
		СнятьУстановитьПометки(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьУстановитьПометки(Пометка)
	
	Для Каждого СтрокаСпискаДокументов Из ТабДокументов Цикл
		Если Пометка Тогда
			Если НЕ СтрокаСпискаДокументов.ЕстьОснование Тогда
				СтрокаСпискаДокументов.Пометка=	Пометка;
			КонецЕсли;
		Иначе
			СтрокаСпискаДокументов.Пометка=	Пометка;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СнятьУстановитьПометкиКоманда(Команда)
	
	ОбработатьПометки();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПометкиДокументов()
	
	СтруктураИзменений=	Новый Структура;
	СтруктураИзменений.Вставить("НужноМенять", Ложь);
	СтруктураИзменений.Вставить("Вкл", Ложь);
	
	ТабДанные=	ТабДокументов.Выгрузить(, "Пометка");
	ТабДанные.Свернуть("Пометка");
	
	Если ТабДанные.Количество() = 1 Тогда
		СтруктураИзменений.Вставить("НужноМенять", Истина);
		СтрокаТаблицы=	ТабДанные.Получить(0);
		СтруктураИзменений.Вставить("Пометка", СтрокаТаблицы.Пометка);
	КонецЕсли;
	
	Возврат СтруктураИзменений;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаДокументовПометкаПриИзменении(Элемент)
	
	СтруктураИзменений=	ПроверитьПометкиДокументов();
	
	Если СтруктураИзменений.НужноМенять Тогда
		УстановитьКартинкуИЗаголовокКнопкиПометки(СтруктураИзменений.Пометка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные.ЕстьОснование Тогда
		ПоказатьПредупреждение(, "На основании данного документа уже есть Счет-Фактура!", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Отказ=	Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписокДокументов();
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтрокуТаблицыДокументов()
	
	Перем СтруктураОтбора;
	
	Если Параметры.Режим <> "Сопоставление" Тогда
		Возврат;
	КонецЕсли;
	
	Если 	Параметры.Type = "XmlTorg12" 
		ИЛИ Параметры.Type = "XmlAcceptanceCertificate"
		ИЛИ Параметры.Type = "Invoice" Тогда
		
		СтруктураОтбора= Новый Структура("Сумма", СуммаДокумента); 
		
	ИначеЕсли Параметры.Type = "InvoiceCorrection" ИЛИ Параметры.Type = "InvoiceCorrectionRevision" Тогда
		
		СтруктураОтбора= Новый Структура("СуммаУвеличение, СуммаУменьшение", СуммаУвеличение, СуммаУменьшение);
		
	КонецЕсли;
	
	Если СтруктураОтбора <> Неопределено Тогда
		
		НайденныеСтроки= ТабДокументов.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ТаблицаДокументов.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
