
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	СписокВПФ = Параметры.МассивВнешнихПечатныхФорм;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	Для каждого ЭлементСписка из СписокВПФ Цикл
		НоваяСтрока = ТаблицаВПФ.Добавить();
		НоваяСтрока.ВнешняяПечатнаяФорма 				= ЭлементСписка.Значение;
		НоваяСтрока.ВнешняяПечатнаяФормаНаименование 	= ЭлементСписка.Представление;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

//{ Команды

&НаКлиенте
Процедура ДобавитьДополнительнуюВнешнююПечатнуюФорму(Команда)
	
	СписокВПФСервер = ПолучитьСписокДополнительныхВнешнихПечатныхФорм();
	
	УсловиеОтбора 	= Новый Структура;
	УсловиеОтбора.Вставить("Ссылка", СписокВПФСервер);
	
	ПараметрыФормы 	= Новый Структура("Отбор", УсловиеОтбора);
	
	ОткрытьФормуОбъектаМодально("Справочник.ДополнительныеОтчетыИОбработки.ФормаВыбора", ПараметрыФормы, "ОбработчикОткрытияФормыВыбораВПФ");
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДополнительнуюВнешнююПечатнуюФорму(Команда)
	
	Если Элементы.ТаблицаВПФ.ТекущаяСтрока <> Неопределено Тогда
		УдалитьСтроку(Элементы.ТаблицаВПФ.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(Идентификатор)
	
	ТекущаяСтрока = ТаблицаВПФ.НайтиПоИдентификатору(Идентификатор);
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		ТаблицаВПФ.Удалить(ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	СписокВПФ.Очистить();
	
	Для каждого СтрокаТаблицыВПФ из ТаблицаВПФ Цикл
		СписокВПФ.Добавить(СтрокаТаблицыВПФ.ВнешняяПечатнаяФорма, СтрокаТаблицыВПФ.ВнешняяПечатнаяФормаНаименование);
	КонецЦикла;
	
	Закрыть(СписокВПФ);
	
КонецПроцедуры

//} Команды

&НаСервере
Функция ПолучитьСписокДополнительныхВнешнихПечатныхФорм()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
       |	ДополнительныеОтчетыИОбработки.Ссылка
       |ИЗ
       |	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
       |ГДЕ
       |	ДополнительныеОтчетыИОбработки.ПометкаУдаления = ЛОЖЬ
       |	И ДополнительныеОтчетыИОбработки.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма)";
	   
	   
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	МассивСсылок = РезультатЗапроса.ВыгрузитьКолонку("Ссылка");
	
	СписокСсылок = Новый СписокЗначений;
	СписокСсылок.ЗагрузитьЗначения(МассивСсылок);
	
	Возврат СписокСсылок;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОткрытияФормыВыбораВПФ(РезультатЗакрытия, ТекущиеДанные) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда
		НоваяСтрока = ТаблицаВПФ.Добавить();
		НоваяСтрока.ВнешняяПечатнаяФорма = РезультатЗакрытия;
		НоваяСтрока.ВнешняяпечатнаяФормаНаименование = ПолучитьНаименованиеВнешнейПечатнойФормы(РезультатЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНаименованиеВнешнейПечатнойФормы(ВнешняяПечатнаяФорма)
	
	Если НЕ ВнешняяПечатнаяФорма.Наименование = Неопределено Тогда
		Возврат ВнешняяПечатнаяФорма.Наименование;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено)
		
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика = ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика = Неопределено;
	Иначе	
		ОписаниеОбработчика = Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика);
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры




