
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьСписки()
	
	Элементы.СпособФормированияПечатнойФормы.СписокВыбора.Очистить();
	
	Если Параметры.ТипДокумента = "Акт" Тогда
		ЭтаФорма.Заголовок=	"Акт выполненных работ";
		Элементы.ГруппаСчет.Видимость=	Ложь;
		Элементы.СпособФормированияПечатнойФормы.СписокВыбора.Вставить(0, 0, "Использовать форму рекомендованную ФНС");
	ИначеЕсли Параметры.ТипДокумента = "АктСверки" Тогда
		Элементы.СпособФормированияПечатнойФормы.СписокВыбора.Вставить(0, 0, "Использовать стандартную форму");
		Элементы.ГруппаСчет.Видимость=	Ложь;
		ЭтаФорма.Заголовок=	"Акт сверки";
	Иначе
		Элементы.СпособФормированияПечатнойФормы.СписокВыбора.Вставить(0, 0, "Использовать стандартную форму");
		ЭтаФорма.Заголовок=	"Счет на оплату";
	КонецЕсли;
	
	Элементы.СпособФормированияПечатнойФормы.СписокВыбора.Вставить(1, 1, "Использовать внешнюю печатную форму");
	
	Для каждого ЭлементСписка Из СписокФормироватьСчетНаОсновании Цикл
		Элементы.ФормироватьСчетНаОсновании.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	
	Если СпособФормированияПечатнойФормы = 0 Тогда
		Элементы.ВнешняяПечатнаяФорма.Доступность=	Ложь;
	Иначе
		Элементы.ВнешняяПечатнаяФорма.Доступность=	Истина;
	КонецЕсли;
	
	МассивТипов=	Новый Массив();
	Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
	ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
	ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
	КонецЕсли;
	
	Если МассивТипов.Количество() > 0 Тогда
		ОписаниеТипов=	Новый ОписаниеТипов(МассивТипов,,);
		Элементы.ВнешняяПечатнаяФорма.ОграничениеТипа=	ОписаниеТипов;
		Элементы.ВнешняяПечатнаяФорма.ВыбиратьТип=		Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	Если НЕ ЗначениеЗаполнено(ВнешняяПечатнаяФорма) Тогда
		СпособФормированияПечатнойФормы=	0;
	Иначе
		СпособФормированияПечатнойФормы=	1;
	КонецЕсли;
	
	ЗаполнитьСписки();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	Если СпособФормированияПечатнойФормы = 1 Тогда
		Если НЕ ЗначениеЗаполнено(ВнешняяПечатнаяФорма) Тогда
			СообщениеПользователю=			Новый СообщениеПользователю;
			СообщениеПользователю.Текст=	"Необходимо выбрать внешнюю печатную форму!";
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли;
	Иначе
		ВнешняяПечатнаяФорма=	Неопределено;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Параметры, ЭтаФорма);
	Параметры.Ок=	Истина;
	Закрыть(Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидФормыПриИзменении(Элемент)
	УправлениеФормой()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	СпособФормированияПечатнойФормы=	Параметры.СпособФормированияПечатнойФормы;
	ВнешняяПечатнаяФорма=				Параметры.ВнешняяПечатнаяФорма;
	ФормироватьСчетНаОсновании=			Параметры.ФормироватьСчетНаОсновании;
	СписокФормироватьСчетНаОсновании=	Параметры.СписокФормироватьСчетНаОсновании;
	
КонецПроцедуры
