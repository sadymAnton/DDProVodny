
&НаКлиенте
перем ТаблицаДанныхОрганизаций;
&НаКлиенте
Перем МассивДобавленныхIdBox;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция СвернутьМассивСтруктур(МассивСтруктур, СтруктураКлючей)
	ТЗ = Новый ТаблицаЗначений;
	СтрокаКлючей = "";
	Для Каждого Стр из СтруктураКлючей Цикл
		ТЗ.Колонки.Добавить(Стр.Ключ);
		СтрокаКлючей =  СтрокаКлючей + ?(СтрокаКлючей = "", "", ",") +Стр.Ключ;
	КонецЦикла;
	
	Для Каждого СтрМас из МассивСтруктур цикл
		 СТр = ТЗ.Добавить();
		 ЗаполнитьЗначенияСвойств(Стр,СтрМас,СтрокаКлючей);
	КонецЦикла;
	
	ТЗ.Свернуть(СтрокаКлючей);
	
	Результат = Новый Массив;
	Для Каждого Стр Из ТЗ Цикл
		Структ = Новый Структура(СтрокаКлючей);
		
		ЗаполнитьЗначенияСвойств(Структ, Стр);
		Результат.Добавить(Структ);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокиВМассивеСтруктур(МассивСтруктур, ПараметрыОтбора)
	Результат = Новый Массив;
	Для Каждого Стр из МассивСтруктур Цикл
		БылоНесоответствие = Ложь;
		Для Каждого Стр1 из ПараметрыОтбора Цикл
			Если ПараметрыОтбора[Стр1.Ключ] <>  Стр[Стр1.Ключ] Тогда
				БылоНесоответствие = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если БылоНесоответствие = Ложь Тогда
			 Результат.Добавить(Стр);
		КонецЕсли;
		
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьТаблицуЗначенийВМассивСтруктур(ТаблЗнач)
	Результат = Новый Массив;
	СтрокаКлючей = "";
	Для Каждого Колонка из ТаблЗнач.Колонки Цикл
		СтрокаКлючей = СтрокаКлючей +?(ПустаяСтрока(СтрокаКлючей),"",",")+ Колонка.Имя;
	КонецЦикла;                                                        
	Если ТипЗнч(ТаблЗнач) = Тип("ТаблицаЗначений") тогда
		
		Для Каждого Стр Из ТаблЗнач Цикл
			ЭлементСписка = Новый  Структура(СтрокаКлючей);
			ЗаполнитьЗначенияСвойств(ЭлементСписка,Стр);
			Результат.Добавить(ЭлементСписка);             
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	МассивДобавленныхIdBox= Параметры.СписокДобавленныхIdBox.ВыгрузитьЗначения();

	УстановитьНаименованиеСистемы();
	
	ЗаполнитьТаблицуОрганизацийДиадок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
процедура ВывестиПредупреждение(текстПред)
	Элементы.СписокОрганизаций.Видимость = ложь;
КонецПроцедуры	

&НаСервере
Функция ПолучитьСвязаннуюОрганизацию(BoxID, DepartmentKpp = "")
	
	Возврат МетодСервера(,"BoxID_2_Организация", BoxID, DepartmentKpp);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСтрокуДерева(СтрокаДерева, Organization, Department)
	
	СтрокаДерева.OrganizationId=	Organization.Id;
	СтрокаДерева.ИНН=				Organization.Inn;
	Если Department = Неопределено Тогда
		СтрокаДерева.Name=			Organization.Name;
		СтрокаДерева.DepartmentKpp=	Organization.Kpp;
		СтрокаДерева.КПП=			Organization.Kpp;
		СтрокаДерева.Наименование=	Organization.Name + ", " + СокрЛП(Organization.Inn) + ?(Organization.Kpp = "", "", "/" + СокрЛП(Organization.Kpp));
		СтрокаДерева.Организация=	ПолучитьСвязаннуюОрганизацию(Organization.Id);
	Иначе
		СтрокаДерева.Name=			Department.Name;
		СтрокаДерева.DepartmentKpp=	Department.Kpp;
		СтрокаДерева.КПП=			Department.Kpp;
		СтрокаДерева.Наименование=	Department.Name + ", " + СокрЛП(Organization.Inn) + ?(Department.Kpp = "", "", "/" + СокрЛП(Department.Kpp));
		СтрокаДерева.Организация=	ПолучитьСвязаннуюОрганизацию(Organization.Id, Department.Kpp);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаДерева.Организация) Тогда
		Если Department = Неопределено Тогда
			Kpp=	Organization.Kpp;
		Иначе
			Kpp=	Department.Kpp;
		КонецЕсли;
		НайденнаяОрганизация=	ТаблицаНеподключенныхОрганизаций.НайтиСтроки(Новый Структура("ИНН, КПП", Organization.Inn, Kpp));
		Если НайденнаяОрганизация.Количество() > 0 Тогда
			СтрокаДерева.Организация=	НайденнаяОрганизация[0].Организация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуОрганизацийДиадок()
	
	СписокОрганизаций.ПолучитьЭлементы().Очистить();
	
	OrganizationList= Платформа.ПараметрыКлиент.КонтекстРаботаССерверомДиадок.DiadocConnection.GetOrganizationList();
	Для Индекс = 0 По OrganizationList.Count - 1 Цикл
		
		СтрокаОрганизации=	СписокОрганизаций.ПолучитьЭлементы().Добавить();
		Organization=	OrganizationList.GetItem(Индекс);
		ЗаполнитьСтрокуДерева(СтрокаОрганизации, Organization, Неопределено);
		
		Для ИндексПодразделений = 0 По Organization.Departments.Count - 1 Цикл
			Department=	Organization.Departments.GetItem(ИндексПодразделений);
			Если НЕ ПустаяСтрока(Department.Kpp) И Department.Kpp <> Organization.Kpp Тогда
				СтрокаОрганизации.Родитель=	Истина;
				СтрокаПодразделения=	СтрокаОрганизации.ПолучитьЭлементы().Добавить();
				ЗаполнитьСтрокуДерева(СтрокаПодразделения, Organization, Department);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого СтрокаСписка Из СписокОрганизаций.ПолучитьЭлементы() Цикл
		Элементы.СписокОрганизаций.Развернуть(СтрокаСписка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	ВременнаяТаблица=	МетодСервера(,"ПолучитьТаблицуОрганизацийКоторыеНеПодключеныКДиадоку");
	ЗначениеВРеквизитФормы(ВременнаяТаблица, "ТаблицаНеподключенныхОрганизаций");
	
КонецПроцедуры

&НаКлиенте
функция ПредставлениеОрганизацииВТаблице(ИНН, КПП)
		
	ТаблицаОрганизаций = СвернутьМассивСтруктур(ТаблицаДанныхОрганизаций, Новый Структура("ИНН, КПП, Организация"));
	ОрганизацииПоИННКПП = НайтиСтрокиВМассивеСтруктур(ТаблицаОрганизаций, Новый структура("ИНН, КПП", ИНН, КПП));
	
	Возврат ОрганизацииПоИННКПП;
		
КонецФункции

&НаКлиенте
процедура УстановитьПраметрыЯщикаВТаблице(стр, ИНН, КПП)
	//ТаблицаЯщиков  =  ТаблицаДанныхОрганизаций.Скопировать();
	ТаблицаЯщиков = СвернутьМассивСтруктур(ТаблицаДанныхОрганизаций, Новый Структура("ИНН, КПП, Наименование, OrganizationId, DepartmentKpp"));
	
	ЯщикиОрганизации = НайтиСтрокиВМассивеСтруктур(ТаблицаЯщиков, Новый структура("ИНН, КПП", ИНН, КПП));
	Если ЯщикиОрганизации.количество()=1 тогда 
		стр.ящикДиадок 	= ЯщикиОрганизации[0].Наименование;
		стр.OrganizationId		= ЯщикиОрганизации[0].OrganizationId;
		стр.DepartmentKpp		= ЯщикиОрганизации[0].DepartmentKpp;
	Иначе 
		стр.ящикДиадок = "Выберите ящик"
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция Установить_BoxID_для_Организация(Организация, OrganizationId, ЯщикДиадок = "", DepartmentKpp = "")
	
	Возврат МетодСервера(,"Установить_BoxID_для_Организация", Организация, OrganizationId, ЯщикДиадок, DepartmentKpp);
	
КонецФункции

&НаКлиенте
Процедура Добавить(Команда)

	ЕстьРезультат = Ложь;
	
	Для каждого СтрокаОрганизации Из СписокОрганизаций.ПолучитьЭлементы() Цикл
		
		Если ЗначениеЗаполнено(СтрокаОрганизации.ОрганизацияСтарая) Тогда
			Установить_BoxID_для_Организация(СтрокаОрганизации.ОрганизацияСтарая, "", "");			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОрганизации.Организация) Тогда
			Установить_BoxID_для_Организация(СтрокаОрганизации.Организация, СтрокаОрганизации.OrganizationId, СтрокаОрганизации.Name);
		КонецЕсли;
		
		Для Каждого СтрокаПодразделения Из СтрокаОрганизации.ПолучитьЭлементы() Цикл
			
			Если ЗначениеЗаполнено(СтрокаПодразделения.ОрганизацияСтарая) Тогда
				Установить_BoxID_для_Организация(СтрокаПодразделения.ОрганизацияСтарая, "", "", "");
			КонецЕсли;
						
			Если ЗначениеЗаполнено(СтрокаПодразделения.Организация) Тогда
				Установить_BoxID_для_Организация(СтрокаПодразделения.Организация, СтрокаПодразделения.OrganizationId, СтрокаПодразделения.Name, СтрокаПодразделения.DepartmentKpp);
			КонецЕсли;
			
		КонецЦикла;
		
	Конеццикла;
	
	Закрыть(Истина);

КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ=	Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийПередУдалением(Элемент, Отказ)
	Отказ=	Истина;
КонецПроцедуры

&НаКлиенте
Функция ОрганизацияСопоставлена(Организация, ДеревоСтрока)
	
	СтрокиДерева= ДеревоСтрока.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если СтрокаДерева.Организация = Организация ИЛИ ОрганизацияСопоставлена(Организация, СтрокаДерева) Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОткрытиеФормыВыбораКонтрагента(РезультатВыбора, ТекущиеДанные) Экспорт
	
	Если НЕ РезультатВыбора = Неопределено Тогда
		Если ОрганизацияСопоставлена(РезультатВыбора, СписокОрганизаций) Тогда
			ПоказатьПредупреждение(, "Данная организация уже сопоставлена, выберите другую организацию", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Иначе
			ТекущиеДанные.Организация=	РезультатВыбора;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийВклПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Элементы.СписокОрганизаций.ТекущиеДанные.Организация) Тогда
		Элементы.СписокОрганизаций.ТекущиеДанные.Вкл=	Ложь;
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	
	Если Элементы.СписокОрганизаций.ТекущийЭлемент = Элементы.СписокОрганизаций.ПодчиненныеЭлементы.СписокОрганизацийОрганизация Тогда
		
		ТекущиеДанные= Элементы.СписокОрганизаций.ТекущиеДанные;
			
		ПараметрыФормы= Новый Структура("Отбор", Новый Структура);
		ПараметрыФормы.Отбор.Вставить("ИНН", ТекущиеДанные.ИНН);
		ПараметрыФормы.Отбор.Вставить("КПП", ТекущиеДанные.КПП);
		
		МетодКлиента(,"ОткрытьФормуОбъектаИБМодально",,"Справочник.Организации.ФормаВыбора", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораКонтрагента", ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	Если Элементы.СписокОрганизаций.ТекущийЭлемент = Элементы.СписокОрганизаций.ПодчиненныеЭлементы.СписокОрганизацийОрганизация Тогда
		
		ТекущиеДанные = Элементы.СписокОрганизаций.ТекущиеДанные;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Организация) Тогда
			
			ТекущиеДанные.ОрганизацияСтарая = ТекущиеДанные.Организация;
			ТекущиеДанные.Организация 		= ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНаименованиеСистемы()
	
	ЭтаФорма.Заголовок = "Связь организаций " + Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы + " и 1С"	;
	ЭтаФорма.Элементы.Декорация1.Заголовок = "Выберите организации, с которыми будете работать в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж;
	ЭтаФорма.Элементы.СписокОрганизаций.ПодчиненныеЭлементы.СписокОрганизацийЯщикДиадок.Заголовок = "Организация в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж + ", ИНН/КПП"
	
КонецПроцедуры // УстановитьНаименованиеСистемы()



