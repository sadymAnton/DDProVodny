
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

&НаКлиенте
Перем ДокументОснование, СчетФактура, СчетФактураДляСопоставления;

&НаКлиенте
Перем ЭДОбъект Экспорт; 
	
#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	Параметры.Свойство("Контрагент",  Контрагент);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("BoxID",  	  BoxID);
	Параметры.Свойство("DocumentID",  DocumentID);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);
	
	ЭДОбъект= ЭтаФорма.ВладелецФормы.ЭДОбъект;

    ОбновитьСсылки();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСсылки()
	
	МассивДокументов= МетодСервера(, "DocumentID_2_МассивДокументов", DocumentID, BoxID);
	
	Для Каждого Документ ИЗ МассивДокументов Цикл
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			СчетФактура= Документ;
		Иначе
			ДокументОснование= Документ;
		КонецЕсли;
	КонецЦикла;
		
	ПолучитьСчетФактуруДляСопоставления();
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Элементы.ДокументОснование.Заголовок= "Создать...";
		Элементы.СчетФактура.Заголовок=  	  "Создать...";
		
		Элементы.ДокументОснование.Доступность= Истина;
		Элементы.СчетФактура.Доступность=  	    Ложь;
		
		Элементы.СчетФактура.ЦветТекста=  WEBЦвета.Серый;
		Элементы.СчетФактура.Гиперссылка= Ложь;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(СчетФактура) Тогда
		
		Элементы.ДокументОснование.Заголовок= ДокументОснование;
		
		Если ЗначениеЗаполнено(СчетФактураДляСопоставления) Тогда
			Элементы.СчетФактура.Заголовок=  "Сопоставить с " + СчетФактураДляСопоставления;
		Иначе
			Элементы.СчетФактура.Заголовок=  "Создать...";
		КонецЕсли;
		
		Элементы.ДокументОснование.Доступность= Истина;
		Элементы.СчетФактура.Доступность=  	    Истина;
		
		Элементы.СчетФактура.ЦветТекста=  WEBЦвета.Синий;
		Элементы.СчетФактура.Гиперссылка= Истина;
		
	Иначе
		
		Элементы.ДокументОснование.Заголовок= ДокументОснование;
		Элементы.СчетФактура.Заголовок=  	  СчетФактура;
		
		Элементы.ДокументОснование.Доступность= Истина;
		Элементы.СчетФактура.Доступность=		Истина;
		
		Элементы.СчетФактура.ЦветТекста=  WEBЦвета.Синий;
		Элементы.СчетФактура.Гиперссылка= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСчетФактуруДляСопоставления()
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		МассивСсылокРНК = Новый Массив;
		МассивСсылокРНК.Добавить(ДокументОснование);
		Если ЭДОбъект.Direction = "Inbound" Тогда
			СчетФактураДляСопоставления= МетодКлиента("Модуль_Клиент", "ПолучитьПодходящуюСФ", МассивСсылокРНК);
		Иначе
			СчетФактураДляСопоставления= МетодКлиента("Модуль_Клиент", "ПолучитьПодходящуюСФ", МассивСсылокРНК, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		МетодКлиента(,"ОткрытьФормуОбъектаИБ", ДокументОснование);
	Иначе
		ДокументОснование= СоздатьСопоставитьДокументОснование(Элементы.ДокументОснование.Заголовок = "Создать...");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетФактураНажатие(Элемент)
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		МетодКлиента(,"ОткрытьФормуОбъектаИБ", СчетФактура);
	Иначе
		
		Если ЗначениеЗаполнено(СчетФактураДляСопоставления) Тогда
			
			СписокРазличающихсяРеквизитов = МетодСервера(, "ПолучитьСписокРазличающихсяРеквизитов", СчетФактураДляСопоставления, ЭДОбъект.DocumentNumber, ЭДОбъект.DocumentDate);

			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДокументСсылка", 	СчетФактураДляСопоставления);
			ДополнительныеПараметры.Вставить("DocumentNumber", 	ЭДОбъект.DocumentNumber);
			ДополнительныеПараметры.Вставить("DocumentDate", 	ЭДОбъект.DocumentDate);
			ДополнительныеПараметры.Вставить("СписокРазличающихсяРеквизитов", СписокРазличающихсяРеквизитов);
			
			Если ЗначениеЗаполнено(СписокРазличающихсяРеквизитов) Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтаФорма, ДополнительныеПараметры),
								"Следующие реквизиты: "+СписокРазличающихсяРеквизитов+"
								|отличаются в электронном документе и документе 1С.
								|Обновить данные в документе 1С?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			Иначе
				СчетФактура= СчетФактураДляСопоставления;
				МетодКлиента(,"ОткрытьФормуОбъектаИБМодально", СчетФактура,,, ЭтаФорма, "ОбработчикСопоставлениеСФ");
			КонецЕсли;
			
		Иначе
			
			МассивСсылокРНК = Новый Массив;
			МассивСсылокРНК.Добавить(ДокументОснование);
			МетодКлиента("Модуль_ЛогикаПоведениеФорм", "СоздатьНовыйСчетФактуру", ЭтаФорма, Контрагент, Организация, ЭДОбъект, МассивСсылокРНК);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(РезультатЗапроса, ДополнительныеПараметры) Экспорт
	
	СчетФактура= ДополнительныеПараметры.ДокументСсылка;
	МетодКлиента(,"ОткрытьФормуОбъектаИБМодально", СчетФактура,,, ЭтаФорма, "ОбработчикСопоставлениеСФ");
	
	Если РезультатЗапроса = КодВозвратаДиалога.Да Тогда
	
		РезультатОбновления=	ОбновитьДанныеДокумента(СчетФактура, ДополнительныеПараметры.DocumentDate, ДополнительныеПараметры.DocumentNumber);
		Если РезультатОбновления.ДанныеОбновлены = Истина Тогда
			ОтобразитьИзменениеДанных(СчетФактура, ВидИзмененияДанных.Изменение);
		КонецЕсли;
		
		Если НЕ РезультатОбновления.ОписаниеОшибки = "" Тогда
			ПоказатьПредупреждение(, РезультатОбновления.ОписаниеОшибки, 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеДокумента(ДокументСсылка, DocumentDate, DocumentNumber)
	
	Возврат МетодСервера(,"ОбновитьДанныеДокумента", ДокументСсылка, DocumentDate, DocumentNumber);
	
КонецФункции
	
&НаКлиенте
Функция СоздатьСопоставитьДокументОснование(СоздатьДокументОснование)
	
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("BoxID", 				ЭДОбъект.OrganizationID);
	ПараметрыФормы.Вставить("DocumentID", 			ЭДОбъект.DocumentID);
	ПараметрыФормы.Вставить("Direction", 			ЭДОбъект.Direction);
	ПараметрыФормы.Вставить("Type",					ЭДОбъект.type);
	ПараметрыФормы.Вставить("CounteragentBoxID", 	ЭДОбъект.Counteragent.ID);
	
	ПараметрыФормы.Вставить("Контрагент", 			Контрагент);
	ПараметрыФормы.Вставить("Организация", 			Организация);
	
	Если СоздатьДокументОснование Тогда
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВводаНакладной", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВводаНакладной");
		
	Иначе
		
		ПараметрыФормы.Вставить("DocumentDate", 	ЭДОбъект.DocumentDate);
		ПараметрыФормы.Вставить("DocumentNumber", 	ЭДОбъект.DocumentNumber);
		ПараметрыФормы.Вставить("Total",			ЭДОбъект.Total);
		ПараметрыФормы.Вставить("Режим", 			"Сопоставление");
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыбораДокумента", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораДокумента");
		
	КонецЕсли;
	
КонецФункции
	
&НаКлиенте
Процедура ОбработчикОткрытиеФормыВводаНакладной(ПараметрыФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПараметрыФормы = Неопределено Тогда
		Если ПараметрыФормы.Режим = "Сопоставление" Тогда
			СоздатьСопоставитьДокументОснование(Ложь);
		Иначе
			Если ЗначениеЗаполнено(ПараметрыФормы.Документ1С) Тогда
				ДокументОснование = ПараметрыФормы.Документ1С;
				МетодСервера(, "Установить_DocumentID_Для_Документ", ДокументОснование, DocumentID, BoxID);
				ПолучитьСчетФактуруДляСопоставления();
				УправлениеФормой();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОткрытиеФормыВыбораДокумента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатЗакрытия.Документ1С) Тогда
			
			ДокументОснование = РезультатЗакрытия.Документ1С;
			
			РезультатОбновления=	ОбновитьДанныеДокумента(ДокументОснование, ЭДОбъект.DocumentDate, ЭДОбъект.DocumentNumber);
			Если РезультатОбновления.ДанныеОбновлены = Истина Тогда
				ОтобразитьИзменениеДанных(ДокументОснование, ВидИзмененияДанных.Изменение);
			КонецЕсли;
			
			Если НЕ РезультатОбновления.ОписаниеОшибки = "" Тогда
				ПоказатьПредупреждение(, РезультатОбновления.ОписаниеОшибки, 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			КонецЕсли;
			
			МетодСервера(, "Установить_DocumentID_Для_Документ", ДокументОснование, DocumentID, BoxID);
			ПолучитьСчетФактуруДляСопоставления();
			УправлениеФормой();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикЗакрытиеФормыСФ(РезультатЗакрытия, ДокументОбъект) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		СчетФактура = ДокументОбъект.Ссылка;
		ОбновитьСопоставлениеСФ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСопоставлениеСФ(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ОбновитьСопоставлениеСФ();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСопоставлениеСФ()
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		
		МетодСервера(, "Установить_DocumentID_Для_Документ", СчетФактура, DocumentID, BoxID);
		УправлениеФормой();
		
		ПараметрыОповещения=	Новый Структура;
		ПараметрыОповещения.Вставить("ТипСущности", "Документ");
		ПараметрыОповещения.Вставить("BoxID", 		ЭДОбъект.OrganizationID);
		ПараметрыОповещения.Вставить("DocumentID", 	ЭДОбъект.DocumentID);
		ПараметрыОповещения.Вставить("Документ1С",	СчетФактура);
		
		МетодКлиента(,"ОповеститьФормы", "ИзменениеСвязиДД1С", ПараметрыОповещения, ЭтаФорма);
		
		Параметры.Документ1С = СчетФактура;
		Закрыть(Параметры);
		
	КонецЕсли;
	
КонецПроцедуры
