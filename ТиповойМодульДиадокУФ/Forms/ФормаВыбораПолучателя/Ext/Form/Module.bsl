&НаКлиенте
Перем СписокДолжностей;

&НаКлиенте
Перем CurrentUserId;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	Организация= Параметры.Организация;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	Если Параметры.Режим = "ПередачаНаОбработку" Тогда
		Элементы.Организация.Доступность=			Ложь;
		Элементы.ДолжностьПолучателя.Видимость=		Ложь;
		Элементы.ДолжностьПолучателя.Доступность=	Ложь;
	КонецЕсли;
	
	Если Параметры.ResolutionRequestType = "ApprovementRequest" И Параметры.Режим = "ГрупповаяПередачаНаОбработку" Тогда
		Элементы.ГруппаПодписант.Видимость= 				Истина;
		Элементы.ДолжностьКонечногоПодписанта.Видимость= 	Истина;
	Иначе
		Элементы.ГруппаПодписант.Видимость= 				Ложь;
		Элементы.ДолжностьКонечногоПодписанта.Видимость= 	Ложь;
	КонецЕсли;
		
	Заголовок=	"Передача на " + ?(Параметры.ResolutionRequestType = "ApprovementRequest", "согласование", "подписание");
	
	ОбновлениеФормы();
	
	Если Параметры.ResolutionRequestType = "ApprovementRequest" И Параметры.Режим = "ГрупповаяПередачаНаОбработку" Тогда
		ПодставитьДанныеКонечногоПодписанта();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

//{ ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

	&НаКлиенте
	Процедура ПодразделениеНажатие(Элемент, СтандартнаяОбработка)
		
		СтандартнаяОбработка=	Ложь;
				
		ПараметрыФормы=	Новый Структура();
		ПараметрыФормы.Вставить("DepartmentId", 	DepartmentID);
		ПараметрыФормы.Вставить("OrganizationId", 	Параметры.OrganizationId);
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ВыборПодразделенияОрганизации", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораПодразделенияОрганизации");

	КонецПроцедуры
		
	&НаКлиенте
	Процедура ПолучательПриИзменении(Элемент)
		
		Если ЗначениеЗаполнено(Получатель) = Истина Тогда
			UserID= 				Получатель;
			UserName= 				Элемент.СписокВыбора.НайтиПоЗначению(Получатель).Представление;
			ДолжностьПолучателя= 	СписокДолжностей[UserID];
		Иначе
			UserID= 				"";
			UserName= 				"";
			ДолжностьПолучателя= 	"";
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
		Элементы.Получатель.СписокВыбора.СортироватьПоПредставлению();
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПолучательОчистка(Элемент, СтандартнаяОбработка)
		
		UserID=		"";
		UserName=	"";
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура КонечныйПодписантНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
		Элементы.КонечныйПодписант.СписокВыбора.СортироватьПоПредставлению();
		
	КонецПроцедуры

	&НаКлиенте
	Процедура КонечныйПодписантПриИзменении(Элемент)
		
		Если ЗначениеЗаполнено(КонечныйПодписант) = Истина Тогда
			КонечныйПодписантПредставление= Элемент.СписокВыбора.НайтиПоЗначению(КонечныйПодписант).Представление;
			ДолжностьКонечногоПодписанта= 	СписокДолжностей[КонечныйПодписант];
		Иначе
			КонечныйПодписантПредставление= "";
			ДолжностьКонечногоПодписанта= 	"";
		КонецЕсли;
		
	КонецПроцедуры
	
//} ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


//{ ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

	&НаКлиенте
	Процедура ЗаполнитьСписокПолучателей()
		
		СписокПолучателей=	Элементы.Получатель.СписокВыбора;
		СписокПолучателей.Очистить();
			
		СписокПодписантов = Элементы.КонечныйПодписант.СписокВыбора;
		СписокПодписантов.Очистить();
		
		СписокДолжностей = Новый Соответствие;
					
		Organization= 			Платформа.ПараметрыКлиент.КонтекстРаботаССерверомДиадок.DiadocConnection.GetOrganizationById(Параметры.OrganizationId);
		МассивПользователей=	Organization.GetUsers();
		Для Индекс = 0 По МассивПользователей.Count - 1 Цикл
			
			User= МассивПользователей.GetItem(Индекс);
			
			Если User.IsCurrentUser Тогда
				CurrentUserId = User.Id;
			КонецЕсли;
						
			Если (Параметры.ResolutionRequestType = "ApprovementRequest" И User.Permissions.CanAddResolutions)
				ИЛИ (Параметры.ResolutionRequestType = "SignatureRequest" И User.Permissions.CanSignIncomingDocuments) Тогда
				
				Если ЗначениеЗаполнено(DepartmentId) Тогда
					
					Если НЕ User.Permissions.UserDepartment = Неопределено И User.Permissions.UserDepartment.Id = DepartmentId Тогда
						СписокПолучателей.Добавить(User.Id, User.Name);
						СписокПодписантов.Добавить(User.Id, User.Name);
						СписокДолжностей.Вставить(User.Id, 	User.Position); 					
					КонецЕсли;
					
					ВыбранныеПодразделения = User.Permissions.SelectedDepartments;
					Для Ц = 0 По ВыбранныеПодразделения.Count - 1 Цикл
						
						ВыбранноеПодразделение = ВыбранныеПодразделения.GetItem(Ц);
						
						Если НЕ ВыбранноеПодразделение = Неопределено И ВыбранноеПодразделение.Id = DepartmentId Тогда
							Если СписокПолучателей.НайтиПоЗначению(User.Id) = Неопределено Тогда
								СписокПолучателей.Добавить(User.Id, User.Name);
								СписокПодписантов.Добавить(User.Id, User.Name);
								СписокДолжностей.Вставить(User.Id, 	User.Position);
							КонецЕсли;
						КонецЕсли;
						
					КонецЦикла;				
									
				Иначе
					СписокПолучателей.Добавить(User.Id, User.Name);
					СписокПодписантов.Добавить(User.Id, User.Name);
					СписокДолжностей.Вставить(User.Id, 	User.Position);
				КонецЕсли;
										
			КонецЕсли;
		КонецЦикла;
			
	КонецПроцедуры
	
	&НаСервере
	Процедура УстановитьНастройкиПодписантаСогласованиеСервер(КонечныйПодписант, ДолжностьКонечногоПодписанта)
			
		МетодСервера(,"УстановитьНастройкиПодписантаСогласование", КонечныйПодписант, ДолжностьКонечногоПодписанта);

	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПодставитьДанныеКонечногоПодписанта()
		
		СписокПодписантов= Элементы.КонечныйПодписант.СписокВыбора;
		Если НЕ СписокПодписантов.Количество() = 0 Тогда
						
			НастройкиКонечногоПодписанта= ПолучитьНастройкиПодписантаСогласованиеСервер();
									
			Если НЕ НастройкиКонечногоПодписанта = Неопределено И НастройкиКонечногоПодписанта.Свойство("ИдентификаторКонечногоПодписанта") = Истина Тогда
			
				НайденныйПодписант= СписокПодписантов.НайтиПоЗначению(НастройкиКонечногоПодписанта.ИдентификаторКонечногоПодписанта);
				Если НЕ НайденныйПодписант = Неопределено Тогда
			
					КонечныйПодписант= 				НайденныйПодписант.Значение;
					КонечныйПодписантПредставление= НайденныйПодписант.Представление;
					
					ДолжностьКонечногоПодписанта= 	?(НастройкиКонечногоПодписанта.Свойство("ДолжностьКонечногоПодписанта")=Истина, НастройкиКонечногоПодписанта.ДолжностьКонечногоПодписанта, "");
				
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаСервере
	Функция ПолучитьНастройкиПодписантаСогласованиеСервер()
		
		Возврат МетодСервера(,"ПолучитьНастройкиПодписантаСогласование");
		
	КонецФункции
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВыбораПодразделенияОрганизации(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда 
			Если НЕ РезультатЗакрытия.DepartmentID = DepartmentID Тогда
				DepartmentID=	РезультатЗакрытия.DepartmentID;
				DepartmentName=	РезультатЗакрытия.DepartmentName;
				ОбновлениеФормы();
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбновлениеФормы()
		
		ЗаполнитьСписокПолучателей();
			
		Если Элементы.Получатель.СписокВыбора.Количество() = 0 Тогда
			
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаНетПолучателя.Видимость=	Истина;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаНетПолучателя.Доступность=	Истина;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаПолучатель.Видимость=		Ложь;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаПолучатель.Доступность=		Ложь;
			
			Элементы.ГруппаПолучателя.ТекущаяСтраница=	Элементы.ГруппаНетПолучателя;
			
			Элементы.НадписьНетПолучателей.Заголовок=	"В подразделении нет сотрудников с правом " + ?(Параметры.ResolutionRequestType = "ApprovementRequest", "согласования", "подписи");
			
		Иначе
			
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаНетПолучателя.Видимость=	Ложь;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаНетПолучателя.Доступность=	Ложь;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаПолучатель.Видимость=		Истина;
			Элементы.ГруппаПолучателя.ПодчиненныеЭлементы.ГруппаПолучатель.Доступность=		Истина;
			
			Элементы.ГруппаПолучателя.ТекущаяСтраница=	Элементы.ГруппаПолучатель;
			
		КонецЕсли;

		ФИОПолучателя=	"";
		ИДПолучателя=	"";
		
		ПредставлениеПодразделения=	?(ПустаяСтрока(DepartmentName), "Головное подразделение", DepartmentName);
		
	КонецПроцедуры

//} ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


//{ КОМАНДЫ

	&НаКлиенте
	Процедура Ок(Команда)
		
		Если ПустаяСтрока(UserID) Тогда
			ПоказатьПредупреждение(, "Не указан получатель документа.", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			Возврат;
		КонецЕсли;

		ПараметрыПолучателя=	Новый Структура();
		
		ПараметрыПолучателя.Вставить("Организация", 			Организация);
		ПараметрыПолучателя.Вставить("ResolutionRequestType", 	Параметры.ResolutionRequestType);
		ПараметрыПолучателя.Вставить("TargetDepartmentId", 		DepartmentId);
		ПараметрыПолучателя.Вставить("TargetUserId", 			UserID);
		ПараметрыПолучателя.Вставить("ДолжностьПолучателя", 	ДолжностьПолучателя);
		ПараметрыПолучателя.Вставить("ФИОПолучателя", 			UserName);
		ПараметрыПолучателя.Вставить("Комментарий", 			Комментарий);
		ПараметрыПолучателя.Вставить("ЭтоТекущийПользователь",	(CurrentUserId = UserID) );
		
		
		ПараметрыПолучателя.Вставить("ДолжностьПодписанта", 	ДолжностьКонечногоПодписанта);
		ПараметрыПолучателя.Вставить("ФИОПодписанта", 			КонечныйПодписантПредставление);
		
		УстановитьНастройкиПодписантаСогласованиеСервер(КонечныйПодписант, ДолжностьКонечногоПодписанта);
				
		Закрыть(ПараметрыПолучателя);

	КонецПроцедуры

//} КОМАНДЫ


CurrentUserId = "";





















