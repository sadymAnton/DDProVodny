&НаКлиенте
Перем ИспользоватьНеСтандартноеХранениеНомераАкта;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт, Манифест Экспорт;

&НаКлиенте
Перем НомерИтерацииВызоваМодуля;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL)
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4, 
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL)
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4, 
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект()
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Процедура Инициализировать(ИмяМодуля) Экспорт
	
	Если НомерИтерацииВызоваМодуля = Неопределено Тогда
		НомерИтерацииВызоваМодуля= 0;
	КонецЕсли;
	
	НомерИтерацииВызоваМодуля= НомерИтерацииВызоваМодуля + 1;
	
	Если Манифест = Неопределено Тогда
		Платформа.ЗаполнитьМанифест(ЭтаФорма, ИмяМодуля);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПеременные() Экспорт
	
	// Разрывается циклическая ссылка, для того чтобы исключить утечку памяти.
	// Модуль может быть вызван повторно во вложенных методах,
	// поэтому очищаем переменные, ТОЛЬКО если это начальная итерация вызова модуля.
	
	НомерИтерацииВызоваМодуля= НомерИтерацииВызоваМодуля - 1;
	
	Если НомерИтерацииВызоваМодуля = 0 Тогда
		Платформа= 					  Неопределено;
		Объект.ПараметрыКлиентСервер= Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область МАНИФЕСТ

// Все функции и процедуры тела модуля должны быть экспортными и добавлены в соответствующую структуру!

&НаКлиенте
Функция ФункцииМодуля() Экспорт
	
	СтруктураМетодов= Новый Структура;
	
	// Шаблон: Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, <Имя функции>, <Параметры строкой>, <Вариант кэширования>, <Переопределение>);
	//Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НеИспользовать", Истина);
	//Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НаВремяВыполнения", Истина);
	//Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ПримерФункции", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", "НаВремяСеанса", Истина);
	//...
	Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗаполнитьСтруктуруРаботаСНомеромАкта", "", "НеИспользовать", Истина);
	Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "УказатьМестоХраненияРеквизитаНомерАкта", "СтруктураРаботаСНомеромАкта", "НеИспользовать", Ложь);
	Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗадатьПараметрыХраненияНомераАктаСпецРеквизит", "СтруктураРаботаСНомеромАкта", "НеИспользовать", Ложь);
	Платформа.ДобавитьФункциюВМанифест(СтруктураМетодов, "ЗадатьПараметрыХраненияНомераАктаДопРеквизит", "СтруктураРаботаСНомеромАкта", "НеИспользовать", Ложь);
	
	Возврат СтруктураМетодов;
	
КонецФункции

&НаКлиенте
Функция ПроцедурыМодуля() Экспорт
	
	СтруктураМетодов= Новый Структура;
	
	// Шаблон: Платформа.ДобавитьПроцедуруВМанифест(СтруктураМетодов, <Имя процедуры>, <Параметры строкой>, <Переопределение>);
	//Платформа.ДобавитьПроцедуруВМанифест(СтруктураМетодов, "ПримерПроцедуры", "ОбязательныйПараметр, НеобязательныйПараметр= Неопределено", Истина);
	//...
	
	Возврат СтруктураМетодов;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Функция ЗаполнитьСтруктуруРаботаСНомеромАкта() Экспорт
	
	СтруктураРаботаСНомеромАкта = Новый Структура;
	
	Если ИспользоватьНеСтандартноеХранениеНомераАкта Тогда
		МестоХраненияНомераАкта = УказатьМестоХраненияРеквизитаНомерАкта(СтруктураРаботаСНомеромАкта);
		СтруктураРаботаСНомеромАкта.Вставить("МестоХраненияНомераАкта", МестоХраненияНомераАкта);
		Если МестоХраненияНомераАкта = "СпециальнымРеквизитом" Тогда 
			СтруктураРаботаСНомеромАкта.Вставить("ПараметрыХраненияНомераАкта", ЗадатьПараметрыХраненияНомераАктаСпецРеквизит(СтруктураРаботаСНомеромАкта));
		ИначеЕсли МестоХраненияНомераАкта = "ДополнительнымРеквизитом" Тогда
			СтруктураРаботаСНомеромАкта.Вставить("ПараметрыХраненияНомераАкта", ЗадатьПараметрыХраненияНомераАктаДопРеквизит(СтруктураРаботаСНомеромАкта));
		КонецЕсли;	
	КонецЕсли;
	
	Возврат СтруктураРаботаСНомеромАкта;
	
КонецФункции

&НаКлиенте
Функция УказатьМестоХраненияРеквизитаНомерАкта(СтруктураРаботаСНомеромАкта)
	
	МестоХраненияРеквизитаНомерАкта = "";
	
	Если НЕ СтруктураРаботаСНомеромАкта.Свойство("МестоХраненияНомераАкта")=Неопределено Тогда
		
		//Если НомерАкта хранится в специальном реквизите, то передаем ниже написанную строку
		МестоХраненияРеквизитаНомерАкта = "СпециальнымРеквизитом";
		
		//Если НомерАкта хранится дополнительным реквизитом, то передаем ниже написанную строку
		//МестоХраненияРеквизитаНомерАкта = "ДополнительнымРеквизитом";
		
	КонецЕсли;
	
	Возврат МестоХраненияРеквизитаНомерАкта; 
	
КонецФункции

&НаКлиенте
Функция ЗадатьПараметрыХраненияНомераАктаСпецРеквизит(СтруктураРаботаСНомеромАкта)
		
	СтруктураПараметрыХраненияНомераАкта = "";
	
	Если НЕ СтруктураРаботаСНомеромАкта.Свойство("ПараметрыХраненияНомераАкта")=Неопределено Тогда
		
		СтруктураПараметрыХраненияНомераАкта = Новый Структура;
		
		СтруктураПараметрыХраненияНомераАкта.Вставить("ИмяРеквизита", "Комментарий");
							
		СтруктураРаботаСНомеромАкта.Вставить("ПараметрыХраненияНомераАкта", СтруктураПараметрыХраненияНомераАкта);
		
	КонецЕсли;
	
	Возврат СтруктураПараметрыХраненияНомераАкта;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗадатьПараметрыХраненияНомераАктаДопРеквизит(СтруктураРаботаСНомеромАкта)
	
	СтруктураПараметрыХраненияНомераАкта = "";
	
	Если НЕ СтруктураРаботаСНомеромАкта.Свойство("ПараметрыХраненияНомераАкта")=Неопределено Тогда
		
		СтруктураПараметрыХраненияНомераАкта = Новый Структура;
		
		СтруктураПараметрыХраненияНомераАкта.Вставить("ИмяРеквизита", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("ВнешнийНомер"));
						
		СтруктураРаботаСНомеромАкта.Вставить("ПараметрыХраненияНомераАкта", СтруктураПараметрыХраненияНомераАкта);
		
	КонецЕсли;
	
	Возврат СтруктураПараметрыХраненияНомераАкта;
	
КонецФункции



ИспользоватьНеСтандартноеХранениеНомераАкта = Ложь;